; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AliceBlue
PUBLIC	?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AntiqueWhite
PUBLIC	?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Aqua
PUBLIC	?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Aquamarine
PUBLIC	?Azure@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Azure
PUBLIC	?Beige@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Beige
PUBLIC	?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Bisque
PUBLIC	?Black@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Black
PUBLIC	?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::BlanchedAlmond
PUBLIC	?Blue@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Blue
PUBLIC	?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BlueViolet
PUBLIC	?Brown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Brown
PUBLIC	?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BurlyWood
PUBLIC	?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::CadetBlue
PUBLIC	?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chartreuse
PUBLIC	?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chocolate
PUBLIC	?Coral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Coral
PUBLIC	?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::CornflowerBlue
PUBLIC	?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Cornsilk
PUBLIC	?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Crimson
PUBLIC	?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Cyan
PUBLIC	?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkBlue
PUBLIC	?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkCyan
PUBLIC	?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkGoldenrod
PUBLIC	?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGray
PUBLIC	?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGreen
PUBLIC	?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkKhaki
PUBLIC	?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkMagenta
PUBLIC	?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkOliveGreen
PUBLIC	?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrange
PUBLIC	?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrchid
PUBLIC	?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkRed
PUBLIC	?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSalmon
PUBLIC	?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSeaGreen
PUBLIC	?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateBlue
PUBLIC	?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateGray
PUBLIC	?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkTurquoise
PUBLIC	?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkViolet
PUBLIC	?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepPink
PUBLIC	?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepSkyBlue
PUBLIC	?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DimGray
PUBLIC	?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DodgerBlue
PUBLIC	?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Firebrick
PUBLIC	?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::FloralWhite
PUBLIC	?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::ForestGreen
PUBLIC	?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Fuchsia
PUBLIC	?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Gainsboro
PUBLIC	?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GhostWhite
PUBLIC	?Gold@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gold
PUBLIC	?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Goldenrod
PUBLIC	?Gray@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gray
PUBLIC	?Green@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Green
PUBLIC	?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GreenYellow
PUBLIC	?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Honeydew
PUBLIC	?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::HotPink
PUBLIC	?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::IndianRed
PUBLIC	?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Indigo
PUBLIC	?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Ivory
PUBLIC	?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Khaki
PUBLIC	?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Lavender
PUBLIC	?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LavenderBlush
PUBLIC	?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LawnGreen
PUBLIC	?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LemonChiffon
PUBLIC	?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightBlue
PUBLIC	?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCoral
PUBLIC	?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCyan
PUBLIC	?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightGoldenrodYellow
PUBLIC	?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGreen
PUBLIC	?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGray
PUBLIC	?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightPink
PUBLIC	?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSalmon
PUBLIC	?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSeaGreen
PUBLIC	?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSkyBlue
PUBLIC	?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSlateGray
PUBLIC	?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSteelBlue
PUBLIC	?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightYellow
PUBLIC	?Lime@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Lime
PUBLIC	?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LimeGreen
PUBLIC	?Linen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Linen
PUBLIC	?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Magenta
PUBLIC	?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Maroon
PUBLIC	?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumAquamarine
PUBLIC	?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumBlue
PUBLIC	?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumOrchid
PUBLIC	?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumPurple
PUBLIC	?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSeaGreen
PUBLIC	?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSlateBlue
PUBLIC	?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSpringGreen
PUBLIC	?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumTurquoise
PUBLIC	?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumVioletRed
PUBLIC	?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MidnightBlue
PUBLIC	?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MintCream
PUBLIC	?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MistyRose
PUBLIC	?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Moccasin
PUBLIC	?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::NavajoWhite
PUBLIC	?Navy@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Navy
PUBLIC	?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OldLace
PUBLIC	?Olive@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Olive
PUBLIC	?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OliveDrab
PUBLIC	?Orange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orange
PUBLIC	?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OrangeRed
PUBLIC	?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orchid
PUBLIC	?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleGoldenrod
PUBLIC	?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PaleGreen
PUBLIC	?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleTurquoise
PUBLIC	?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleVioletRed
PUBLIC	?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PapayaWhip
PUBLIC	?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PeachPuff
PUBLIC	?Peru@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Peru
PUBLIC	?Pink@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Pink
PUBLIC	?Plum@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Plum
PUBLIC	?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PowderBlue
PUBLIC	?Purple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Purple
PUBLIC	?Red@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Red
PUBLIC	?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RosyBrown
PUBLIC	?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RoyalBlue
PUBLIC	?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SaddleBrown
PUBLIC	?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Salmon
PUBLIC	?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SandyBrown
PUBLIC	?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaGreen
PUBLIC	?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaShell
PUBLIC	?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Sienna
PUBLIC	?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B	; DirectX::g_BoxOffset
PUBLIC	?Silver@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Silver
PUBLIC	?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_RayEpsilon
PUBLIC	?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SkyBlue
PUBLIC	?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_RayNegEpsilon
PUBLIC	?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateBlue
PUBLIC	?g_FltMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_FltMin
PUBLIC	?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateGray
PUBLIC	?g_FltMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_FltMax
PUBLIC	?Snow@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Snow
PUBLIC	?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SpringGreen
PUBLIC	?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SteelBlue
PUBLIC	?Tan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Tan
PUBLIC	?Teal@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Teal
PUBLIC	?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Thistle
PUBLIC	?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Tomato
PUBLIC	?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Transparent
PUBLIC	?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Turquoise
PUBLIC	?Violet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Violet
PUBLIC	?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Wheat
PUBLIC	?White@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::White
PUBLIC	?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::WhiteSmoke
PUBLIC	?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Yellow
PUBLIC	?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::YellowGreen
PUBLIC	?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitVectorEpsilon
PUBLIC	?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitQuaternionEpsilon
PUBLIC	?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitPlaneEpsilon
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT ?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitPlaneEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitQuaternionEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitVectorEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f1a9a9br ; 0.603922 ; DirectX::Colors::YellowGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Yellow
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::WhiteSmoke
	DD	03f75f5f7r			; 0.960784
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?White@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?White@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::White
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Wheat
	DD	03f5edee0r			; 0.870588
	DD	03f33b3b4r			; 0.701961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Violet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Violet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::Violet
	DD	03f028283r			; 0.509804
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e808081r ; 0.25098 ; DirectX::Colors::Turquoise
	DD	03f60e0e2r			; 0.878431
	DD	03f50d0d2r			; 0.815686
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Transparent
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Tomato
	DD	03ec6c6c8r			; 0.388235
	DD	03e8e8e8fr			; 0.278431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f58d8dar ; 0.847059 ; DirectX::Colors::Thistle
	DD	03f3fbfc0r			; 0.74902
	DD	03f58d8dar			; 0.847059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Teal@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Teal@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Teal
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Tan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Tan
	DD	03f34b4b5r			; 0.705882
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e8c8c8dr ; 0.27451 ; DirectX::Colors::SteelBlue
	DD	03f028283r			; 0.509804
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::SpringGreen
	DD	03f800000r			; 1
	DD	03efeff00r			; 0.498039
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Snow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Snow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Snow
	DD	03f7afafcr			; 0.980392
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_FltMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_FltMax@DirectX@@3UXMVECTORF32@1@B DD 07f7fffffr ; 3.40282e+38 ; DirectX::g_FltMax
	DD	07f7fffffr			; 3.40282e+38
	DD	07f7fffffr			; 3.40282e+38
	DD	07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT ?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ee0e0e2r ; 0.439216 ; DirectX::Colors::SlateGray
	DD	03f008081r			; 0.501961
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_FltMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_FltMin@DirectX@@3UXMVECTORF32@1@B DD 0ff7fffffr ; -3.40282e+38 ; DirectX::g_FltMin
	DD	0ff7fffffr			; -3.40282e+38
	DD	0ff7fffffr			; -3.40282e+38
	DD	0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT ?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed4d4d6r ; 0.415686 ; DirectX::Colors::SlateBlue
	DD	03eb4b4b5r			; 0.352941
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B DD 09e3ce508r ; -1e-20 ; DirectX::g_RayNegEpsilon
	DD	09e3ce508r			; -1e-20
	DD	09e3ce508r			; -1e-20
	DD	09e3ce508r			; -1e-20
CONST	ENDS
;	COMDAT ?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::SkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f6bebedr			; 0.921569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B DD 01e3ce508r ; 1e-20 ; DirectX::g_RayEpsilon
	DD	01e3ce508r			; 1e-20
	DD	01e3ce508r			; 1e-20
	DD	01e3ce508r			; 1e-20
CONST	ENDS
;	COMDAT ?Silver@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Silver@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f40c0c2r ; 0.752941 ; DirectX::Colors::Silver
	DD	03f40c0c2r			; 0.752941
	DD	03f40c0c2r			; 0.752941
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B
CONST	SEGMENT
?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_BoxOffset
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f20a0a1r ; 0.627451 ; DirectX::Colors::Sienna
	DD	03ea4a4a5r			; 0.321569
	DD	03e34b4b5r			; 0.176471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::SeaShell
	DD	03f75f5f7r			; 0.960784
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e38b8b9r ; 0.180392 ; DirectX::Colors::SeaGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03eaeaeafr			; 0.341176
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f74f4f6r ; 0.956863 ; DirectX::Colors::SandyBrown
	DD	03f24a4a5r			; 0.643137
	DD	03ec0c0c2r			; 0.376471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Salmon
	DD	03f008081r			; 0.501961
	DD	03ee4e4e6r			; 0.447059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::SaddleBrown
	DD	03e8a8a8br			; 0.270588
	DD	03d989899r			; 0.0745098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e828283r ; 0.254902 ; DirectX::Colors::RoyalBlue
	DD	03ed2d2d4r			; 0.411765
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3cbcbdr ; 0.737255 ; DirectX::Colors::RosyBrown
	DD	03f0f8f90r			; 0.560784
	DD	03f0f8f90r			; 0.560784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Red@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Red@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Red
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Purple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Purple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Purple
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::PowderBlue
	DD	03f60e0e2r			; 0.878431
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Plum@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Plum@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5ddddfr ; 0.866667 ; DirectX::Colors::Plum
	DD	03f20a0a1r			; 0.627451
	DD	03f5ddddfr			; 0.866667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Pink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Pink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Pink
	DD	03f40c0c2r			; 0.752941
	DD	03f4bcbcdr			; 0.796079
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Peru@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Peru@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::Peru
	DD	03f058586r			; 0.521569
	DD	03e7cfcfer			; 0.247059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PeachPuff
	DD	03f5adadcr			; 0.854902
	DD	03f39b9bar			; 0.72549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PapayaWhip
	DD	03f6feff1r			; 0.937255
	DD	03f55d5d7r			; 0.835294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5bdbddr ; 0.858824 ; DirectX::Colors::PaleVioletRed
	DD	03ee0e0e2r			; 0.439216
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2fafb0r ; 0.686275 ; DirectX::Colors::PaleTurquoise
	DD	03f6eeef0r			; 0.933333
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f189899r ; 0.596078 ; DirectX::Colors::PaleGreen
	DD	03f7bfbfdr			; 0.984314
	DD	03f189899r			; 0.596078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::PaleGoldenrod
	DD	03f68e8ear			; 0.909804
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Orchid
	DD	03ee0e0e2r			; 0.439216
	DD	03f56d6d8r			; 0.839216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::OrangeRed
	DD	03e8a8a8br			; 0.270588
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Orange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Orange
	DD	03f25a5a6r			; 0.647059
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed6d6d8r ; 0.419608 ; DirectX::Colors::OliveDrab
	DD	03f0e8e8fr			; 0.556863
	DD	03e0c8c8dr			; 0.137255
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Olive@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Olive@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Olive
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7dfdffr ; 0.992157 ; DirectX::Colors::OldLace
	DD	03f75f5f7r			; 0.960784
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Navy@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Navy@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Navy
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::NavajoWhite
	DD	03f5edee0r			; 0.870588
	DD	03f2dadaer			; 0.678431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Moccasin
	DD	03f64e4e6r			; 0.894118
	DD	03f35b5b6r			; 0.709804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::MistyRose
	DD	03f64e4e6r			; 0.894118
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::MintCream
	DD	03f800000r			; 1
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03dc8c8car ; 0.0980392 ; DirectX::Colors::MidnightBlue
	DD	03dc8c8car			; 0.0980392
	DD	03ee0e0e2r			; 0.439216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f47c7c9r ; 0.780392 ; DirectX::Colors::MediumVioletRed
	DD	03da8a8a9r			; 0.0823529
	DD	03f058586r			; 0.521569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::MediumTurquoise
	DD	03f51d1d3r			; 0.819608
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumSpringGreen
	DD	03f7afafcr			; 0.980392
	DD	03f1a9a9br			; 0.603922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef6f6f8r ; 0.482353 ; DirectX::Colors::MediumSlateBlue
	DD	03ed0d0d2r			; 0.407843
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e70f0f2r ; 0.235294 ; DirectX::Colors::MediumSeaGreen
	DD	03f33b3b4r			; 0.701961
	DD	03ee2e2e4r			; 0.443137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f139394r ; 0.576471 ; DirectX::Colors::MediumPurple
	DD	03ee0e0e2r			; 0.439216
	DD	03f5bdbddr			; 0.858824
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3ababbr ; 0.729412 ; DirectX::Colors::MediumOrchid
	DD	03eaaaaabr			; 0.333333
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumBlue
	DD	000000000r			; 0
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ecccccer ; 0.4 ; DirectX::Colors::MediumAquamarine
	DD	03f4dcdcfr			; 0.803922
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Maroon
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Magenta
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Linen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Linen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Linen
	DD	03f70f0f2r			; 0.941177
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e48c8car ; 0.196078 ; DirectX::Colors::LimeGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lime@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lime@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Lime
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightYellow
	DD	03f800000r			; 1
	DD	03f60e0e2r			; 0.878431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::LightSteelBlue
	DD	03f44c4c6r			; 0.768628
	DD	03f5edee0r			; 0.870588
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eeeeef0r ; 0.466667 ; DirectX::Colors::LightSlateGray
	DD	03f088889r			; 0.533333
	DD	03f19999ar			; 0.6
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::LightSkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e008081r ; 0.12549 ; DirectX::Colors::LightSeaGreen
	DD	03f32b2b3r			; 0.698039
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightSalmon
	DD	03f20a0a1r			; 0.627451
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightPink
	DD	03f36b6b7r			; 0.713726
	DD	03f41c1c3r			; 0.756863
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f53d3d5r ; 0.827451 ; DirectX::Colors::LightGray
	DD	03f53d3d5r			; 0.827451
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f109091r ; 0.564706 ; DirectX::Colors::LightGreen
	DD	03f6eeef0r			; 0.933333
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::LightGoldenrodYellow
	DD	03f7afafcr			; 0.980392
	DD	03f52d2d4r			; 0.823529
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f60e0e2r ; 0.878431 ; DirectX::Colors::LightCyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::LightCoral
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::LightBlue
	DD	03f58d8dar			; 0.847059
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LemonChiffon
	DD	03f7afafcr			; 0.980392
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef8f8far ; 0.486275 ; DirectX::Colors::LawnGreen
	DD	03f7cfcfer			; 0.988235
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LavenderBlush
	DD	03f70f0f2r			; 0.941177
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f66e6e8r ; 0.901961 ; DirectX::Colors::Lavender
	DD	03f66e6e8r			; 0.901961
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Khaki
	DD	03f66e6e8r			; 0.901961
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Ivory
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e969697r ; 0.294118 ; DirectX::Colors::Indigo
	DD	000000000r			; 0
	DD	03f028283r			; 0.509804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::IndianRed
	DD	03eb8b8b9r			; 0.360784
	DD	03eb8b8b9r			; 0.360784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::HotPink
	DD	03ed2d2d4r			; 0.411765
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Honeydew
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::GreenYellow
	DD	03f800000r			; 1
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Green@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Green@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Green
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Gray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Gray
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Goldenrod
	DD	03f25a5a6r			; 0.647059
	DD	03e008081r			; 0.12549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Gold@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gold@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Gold
	DD	03f57d7d9r			; 0.843137
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f78f8far ; 0.972549 ; DirectX::Colors::GhostWhite
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Gainsboro
	DD	03f5cdcder			; 0.862745
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Fuchsia
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e088889r ; 0.133333 ; DirectX::Colors::ForestGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::FloralWhite
	DD	03f7afafcr			; 0.980392
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f32b2b3r ; 0.698039 ; DirectX::Colors::Firebrick
	DD	03e088889r			; 0.133333
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03df0f0f2r ; 0.117647 ; DirectX::Colors::DodgerBlue
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed2d2d4r ; 0.411765 ; DirectX::Colors::DimGray
	DD	03ed2d2d4r			; 0.411765
	DD	03ed2d2d4r			; 0.411765
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DeepSkyBlue
	DD	03f3fbfc0r			; 0.74902
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DeepPink
	DD	03da0a0a1r			; 0.0784314
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f149495r ; 0.580392 ; DirectX::Colors::DarkViolet
	DD	000000000r			; 0
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkTurquoise
	DD	03f4eced0r			; 0.807843
	DD	03f51d1d3r			; 0.819608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e3cbcbdr ; 0.184314 ; DirectX::Colors::DarkSlateGray
	DD	03e9e9e9fr			; 0.309804
	DD	03e9e9e9fr			; 0.309804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::DarkSlateBlue
	DD	03e74f4f6r			; 0.239216
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0f8f90r ; 0.560784 ; DirectX::Colors::DarkSeaGreen
	DD	03f3cbcbdr			; 0.737255
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f69e9ebr ; 0.913726 ; DirectX::Colors::DarkSalmon
	DD	03f169697r			; 0.588235
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkRed
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f19999ar ; 0.6 ; DirectX::Colors::DarkOrchid
	DD	03e48c8car			; 0.196078
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DarkOrange
	DD	03f0c8c8dr			; 0.54902
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eaaaaabr ; 0.333333 ; DirectX::Colors::DarkOliveGreen
	DD	03ed6d6d8r			; 0.419608
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkMagenta
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3dbdber ; 0.741176 ; DirectX::Colors::DarkKhaki
	DD	03f37b7b8r			; 0.717647
	DD	03ed6d6d8r			; 0.419608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkGreen
	DD	03ec8c8car			; 0.392157
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f29a9aar ; 0.662745 ; DirectX::Colors::DarkGray
	DD	03f29a9aar			; 0.662745
	DD	03f29a9aar			; 0.662745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f38b8b9r ; 0.721569 ; DirectX::Colors::DarkGoldenrod
	DD	03f068687r			; 0.52549
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkCyan
	DD	03f0b8b8cr			; 0.545098
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkBlue
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Cyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Crimson
	DD	03da0a0a1r			; 0.0784314
	DD	03e70f0f2r			; 0.235294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Cornsilk
	DD	03f78f8far			; 0.972549
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ec8c8car ; 0.392157 ; DirectX::Colors::CornflowerBlue
	DD	03f159596r			; 0.584314
	DD	03f6dedefr			; 0.929412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Coral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Coral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Coral
	DD	03efeff00r			; 0.498039
	DD	03ea0a0a1r			; 0.313726
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Chocolate
	DD	03ed2d2d4r			; 0.411765
	DD	03df0f0f2r			; 0.117647
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Chartreuse
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ebebebfr ; 0.372549 ; DirectX::Colors::CadetBlue
	DD	03f1e9e9fr			; 0.619608
	DD	03f20a0a1r			; 0.627451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5edee0r ; 0.870588 ; DirectX::Colors::BurlyWood
	DD	03f38b8b9r			; 0.721569
	DD	03f078788r			; 0.529412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Brown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Brown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f25a5a6r ; 0.647059 ; DirectX::Colors::Brown
	DD	03e28a8a9r			; 0.164706
	DD	03e28a8a9r			; 0.164706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0a8a8br ; 0.541176 ; DirectX::Colors::BlueViolet
	DD	03e2cacadr			; 0.168627
	DD	03f62e2e4r			; 0.886275
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Blue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Blue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Blue
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::BlanchedAlmond
	DD	03f6bebedr			; 0.921569
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Black@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Black@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Black
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Bisque
	DD	03f64e4e6r			; 0.894118
	DD	03f44c4c6r			; 0.768628
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Beige@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Beige@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Beige
	DD	03f75f5f7r			; 0.960784
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Azure@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Azure@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Azure
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Aquamarine
	DD	03f800000r			; 1
	DD	03f54d4d6r			; 0.831373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Aqua
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::AntiqueWhite
	DD	03f6bebedr			; 0.921569
	DD	03f57d7d9r			; 0.843137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::AliceBlue
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ	; DirectX::XMVECTORI32::operator __m128
PUBLIC	??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ	; DirectX::XMVECTORU32::operator __m128
PUBLIC	??HDirectX@@YQ?AT__m128@@T1@0@Z			; DirectX::operator+
PUBLIC	??GDirectX@@YQ?AT__m128@@T1@0@Z			; DirectX::operator-
PUBLIC	??DDirectX@@YQ?AT__m128@@T1@M@Z			; DirectX::operator*
PUBLIC	??0XMFLOAT3@DirectX@@QEAA@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT4@DirectX@@QEAA@XZ			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z	; DirectX::XMFLOAT4::operator=
PUBLIC	?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z	; DirectX::XMVectorSetY
PUBLIC	?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z	; DirectX::XMVectorAdd
PUBLIC	?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z	; DirectX::XMVectorSubtract
PUBLIC	?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z	; DirectX::XMVectorScale
PUBLIC	?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z	; DirectX::XMVector3Cross
PUBLIC	?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z	; DirectX::XMVector3Normalize
PUBLIC	??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CBuff::CBuff
PUBLIC	??0CBuff@Client@@QEAA@AEBV01@@Z			; Client::CBuff::CBuff
PUBLIC	??1CBuff@Client@@UEAA@XZ			; Client::CBuff::~CBuff
PUBLIC	?Initialize_Prototype@CBuff@Client@@UEAAJXZ	; Client::CBuff::Initialize_Prototype
PUBLIC	?Initialize@CBuff@Client@@UEAAJPEAX@Z		; Client::CBuff::Initialize
PUBLIC	?Tick@CBuff@Client@@UEAAXN@Z			; Client::CBuff::Tick
PUBLIC	?LateTick@CBuff@Client@@UEAAXN@Z		; Client::CBuff::LateTick
PUBLIC	?Render@CBuff@Client@@UEAAJXZ			; Client::CBuff::Render
PUBLIC	?RenderGUI@CBuff@Client@@UEAAXXZ		; Client::CBuff::RenderGUI
PUBLIC	?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z ; Client::CBuff::StartEffect
PUBLIC	?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z	; Client::CBuff::SetPosition
PUBLIC	?AddComponent@CBuff@Client@@AEAAJXZ		; Client::CBuff::AddComponent
PUBLIC	?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CBuff::Create
PUBLIC	?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z ; Client::CBuff::Clone
PUBLIC	?Free@CBuff@Client@@UEAAXXZ			; Client::CBuff::Free
PUBLIC	??_GCBuff@Client@@UEAAPEAXI@Z			; Client::CBuff::`scalar deleting destructor'
PUBLIC	??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z ; Engine::Safe_Release<Client::CBuff * __ptr64>
PUBLIC	??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z ; Engine::Safe_Release<Engine::CTexture * __ptr64>
PUBLIC	??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@2@@Z@4JA ; `DirectX::XMLoadFloat4'::`1'::__LINE__Var
PUBLIC	??_7CBuff@Client@@6B@				; Client::CBuff::`vftable'
PUBLIC	??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@		; `string'
PUBLIC	??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@		; `string'
PUBLIC	??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@		; `string'
PUBLIC	??_C@_09HCHKCCII@g_Texture?$AA@			; `string'
PUBLIC	??_C@_09IPLGGENB@g_TimeAcc?$AA@			; `string'
PUBLIC	??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@NCILMLLP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAt?$AAe?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@KPBPOMBH@?$AAc?$AAo?$AAm?$AA_?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@BAIPNHMH@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAv?$AAi?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@NCAJDHDM@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@GJKGKIHP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??Create@CBuff@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA ; `Client::CBuff::Create'::`1'::__LINE__Var
PUBLIC	??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@ ; `string'
PUBLIC	??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DC@GJHBPOOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA ; `Client::CBuff::Clone'::`1'::__LINE__Var
PUBLIC	??_C@_1DA@NIAAJGJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@ ; `string'
PUBLIC	??_R4CBuff@Client@@6B@				; Client::CBuff::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCBuff@Client@@@8			; Client::CBuff `RTTI Type Descriptor'
PUBLIC	??_R3CBuff@Client@@8				; Client::CBuff::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBuff@Client@@8				; Client::CBuff::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBuff@Client@@8			; Client::CBuff::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGameObject@Engine@@8		; Engine::CGameObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGameObject@Engine@@@8			; Engine::CGameObject `RTTI Type Descriptor'
PUBLIC	??_R3CGameObject@Engine@@8			; Engine::CGameObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGameObject@Engine@@8			; Engine::CGameObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBase@Engine@@8			; Engine::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBase@Engine@@@8			; Engine::CBase `RTTI Type Descriptor'
PUBLIC	??_R3CBase@Engine@@8				; Engine::CBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBase@Engine@@8				; Engine::CBase::`RTTI Base Class Array'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e19999a
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc00000
PUBLIC	__real@40000000
PUBLIC	__real@41c80000
PUBLIC	__real@41f00000
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp_MessageBoxW:PROC
EXTRN	__imp__wassert:PROC
EXTRN	??2@YAPEAX_KHPEBDH@Z:PROC			; operator new
EXTRN	??3@YAXPEAXHPEBDH@Z:PROC			; operator delete
EXTRN	__imp_?Release@CBase@Engine@@QEAAKXZ:PROC
EXTRN	__imp_??0CGameObject@Engine@@IEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z:PROC
EXTRN	__imp_??0CGameObject@Engine@@IEAA@AEBV01@@Z:PROC
EXTRN	__imp_??1CGameObject@Engine@@MEAA@XZ:PROC
EXTRN	__imp_?Initialize_Prototype@CGameObject@Engine@@UEAAJXZ:PROC
EXTRN	__imp_?Initialize@CGameObject@Engine@@UEAAJPEAX@Z:PROC
EXTRN	__imp_?Tick@CGameObject@Engine@@UEAAXN@Z:PROC
EXTRN	__imp_?LateTick@CGameObject@Engine@@UEAAXN@Z:PROC
EXTRN	__imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z:PROC
EXTRN	__imp_?Free@CGameObject@Engine@@UEAAXXZ:PROC
EXTRN	??_ECBuff@Client@@UEAAPEAXI@Z:PROC		; Client::CBuff::`vector deleting destructor'
EXTRN	__imp_?Render@CVIBuffer@Engine@@UEAAJXZ:PROC
EXTRN	__imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z:PROC
EXTRN	__imp_?Get_WorldMatrix@CTransform@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@XZ:PROC
EXTRN	__imp_?Get_Scale@CTransform@Engine@@QEAA?AUXMFLOAT3@DirectX@@XZ:PROC
EXTRN	__imp_?Set_Scale@CTransform@Engine@@QEAAXUXMFLOAT3@DirectX@@@Z:PROC
EXTRN	__imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z:PROC
EXTRN	__imp_?Add_RenderGroup@CRenderer@Engine@@QEAAJW4RENDER_GROUP@12@PEAVCGameObject@2@@Z:PROC
EXTRN	__imp_?Setup_ShaderResource@CTexture@Engine@@QEAAJPEAVCShader@2@PEBDI@Z:PROC
EXTRN	__imp_?Begin@CShader@Engine@@QEAAJI@Z:PROC
EXTRN	__imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z:PROC
EXTRN	__imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z:PROC
EXTRN	__imp_?GetInstance@CPipeLine@Engine@@SAPEAV12@XZ:PROC
EXTRN	__imp_?Get_Transform_float4x4@CPipeLine@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@W4TRANSFORM_STATE@12@@Z:PROC
EXTRN	__imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ:PROC
EXTRN	__imp_?Get_CamPosition@CGameInstance@Engine@@QEAA?AUXMFLOAT4@DirectX@@XZ:PROC
EXTRN	?GetLengthFromCamera@CGameObject@Engine@@UEAAMXZ:PROC ; Engine::CGameObject::GetLengthFromCamera
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+181
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??HDirectX@@YQ?AT__m128@@T1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??HDirectX@@YQ?AT__m128@@T1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??GDirectX@@YQ?AT__m128@@T1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??GDirectX@@YQ?AT__m128@@T1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??DDirectX@@YQ?AT__m128@@T1@M@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??DDirectX@@YQ?AT__m128@@T1@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT4@DirectX@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0XMFLOAT4@DirectX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+119
	DD	imagerel $unwind$?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z DD imagerel $LN3
	DD	imagerel $LN3+185
	DD	imagerel $unwind$?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+328
	DD	imagerel $unwind$?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z DD imagerel $LN3
	DD	imagerel $LN3+535
	DD	imagerel $unwind$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+330
	DD	imagerel $unwind$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD imagerel ?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CBuff@Client@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+318
	DD	imagerel $unwind$??0CBuff@Client@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CBuff@Client@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1CBuff@Client@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_Prototype@CBuff@Client@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?Initialize_Prototype@CBuff@Client@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@CBuff@Client@@UEAAJPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+297
	DD	imagerel $unwind$?Initialize@CBuff@Client@@UEAAJPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Tick@CBuff@Client@@UEAAXN@Z DD imagerel $LN5
	DD	imagerel $LN5+1246
	DD	imagerel $unwind$?Tick@CBuff@Client@@UEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LateTick@CBuff@Client@@UEAAXN@Z DD imagerel $LN5
	DD	imagerel $LN5+142
	DD	imagerel $unwind$?LateTick@CBuff@Client@@UEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@CBuff@Client@@UEAAJXZ DD imagerel $LN8
	DD	imagerel $LN8+517
	DD	imagerel $unwind$?Render@CBuff@Client@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderGUI@CBuff@Client@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?RenderGUI@CBuff@Client@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z DD imagerel $LN3
	DD	imagerel $LN3+169
	DD	imagerel $unwind$?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddComponent@CBuff@Client@@AEAAJXZ DD imagerel $LN8
	DD	imagerel $LN8+396
	DD	imagerel $unwind$?AddComponent@CBuff@Client@@AEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD imagerel ?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA+61
	DD	imagerel $unwind$?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA DD imagerel ?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
	DD	imagerel ?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA+61
	DD	imagerel $unwind$?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CBuff@Client@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?Free@CBuff@Client@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCBuff@Client@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GCBuff@Client@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z
pdata	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2CBase@Engine@@8
rdata$r	SEGMENT
??_R2CBase@Engine@@8 DD imagerel ??_R1A@?0A@EA@CBase@Engine@@8 ; Engine::CBase::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBase@Engine@@8
rdata$r	SEGMENT
??_R3CBase@Engine@@8 DD 00H				; Engine::CBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CBase@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBase@Engine@@@8
data$r	SEGMENT
??_R0?AVCBase@Engine@@@8 DQ FLAT:??_7type_info@@6B@	; Engine::CBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBase@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBase@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBase@Engine@@8 DD imagerel ??_R0?AVCBase@Engine@@@8 ; Engine::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBase@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R2CGameObject@Engine@@8
rdata$r	SEGMENT
??_R2CGameObject@Engine@@8 DD imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8 ; Engine::CGameObject::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CGameObject@Engine@@8
rdata$r	SEGMENT
??_R3CGameObject@Engine@@8 DD 00H			; Engine::CGameObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2CGameObject@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGameObject@Engine@@@8
data$r	SEGMENT
??_R0?AVCGameObject@Engine@@@8 DQ FLAT:??_7type_info@@6B@ ; Engine::CGameObject `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCGameObject@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGameObject@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGameObject@Engine@@8 DD imagerel ??_R0?AVCGameObject@Engine@@@8 ; Engine::CGameObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CGameObject@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBuff@Client@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBuff@Client@@8 DD imagerel ??_R0?AVCBuff@Client@@@8 ; Client::CBuff::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBuff@Client@@8
rdata$r	ENDS
;	COMDAT ??_R2CBuff@Client@@8
rdata$r	SEGMENT
??_R2CBuff@Client@@8 DD imagerel ??_R1A@?0A@EA@CBuff@Client@@8 ; Client::CBuff::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBuff@Client@@8
rdata$r	SEGMENT
??_R3CBuff@Client@@8 DD 00H				; Client::CBuff::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CBuff@Client@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBuff@Client@@@8
data$r	SEGMENT
??_R0?AVCBuff@Client@@@8 DQ FLAT:??_7type_info@@6B@	; Client::CBuff `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBuff@Client@@', 00H
data$r	ENDS
;	COMDAT ??_R4CBuff@Client@@6B@
rdata$r	SEGMENT
??_R4CBuff@Client@@6B@ DD 01H				; Client::CBuff::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCBuff@Client@@@8
	DD	imagerel ??_R3CBuff@Client@@8
	DD	imagerel ??_R4CBuff@Client@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1DA@NIAAJGJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@NIAAJGJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 'n'
	DB	00H, 'e', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'B', 00H
	DB	'u', 00H, 'f', 00H, 'f', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA DD 0b0H ; `Client::CBuff::Clone'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@GJHBPOOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@GJHBPOOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'C', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@ DB 'M', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
CONST	SEGMENT
??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@ DB 'c:\users\a'
	DB	'rcco\documents\github\framework\client\private\buff.cpp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Create@CBuff@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Create@CBuff@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA DD 0a4H ; `Client::CBuff::Create'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DG@GJKGKIHP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@GJKGKIHP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'e', 00H, '_', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@NCAJDHDM@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@NCAJDHDM@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'u', 00H, 'r', 00H, 'e', 00H, '_', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@BAIPNHMH@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAv?$AAi?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@BAIPNHMH@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAv?$AAi?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 'v', 00H, 'i', 00H, 'b', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, '_', 00H, 'r', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KPBPOMBH@?$AAc?$AAo?$AAm?$AA_?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@KPBPOMBH@?$AAc?$AAo?$AAm?$AA_?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 'b', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@NCILMLLP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAt?$AAe?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@NCILMLLP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAt?$AAe?$AAx?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, '_', 00H, 'v', 00H, 't', 00H, 'x', 00H
	DB	't', 00H, 'e', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 's', 00H, 'h', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPLGGENB@g_TimeAcc?$AA@
CONST	SEGMENT
??_C@_09IPLGGENB@g_TimeAcc?$AA@ DB 'g_TimeAcc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HCHKCCII@g_Texture?$AA@
CONST	SEGMENT
??_C@_09HCHKCCII@g_Texture?$AA@ DB 'g_Texture', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@
CONST	SEGMENT
??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@ DB 'g_ProjMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@
CONST	SEGMENT
??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@ DB 'g_ViewMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@
CONST	SEGMENT
??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@ DB 'g_WorldMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CBuff@Client@@6B@
CONST	SEGMENT
??_7CBuff@Client@@6B@ DQ FLAT:??_R4CBuff@Client@@6B@	; Client::CBuff::`vftable'
	DQ	FLAT:??_ECBuff@Client@@UEAAPEAXI@Z
	DQ	FLAT:?Free@CBuff@Client@@UEAAXXZ
	DQ	FLAT:?Initialize_Prototype@CBuff@Client@@UEAAJXZ
	DQ	FLAT:?Initialize@CBuff@Client@@UEAAJPEAX@Z
	DQ	FLAT:?Tick@CBuff@Client@@UEAAXN@Z
	DQ	FLAT:?LateTick@CBuff@Client@@UEAAXN@Z
	DQ	FLAT:?Render@CBuff@Client@@UEAAJXZ
	DQ	FLAT:?RenderGUI@CBuff@Client@@UEAAXXZ
	DQ	FLAT:?GetLengthFromCamera@CGameObject@Engine@@UEAAMXZ
	DQ	FLAT:?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@2@@Z@4JA DD 02a8H ; `DirectX::XMLoadFloat4'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ DB 'p', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'x', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCBuff@Client@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CBuff@Client@@UEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD imagerel ?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z+115
	DD	00H
	DD	imagerel ?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z+178
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 025054b19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcName$0 DB 070H ; Client::CBuff::Clone
	DB	049H
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	063H
	DB	065H
	DB	00H
	ORG $+6
?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcVarDesc DD 028H ; Client::CBuff::Clone
	DD	08H
	DQ	FLAT:?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcName$0
	ORG $+48
?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcFrameData DD 01H ; Client::CBuff::Clone
	DD	00H
	DQ	FLAT:?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcVarDesc
$cppxdata$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel ?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0ffffffffH
	DD	imagerel ?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+115
	DD	00H
	DD	imagerel ?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+185
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 025054b19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcName$0 DB 070H ; Client::CBuff::Create
	DB	049H
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	063H
	DB	065H
	DB	00H
	ORG $+6
?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcVarDesc DD 028H ; Client::CBuff::Create
	DD	08H
	DQ	FLAT:?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcName$0
	ORG $+48
?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcFrameData DD 01H ; Client::CBuff::Create
	DD	00H
	DQ	FLAT:?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcVarDesc
$cppxdata$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddComponent@CBuff@Client@@AEAAJXZ DD 035052a01H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z DD 025053a01H
	DD	011e2323H
	DD	070170023H
	DD	05016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderGUI@CBuff@Client@@UEAAXXZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@CBuff@Client@@UEAAJXZ DD 025053b19H
	DD	010e2313H
	DD	07007004dH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0258H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Render@CBuff@Client@@UEAAJXZ$rtcName$0 DB 066H		; Client::CBuff::Render
	DB	041H
	DB	06cH
	DB	070H
	DB	068H
	DB	061H
	DB	00H
	ORG $+9
?Render@CBuff@Client@@UEAAJXZ$rtcVarDesc DD 064H	; Client::CBuff::Render
	DD	04H
	DQ	FLAT:?Render@CBuff@Client@@UEAAJXZ$rtcName$0
	ORG $+48
?Render@CBuff@Client@@UEAAJXZ$rtcFrameData DD 01H	; Client::CBuff::Render
	DD	00H
	DQ	FLAT:?Render@CBuff@Client@@UEAAJXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LateTick@CBuff@Client@@UEAAXN@Z DD 025053001H
	DD	01142319H
	DD	0700d001dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Tick@CBuff@Client@@UEAAXN@Z DD 025054119H
	DD	01142319H
	DD	0700d010bH
	DD	0500cH
	DD	imagerel __GSHandlerCheck
	DD	0848H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Tick@CBuff@Client@@UEAAXN@Z$rtcName$0 DB 076H		; Client::CBuff::Tick
	DB	053H
	DB	063H
	DB	061H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+1
?Tick@CBuff@Client@@UEAAXN@Z$rtcName$1 DB 076H		; Client::CBuff::Tick
	DB	043H
	DB	061H
	DB	06dH
	DB	00H
	ORG $+3
?Tick@CBuff@Client@@UEAAXN@Z$rtcVarDesc DD 0a8H		; Client::CBuff::Tick
	DD	010H
	DQ	FLAT:?Tick@CBuff@Client@@UEAAXN@Z$rtcName$1
	DD	078H
	DD	0cH
	DQ	FLAT:?Tick@CBuff@Client@@UEAAXN@Z$rtcName$0
	ORG $+96
?Tick@CBuff@Client@@UEAAXN@Z$rtcFrameData DD 02H	; Client::CBuff::Tick
	DD	00H
	DQ	FLAT:?Tick@CBuff@Client@@UEAAXN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@CBuff@Client@@UEAAJPEAX@Z DD 025063001H
	DD	01142319H
	DD	0700d0038H
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_Prototype@CBuff@Client@@UEAAJXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CBuff@Client@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CBuff@Client@@QEAA@AEBV01@@Z DD imagerel ??0CBuff@Client@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0CBuff@Client@@QEAA@AEBV01@@Z+79
	DD	00H
	DD	imagerel ??0CBuff@Client@@QEAA@AEBV01@@Z+301
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CBuff@Client@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CBuff@Client@@QEAA@AEBV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CBuff@Client@@QEAA@AEBV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CBuff@Client@@QEAA@AEBV01@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CBuff@Client@@QEAA@AEBV01@@Z DD 025053a11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CBuff@Client@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel ??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0ffffffffH
	DD	imagerel ??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+91
	DD	00H
	DD	imagerel ??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+313
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 025053f11H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z DD 035052a01H
	DD	010a330fH
	DD	0700300dfH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z DD 035053601H
	DD	010a330fH
	DD	07003008bH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z DD 015052f01H
	DD	010f1314H
	DD	070080033H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z DD 015053601H
	DD	010a130fH
	DD	07003002dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z DD 015053601H
	DD	010a130fH
	DD	07003002dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z DD 015052f01H
	DD	010f1314H
	DD	070080045H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD 015053501H
	DD	01211326H
	DD	0701a0021H
	DD	05019H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z DD 035052a01H
	DD	010e3313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT4@DirectX@@QEAA@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD 05053a01H
	DD	01200323H
	DD	070190019H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??DDirectX@@YQ?AT__m128@@T1@M@Z DD 035052f01H
	DD	010f3314H
	DD	07008002bH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??GDirectX@@YQ?AT__m128@@T1@0@Z DD 035053601H
	DD	010a330fH
	DD	070030031H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??HDirectX@@YQ?AT__m128@@T1@0@Z DD 035053601H
	DD	010a330fH
	DD	070030031H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 025053901H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z PROC ; Engine::Safe_Release<Engine::CTexture * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z ENDP ; Engine::Safe_Release<Engine::CTexture * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z PROC ; Engine::Safe_Release<Client::CBuff * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z ENDP ; Engine::Safe_Release<Client::CBuff * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCBuff@Client@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GCBuff@Client@@UEAAPEAXI@Z PROC			; Client::CBuff::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1CBuff@Client@@UEAA@XZ ; Client::CBuff::~CBuff
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba c8 00 00 00	 mov	 edx, 200		; 000000c8H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GCBuff@Client@@UEAAPEAXI@Z ENDP			; Client::CBuff::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Free@CBuff@Client@@UEAAXXZ
_TEXT	SEGMENT
this$ = 224
?Free@CBuff@Client@@UEAAXXZ PROC			; Client::CBuff::Free, COMDAT

; 188  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 189  : 	__super::Free();

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Free@CGameObject@Engine@@UEAAXXZ

; 190  : 
; 191  : 	Safe_Release(m_pDiffuseTexture);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCTexture@Engine@@@Engine@@YAKAEAPEAVCTexture@0@@Z ; Engine::Safe_Release<Engine::CTexture * __ptr64>

; 192  : 
; 193  : }

  0004c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00053	5f		 pop	 rdi
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
?Free@CBuff@Client@@UEAAXXZ ENDP			; Client::CBuff::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
_TEXT	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z PROC ; Client::CBuff::Clone, COMDAT

; 176  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 177  : 	CBuff* pInstance = new CBuff(*this);

  0004b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  00051	ff c0		 inc	 eax
  00053	44 8b c8	 mov	 r9d, eax
  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
  0005d	ba 01 00 00 00	 mov	 edx, 1
  00062	b9 c8 00 00 00	 mov	 ecx, 200		; 000000c8H
  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_KHPEBDH@Z	; operator new
  0006c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00073	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0007b	74 1c		 je	 SHORT $LN4@Clone
  0007d	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00084	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0008b	e8 00 00 00 00	 call	 ??0CBuff@Client@@QEAA@AEBV01@@Z ; Client::CBuff::CBuff
  00090	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00097	eb 0b		 jmp	 SHORT $LN5@Clone
$LN4@Clone:
  00099	48 c7 85 38 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv83[rbp], 0
$LN5@Clone:
  000a4	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv83[rbp]
  000ab	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000b2	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000b9	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 178  : 	if (FAILED(pInstance->Initialize(pArg)))

  000bd	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR pArg$[rbp]
  000c4	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c8	e8 00 00 00 00	 call	 ?Initialize@CBuff@Client@@UEAAJPEAX@Z ; Client::CBuff::Initialize
  000cd	85 c0		 test	 eax, eax
  000cf	7d 22		 jge	 SHORT $LN2@Clone

; 179  : 	{
; 180  : 		MSG_BOX("Failed to Clone : CBuff");

  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@NIAAJGJC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@
  000e2	33 c9		 xor	 ecx, ecx
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxW

; 181  : 		Safe_Release(pInstance);

  000ea	48 8d 4d 08	 lea	 rcx, QWORD PTR pInstance$[rbp]
  000ee	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z ; Engine::Safe_Release<Client::CBuff * __ptr64>
$LN2@Clone:

; 182  : 	}
; 183  : 
; 184  : 	return pInstance;

  000f3	48 8b 45 08	 mov	 rax, QWORD PTR pInstance$[rbp]

; 185  : }

  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcFrameData
  00105	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010a	48 8b c7	 mov	 rax, rdi
  0010d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00114	48 33 cd	 xor	 rcx, rbp
  00117	e8 00 00 00 00	 call	 __security_check_cookie
  0011c	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00123	5f		 pop	 rdi
  00124	5d		 pop	 rbp
  00125	c3		 ret	 0
?Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z ENDP ; Client::CBuff::Clone
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA PROC ; `Client::CBuff::Clone'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA ENDP ; `Client::CBuff::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA PROC ; `Client::CBuff::Clone'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Clone@CBuff@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA ENDP ; `Client::CBuff::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z PROC ; Client::CBuff::Create, COMDAT

; 164  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 165  : 	CBuff*pInstance = new CBuff(pDevice, pContext);

  0004b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Create@CBuff@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  00051	ff c0		 inc	 eax
  00053	44 8b c8	 mov	 r9d, eax
  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
  0005d	ba 01 00 00 00	 mov	 edx, 1
  00062	b9 c8 00 00 00	 mov	 ecx, 200		; 000000c8H
  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_KHPEBDH@Z	; operator new
  0006c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00073	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0007b	74 23		 je	 SHORT $LN4@Create
  0007d	4c 8b 85 78 01
	00 00		 mov	 r8, QWORD PTR pContext$[rbp]
  00084	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR pDevice$[rbp]
  0008b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00092	e8 00 00 00 00	 call	 ??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CBuff::CBuff
  00097	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  0009e	eb 0b		 jmp	 SHORT $LN5@Create
$LN4@Create:
  000a0	48 c7 85 38 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv84[rbp], 0
$LN5@Create:
  000ab	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv84[rbp]
  000b2	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000b9	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000c0	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 166  : 	if (FAILED(pInstance->Initialize_Prototype()))

  000c4	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c8	e8 00 00 00 00	 call	 ?Initialize_Prototype@CBuff@Client@@UEAAJXZ ; Client::CBuff::Initialize_Prototype
  000cd	85 c0		 test	 eax, eax
  000cf	7d 22		 jge	 SHORT $LN2@Create

; 167  : 	{
; 168  : 		MSG_BOX("Failed to Create : CBuff");

  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DC@GJHBPOOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAB?$AAu?$AAf?$AAf?$AA?$AA@
  000e2	33 c9		 xor	 ecx, ecx
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxW

; 169  : 		Safe_Release(pInstance);

  000ea	48 8d 4d 08	 lea	 rcx, QWORD PTR pInstance$[rbp]
  000ee	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCBuff@Client@@@Engine@@YAKAEAPEAVCBuff@Client@@@Z ; Engine::Safe_Release<Client::CBuff * __ptr64>
$LN2@Create:

; 170  : 	}
; 171  : 
; 172  : 	return pInstance;

  000f3	48 8b 45 08	 mov	 rax, QWORD PTR pInstance$[rbp]

; 173  : }

  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcFrameData
  00105	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010a	48 8b c7	 mov	 rax, rdi
  0010d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00114	48 33 cd	 xor	 rcx, rbp
  00117	e8 00 00 00 00	 call	 __security_check_cookie
  0011c	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00123	5f		 pop	 rdi
  00124	5d		 pop	 rbp
  00125	c3		 ret	 0
?Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ENDP ; Client::CBuff::Create
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CBuff::Create'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Create@CBuff@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CBuff::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CBuff::Create'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Create@CBuff@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EC@LKJPICMN@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Create@CBuff@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CBuff::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?AddComponent@CBuff@Client@@AEAAJXZ
_TEXT	SEGMENT
this$ = 224
?AddComponent@CBuff@Client@@AEAAJXZ PROC		; Client::CBuff::AddComponent, COMDAT

; 147  : {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]

; 148  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, L"proto_com_renderer", L"com_renderer", (CComponent**)&m_pRenderer)))

  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 83 c0 78	 add	 rax, 120		; 00000078H
  00035	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  0003e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00043	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
  0004a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
  00051	33 d2		 xor	 edx, edx
  00053	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  00060	85 c0		 test	 eax, eax
  00062	7d 0a		 jge	 SHORT $LN2@AddCompone

; 149  : 		return E_FAIL;

  00064	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00069	e9 14 01 00 00	 jmp	 $LN1@AddCompone
$LN2@AddCompone:

; 150  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, L"proto_com_transform", L"com_transform", (CComponent**)&m_pTransform)))

  0006e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00075	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0007b	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00084	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00089	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
  00090	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
  00097	33 d2		 xor	 edx, edx
  00099	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  000a6	85 c0		 test	 eax, eax
  000a8	7d 0a		 jge	 SHORT $LN3@AddCompone

; 151  : 		return E_FAIL;

  000aa	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  000af	e9 ce 00 00 00	 jmp	 $LN1@AddCompone
$LN3@AddCompone:

; 152  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, L"proto_com_shader_vtxtex", L"com_shader", (CComponent**)&m_pShader)))

  000b4	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bb	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  000c1	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  000ca	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000cf	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@
  000d6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1DA@NCILMLLP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAt?$AAe?$AAx?$AA?$AA@
  000dd	33 d2		 xor	 edx, edx
  000df	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  000ec	85 c0		 test	 eax, eax
  000ee	7d 0a		 jge	 SHORT $LN4@AddCompone

; 153  : 		return E_FAIL;

  000f0	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  000f5	e9 88 00 00 00	 jmp	 $LN1@AddCompone
$LN4@AddCompone:

; 154  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, L"proto_com_vibuffer_rect", L"com_buffer", (CComponent**)&m_pVIBufferRect)))

  000fa	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00101	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00107	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00110	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00115	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BG@KPBPOMBH@?$AAc?$AAo?$AAm?$AA_?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@
  0011c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1DA@BAIPNHMH@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAv?$AAi?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA_?$AAr?$AAe?$AAc?$AAt?$AA?$AA@
  00123	33 d2		 xor	 edx, edx
  00125	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0012c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  00132	85 c0		 test	 eax, eax
  00134	7d 07		 jge	 SHORT $LN5@AddCompone

; 155  : 		return E_FAIL;

  00136	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0013b	eb 45		 jmp	 SHORT $LN1@AddCompone
$LN5@AddCompone:

; 156  : 
; 157  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, L"proto_com_texture_triangle", L"com_texture_triangl", (CComponent**)&m_pDiffuseTexture)))

  0013d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00144	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  0014a	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00153	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00158	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1CI@NCAJDHDM@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AA?$AA@
  0015f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1DG@GJKGKIHP@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAe?$AAx?$AAt?$AAu?$AAr?$AAe?$AA_?$AAt?$AAr?$AAi?$AAa?$AAn?$AAg?$AAl?$AAe?$AA?$AA@
  00166	33 d2		 xor	 edx, edx
  00168	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0016f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  00175	85 c0		 test	 eax, eax
  00177	7d 07		 jge	 SHORT $LN6@AddCompone

; 158  : 		return E_FAIL;

  00179	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0017e	eb 02		 jmp	 SHORT $LN1@AddCompone
$LN6@AddCompone:

; 159  : 
; 160  : 	return S_OK;

  00180	33 c0		 xor	 eax, eax
$LN1@AddCompone:

; 161  : }

  00182	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00189	5f		 pop	 rdi
  0018a	5d		 pop	 rbp
  0018b	c3		 ret	 0
?AddComponent@CBuff@Client@@AEAAJXZ ENDP		; Client::CBuff::AddComponent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z
_TEXT	SEGMENT
vFixUpPosition$ = 16
$T1 = 256
$T2 = 304
this$ = 368
vPosition$ = 376
?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z PROC	; Client::CBuff::SetPosition, COMDAT

; 140  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]

; 141  : 	_vector vFixUpPosition = vPosition;

  0002f	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR vPosition$[rbp]
  00036	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00039	0f 11 45 10	 movups	 XMMWORD PTR vFixUpPosition$[rbp], xmm0

; 142  : 	vFixUpPosition = XMVectorSetY(vPosition, 0.1f);

  0003d	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3dcccccd
  00045	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR vPosition$[rbp]
  0004c	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0004f	e8 00 00 00 00	 call	 ?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z ; DirectX::XMVectorSetY
  00054	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0005b	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00062	0f 29 45 10	 movaps	 XMMWORD PTR vFixUpPosition$[rbp], xmm0

; 143  : 	m_pTransform->Set_State(CTransform::STATE_POSITION, vFixUpPosition);

  00066	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vFixUpPosition$[rbp]
  0006a	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00071	4c 8d 85 30 01
	00 00		 lea	 r8, QWORD PTR $T2[rbp]
  00078	ba 03 00 00 00	 mov	 edx, 3
  0007d	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 144  : }

  00091	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00098	5f		 pop	 rdi
  00099	5d		 pop	 rbp
  0009a	c3		 ret	 0
?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z ENDP	; Client::CBuff::SetPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z
_TEXT	SEGMENT
$T1 = 208
this$ = 272
vPosition$ = 280
fSpeed$ = 288
vDir$ = 296
?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z PROC ; Client::CBuff::StartEffect, COMDAT

; 132  : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00010	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00015	55		 push	 rbp
  00016	57		 push	 rdi
  00017	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00023	48 8b fc	 mov	 rdi, rsp
  00026	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]

; 133  : 	m_bRender = true;

  0003a	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1

; 134  : 	m_vDir = vDir;

  00048	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00055	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR vDir$[rbp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z ; DirectX::XMFLOAT4::operator=

; 135  : 	m_fSpeed = fSpeed;

  00064	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	f3 0f 10 85 20
	01 00 00	 movss	 xmm0, DWORD PTR fSpeed$[rbp]
  00073	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR [rax+176], xmm0

; 136  : 	SetPosition(vPosition);

  0007b	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR vPosition$[rbp]
  00082	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00085	0f 11 85 d0 00
	00 00		 movups	 XMMWORD PTR $T1[rbp], xmm0
  0008c	48 8d 95 d0 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00093	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009a	e8 00 00 00 00	 call	 ?SetPosition@CBuff@Client@@QEAAXT__m128@@@Z ; Client::CBuff::SetPosition

; 137  : }

  0009f	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?StartEffect@CBuff@Client@@QEAAXT__m128@@MUXMFLOAT4@DirectX@@@Z ENDP ; Client::CBuff::StartEffect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?RenderGUI@CBuff@Client@@UEAAXXZ
_TEXT	SEGMENT
this$ = 224
?RenderGUI@CBuff@Client@@UEAAXXZ PROC			; Client::CBuff::RenderGUI, COMDAT

; 116  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 117  : }

  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?RenderGUI@CBuff@Client@@UEAAXXZ ENDP			; Client::CBuff::RenderGUI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Render@CBuff@Client@@UEAAJXZ
_TEXT	SEGMENT
pGameInstance$ = 8
pPipeline$ = 40
fAlpha$ = 68
$T4 = 292
$T5 = 388
$T6 = 484
__$ArrayPad$ = 568
this$ = 608
?Render@CBuff@Client@@UEAAJXZ PROC			; Client::CBuff::Render, COMDAT

; 91   : {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 68 02
	00 00		 sub	 rsp, 616		; 00000268H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 9a 00 00 00	 mov	 ecx, 154		; 0000009aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR [rsp+648]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 38 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 92   : 	CGameInstance* pGameInstance = CGameInstance::GetInstance();

  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ
  00041	48 89 45 08	 mov	 QWORD PTR pGameInstance$[rbp], rax

; 93   : 	CPipeLine* pPipeline = CPipeLine::GetInstance();

  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetInstance@CPipeLine@Engine@@SAPEAV12@XZ
  0004b	48 89 45 28	 mov	 QWORD PTR pPipeline$[rbp], rax

; 94   : 
; 95   : 	if (FAILED(m_pShader->SetMatrix("g_WorldMatrix", &m_pTransform->Get_WorldMatrix())))

  0004f	48 8d 95 24 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00056	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_WorldMatrix@CTransform@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@XZ
  0006a	4c 8b c0	 mov	 r8, rax
  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@
  00074	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007b	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z
  00088	85 c0		 test	 eax, eax
  0008a	7d 0a		 jge	 SHORT $LN2@Render

; 96   : 		return E_FAIL;

  0008c	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00091	e9 40 01 00 00	 jmp	 $LN1@Render
$LN2@Render:

; 97   : 	if (FAILED(m_pShader->SetMatrix("g_ViewMatrix", &pPipeline->Get_Transform_float4x4(CPipeLine::TS_VIEW))))

  00096	45 33 c0	 xor	 r8d, r8d
  00099	48 8d 95 84 01
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  000a0	48 8b 4d 28	 mov	 rcx, QWORD PTR pPipeline$[rbp]
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_Transform_float4x4@CPipeLine@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@W4TRANSFORM_STATE@12@@Z
  000aa	4c 8b c0	 mov	 r8, rax
  000ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@
  000b4	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bb	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  000c2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z
  000c8	85 c0		 test	 eax, eax
  000ca	7d 0a		 jge	 SHORT $LN3@Render

; 98   : 		return E_FAIL;

  000cc	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  000d1	e9 00 01 00 00	 jmp	 $LN1@Render
$LN3@Render:

; 99   : 	if (FAILED(m_pShader->SetMatrix("g_ProjMatrix", &pPipeline->Get_Transform_float4x4(CPipeLine::TS_PROJ))))

  000d6	41 b8 01 00 00
	00		 mov	 r8d, 1
  000dc	48 8d 95 e4 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  000e3	48 8b 4d 28	 mov	 rcx, QWORD PTR pPipeline$[rbp]
  000e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_Transform_float4x4@CPipeLine@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@W4TRANSFORM_STATE@12@@Z
  000ed	4c 8b c0	 mov	 r8, rax
  000f0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@
  000f7	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000fe	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00105	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z
  0010b	85 c0		 test	 eax, eax
  0010d	7d 0a		 jge	 SHORT $LN4@Render

; 100  : 		return E_FAIL;

  0010f	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00114	e9 bd 00 00 00	 jmp	 $LN1@Render
$LN4@Render:

; 101  : 
; 102  : 	if (FAILED(m_pDiffuseTexture->Setup_ShaderResource(m_pShader, "g_Texture")))

  00119	45 33 c9	 xor	 r9d, r9d
  0011c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_09HCHKCCII@g_Texture?$AA@
  00123	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 8b 90 88 00
	00 00		 mov	 rdx, QWORD PTR [rax+136]
  00131	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00138	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0013f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Setup_ShaderResource@CTexture@Engine@@QEAAJPEAVCShader@2@PEBDI@Z
  00145	85 c0		 test	 eax, eax
  00147	7d 0a		 jge	 SHORT $LN5@Render

; 103  : 		return E_FAIL;

  00149	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0014e	e9 83 00 00 00	 jmp	 $LN1@Render
$LN5@Render:

; 104  : 
; 105  : 	_float fAlpha = (m_fAcc / 1.5f) * 0.5f;

  00153	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015a	f3 0f 10 80 ac
	00 00 00	 movss	 xmm0, DWORD PTR [rax+172]
  00162	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@3fc00000
  0016a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3f000000
  00172	f3 0f 11 45 44	 movss	 DWORD PTR fAlpha$[rbp], xmm0

; 106  : 	if (FAILED(m_pShader->SetRawValue("g_TimeAcc", &fAlpha, sizeof(_float))))

  00177	41 b9 04 00 00
	00		 mov	 r9d, 4
  0017d	4c 8d 45 44	 lea	 r8, QWORD PTR fAlpha$[rbp]
  00181	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09IPLGGENB@g_TimeAcc?$AA@
  00188	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0018f	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00196	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z
  0019c	85 c0		 test	 eax, eax
  0019e	7d 07		 jge	 SHORT $LN6@Render

; 107  : 		return E_FAIL;

  001a0	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  001a5	eb 2f		 jmp	 SHORT $LN1@Render
$LN6@Render:

; 108  : 
; 109  : 	m_pShader->Begin(13);

  001a7	ba 0d 00 00 00	 mov	 edx, 13
  001ac	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001b3	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  001ba	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Begin@CShader@Engine@@QEAAJI@Z

; 110  : 	m_pVIBufferRect->Render();

  001c0	48 8b 85 60 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001c7	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  001ce	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Render@CVIBuffer@Engine@@UEAAJXZ

; 111  : 
; 112  : 	return S_OK;

  001d4	33 c0		 xor	 eax, eax
$LN1@Render:

; 113  : }

  001d6	48 8b f8	 mov	 rdi, rax
  001d9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001dd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Render@CBuff@Client@@UEAAJXZ$rtcFrameData
  001e4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001e9	48 8b c7	 mov	 rax, rdi
  001ec	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  001f3	48 33 cd	 xor	 rcx, rbp
  001f6	e8 00 00 00 00	 call	 __security_check_cookie
  001fb	48 8d a5 48 02
	00 00		 lea	 rsp, QWORD PTR [rbp+584]
  00202	5f		 pop	 rdi
  00203	5d		 pop	 rbp
  00204	c3		 ret	 0
?Render@CBuff@Client@@UEAAJXZ ENDP			; Client::CBuff::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?LateTick@CBuff@Client@@UEAAXN@Z
_TEXT	SEGMENT
this$ = 224
TimeDelta$ = 232
?LateTick@CBuff@Client@@UEAAXN@Z PROC			; Client::CBuff::LateTick, COMDAT

; 80   : {

$LN5:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	55		 push	 rbp
  0000c	57		 push	 rdi
  0000d	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 81   : 	if (!m_bRender)

  00030	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00037	0f b6 80 a8 00
	00 00		 movzx	 eax, BYTE PTR [rax+168]
  0003e	85 c0		 test	 eax, eax
  00040	75 02		 jne	 SHORT $LN2@LateTick

; 82   : 		return;

  00042	eb 40		 jmp	 SHORT $LN1@LateTick
$LN2@LateTick:

; 83   : 
; 84   : 	CGameObject::LateTick(TimeDelta);

  00044	f2 0f 10 8d e8
	00 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?LateTick@CGameObject@Engine@@UEAAXN@Z

; 85   : 
; 86   : 	if (m_pRenderer)

  00059	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00060	48 83 78 78 00	 cmp	 QWORD PTR [rax+120], 0
  00065	74 1d		 je	 SHORT $LN3@LateTick

; 87   : 		m_pRenderer->Add_RenderGroup(CRenderer::RENDER_ALPHABLEND, this);

  00067	4c 8b 85 e0 00
	00 00		 mov	 r8, QWORD PTR this$[rbp]
  0006e	ba 03 00 00 00	 mov	 edx, 3
  00073	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_RenderGroup@CRenderer@Engine@@QEAAJW4RENDER_GROUP@12@PEAVCGameObject@2@@Z
$LN3@LateTick:
$LN1@LateTick:

; 88   : }

  00084	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
?LateTick@CBuff@Client@@UEAAXN@Z ENDP			; Client::CBuff::LateTick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Tick@CBuff@Client@@UEAAXN@Z
_TEXT	SEGMENT
pGameInstance$ = 8
vPos$ = 48
vScale$ = 88
vCam$ = 136
vCamPos$ = 192
vDir$ = 240
vRight$ = 288
vUp$ = 336
vLook$ = 384
$T5 = 1008
$T6 = 1056
$T7 = 1104
$T8 = 1152
$T9 = 1200
$T10 = 1248
$T11 = 1296
$T12 = 1344
$T13 = 1392
$T14 = 1440
$T15 = 1488
$T16 = 1536
$T17 = 1584
$T18 = 1632
$T19 = 1680
$T20 = 1728
$T21 = 1776
$T22 = 1824
$T23 = 1872
$T24 = 1920
$T25 = 1968
$T26 = 2016
$T27 = 2064
__$ArrayPad$ = 2088
this$ = 2128
TimeDelta$ = 2136
?Tick@CBuff@Client@@UEAAXN@Z PROC			; Client::CBuff::Tick, COMDAT

; 40   : {

$LN5:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	55		 push	 rbp
  0000c	57		 push	 rdi
  0000d	48 81 ec 58 08
	00 00		 sub	 rsp, 2136		; 00000858H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 16 02 00 00	 mov	 ecx, 534		; 00000216H
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 78
	08 00 00	 mov	 rcx, QWORD PTR [rsp+2168]
  00030	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00037	48 33 c5	 xor	 rax, rbp
  0003a	48 89 85 28 08
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 41   : 	CGameObject::Tick(TimeDelta);

  00041	f2 0f 10 8d 58
	08 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  00049	48 8b 8d 50 08
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Tick@CGameObject@Engine@@UEAAXN@Z

; 42   : 
; 43   : 	CGameInstance* pGameInstance = CGameInstance::GetInstance();

  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ
  0005c	48 89 45 08	 mov	 QWORD PTR pGameInstance$[rbp], rax

; 44   : 	
; 45   : 	if (!m_bRender)

  00060	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	0f b6 80 a8 00
	00 00		 movzx	 eax, BYTE PTR [rax+168]
  0006e	85 c0		 test	 eax, eax
  00070	75 05		 jne	 SHORT $LN2@Tick

; 46   : 		return;

  00072	e9 3e 04 00 00	 jmp	 $LN1@Tick
$LN2@Tick:

; 47   : 
; 48   : 	_vector vPos = m_pPlayerTransform->Get_State(CTransform::STATE_POSITION) + XMLoadFloat4(&m_vDir);

  00077	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
  0008c	0f 29 85 20 04
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  00093	41 b8 03 00 00
	00		 mov	 r8d, 3
  00099	48 8d 95 50 04
	00 00		 lea	 rdx, QWORD PTR $T7[rbp]
  000a0	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a7	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z
  000b4	0f 28 8d 20 04
	00 00		 movaps	 xmm1, XMMWORD PTR $T6[rbp]
  000bb	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000be	e8 00 00 00 00	 call	 ??HDirectX@@YQ?AT__m128@@T1@0@Z ; DirectX::operator+
  000c3	0f 29 85 f0 03
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000ca	0f 28 85 f0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000d1	0f 29 45 30	 movaps	 XMMWORD PTR vPos$[rbp], xmm0

; 49   : 	
; 50   : 	m_fAcc -= TimeDelta * m_fSpeed;

  000d5	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000dc	f3 0f 5a 80 b0
	00 00 00	 cvtss2sd xmm0, DWORD PTR [rax+176]
  000e4	f2 0f 10 8d 58
	08 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  000ec	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  000f0	0f 28 c1	 movaps	 xmm0, xmm1
  000f3	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000fa	f3 0f 5a 88 ac
	00 00 00	 cvtss2sd xmm1, DWORD PTR [rax+172]
  00102	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00106	0f 28 c1	 movaps	 xmm0, xmm1
  00109	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010d	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00114	f3 0f 11 80 ac
	00 00 00	 movss	 DWORD PTR [rax+172], xmm0

; 51   : 	m_fHeight += TimeDelta * ((m_fSpeed * 2.f) - (m_fAcc * 2.f));

  0011c	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00123	f3 0f 10 80 b0
	00 00 00	 movss	 xmm0, DWORD PTR [rax+176]
  0012b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  00133	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0013a	f3 0f 10 88 ac
	00 00 00	 movss	 xmm1, DWORD PTR [rax+172]
  00142	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@40000000
  0014a	f3 0f 5c c1	 subss	 xmm0, xmm1
  0014e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00152	f2 0f 10 8d 58
	08 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  0015a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0015e	0f 28 c1	 movaps	 xmm0, xmm1
  00161	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00168	f3 0f 5a 88 b4
	00 00 00	 cvtss2sd xmm1, DWORD PTR [rax+180]
  00170	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00174	0f 28 c1	 movaps	 xmm0, xmm1
  00177	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0017b	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00182	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR [rax+180], xmm0

; 52   : 	vPos = XMVectorSetY(vPos, m_fHeight);

  0018a	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00191	f3 0f 10 88 b4
	00 00 00	 movss	 xmm1, DWORD PTR [rax+180]
  00199	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vPos$[rbp]
  0019d	e8 00 00 00 00	 call	 ?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z ; DirectX::XMVectorSetY
  001a2	0f 29 85 80 04
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  001a9	0f 28 85 80 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  001b0	0f 29 45 30	 movaps	 XMMWORD PTR vPos$[rbp], xmm0

; 53   : 
; 54   : 	_float3 vScale = m_pTransform->Get_Scale();

  001b4	48 8d 55 58	 lea	 rdx, QWORD PTR vScale$[rbp]
  001b8	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001bf	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  001c6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_Scale@CTransform@Engine@@QEAA?AUXMFLOAT3@DirectX@@XZ

; 55   : 	_float4 vCam = pGameInstance->Get_CamPosition();

  001cc	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR vCam$[rbp]
  001d3	48 8b 4d 08	 mov	 rcx, QWORD PTR pGameInstance$[rbp]
  001d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_CamPosition@CGameInstance@Engine@@QEAA?AUXMFLOAT4@DirectX@@XZ

; 56   : 	_vector vCamPos = XMLoadFloat4(&vCam);

  001dd	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR vCam$[rbp]
  001e4	e8 00 00 00 00	 call	 ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z ; DirectX::XMLoadFloat4
  001e9	0f 29 85 b0 04
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  001f0	0f 28 85 b0 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  001f7	0f 29 85 c0 00
	00 00		 movaps	 XMMWORD PTR vCamPos$[rbp], xmm0

; 57   : 	_vector vDir = XMVector3Normalize(vCamPos - m_pTransform->Get_State(CTransform::STATE_POSITION));

  001fe	41 b8 03 00 00
	00		 mov	 r8d, 3
  00204	48 8d 95 40 05
	00 00		 lea	 rdx, QWORD PTR $T12[rbp]
  0020b	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00212	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00219	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z
  0021f	0f 10 08	 movups	 xmm1, XMMWORD PTR [rax]
  00222	0f 28 85 c0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vCamPos$[rbp]
  00229	e8 00 00 00 00	 call	 ??GDirectX@@YQ?AT__m128@@T1@0@Z ; DirectX::operator-
  0022e	0f 29 85 10 05
	00 00		 movaps	 XMMWORD PTR $T11[rbp], xmm0
  00235	0f 28 85 10 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T11[rbp]
  0023c	e8 00 00 00 00	 call	 ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVector3Normalize
  00241	0f 29 85 e0 04
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  00248	0f 28 85 e0 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T10[rbp]
  0024f	0f 29 85 f0 00
	00 00		 movaps	 XMMWORD PTR vDir$[rbp], xmm0

; 58   : 
; 59   : 	_vector vRight = XMVector3Normalize(XMVector3Cross(VECTOR_UP, vDir));

  00256	0f 57 db	 xorps	 xmm3, xmm3
  00259	0f 57 d2	 xorps	 xmm2, xmm2
  0025c	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  00264	0f 57 c0	 xorps	 xmm0, xmm0
  00267	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  0026c	0f 29 85 d0 05
	00 00		 movaps	 XMMWORD PTR $T15[rbp], xmm0
  00273	0f 28 8d f0 00
	00 00		 movaps	 xmm1, XMMWORD PTR vDir$[rbp]
  0027a	0f 28 85 d0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T15[rbp]
  00281	e8 00 00 00 00	 call	 ?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Cross
  00286	0f 29 85 a0 05
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  0028d	0f 28 85 a0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T14[rbp]
  00294	e8 00 00 00 00	 call	 ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVector3Normalize
  00299	0f 29 85 70 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  002a0	0f 28 85 70 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T13[rbp]
  002a7	0f 29 85 20 01
	00 00		 movaps	 XMMWORD PTR vRight$[rbp], xmm0

; 60   : 	_vector vUp = VECTOR_UP;

  002ae	0f 57 db	 xorps	 xmm3, xmm3
  002b1	0f 57 d2	 xorps	 xmm2, xmm2
  002b4	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  002bc	0f 57 c0	 xorps	 xmm0, xmm0
  002bf	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  002c4	0f 29 85 00 06
	00 00		 movaps	 XMMWORD PTR $T16[rbp], xmm0
  002cb	0f 28 85 00 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T16[rbp]
  002d2	0f 29 85 50 01
	00 00		 movaps	 XMMWORD PTR vUp$[rbp], xmm0

; 61   : 	_vector vLook = XMVector3Normalize(XMVector3Cross(vRight, vUp));

  002d9	0f 28 8d 50 01
	00 00		 movaps	 xmm1, XMMWORD PTR vUp$[rbp]
  002e0	0f 28 85 20 01
	00 00		 movaps	 xmm0, XMMWORD PTR vRight$[rbp]
  002e7	e8 00 00 00 00	 call	 ?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVector3Cross
  002ec	0f 29 85 60 06
	00 00		 movaps	 XMMWORD PTR $T18[rbp], xmm0
  002f3	0f 28 85 60 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T18[rbp]
  002fa	e8 00 00 00 00	 call	 ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVector3Normalize
  002ff	0f 29 85 30 06
	00 00		 movaps	 XMMWORD PTR $T17[rbp], xmm0
  00306	0f 28 85 30 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T17[rbp]
  0030d	0f 29 85 80 01
	00 00		 movaps	 XMMWORD PTR vLook$[rbp], xmm0

; 62   : 
; 63   : 	m_pTransform->Set_State(CTransform::STATE_RIGHT, vRight * 0.2f);

  00314	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3e4ccccd
  0031c	0f 28 85 20 01
	00 00		 movaps	 xmm0, XMMWORD PTR vRight$[rbp]
  00323	e8 00 00 00 00	 call	 ??DDirectX@@YQ?AT__m128@@T1@M@Z ; DirectX::operator*
  00328	0f 29 85 90 06
	00 00		 movaps	 XMMWORD PTR $T19[rbp], xmm0
  0032f	0f 28 85 90 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T19[rbp]
  00336	0f 29 85 50 07
	00 00		 movaps	 XMMWORD PTR $T23[rbp], xmm0
  0033d	4c 8d 85 50 07
	00 00		 lea	 r8, QWORD PTR $T23[rbp]
  00344	33 d2		 xor	 edx, edx
  00346	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0034d	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00354	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 64   : 	m_pTransform->Set_State(CTransform::STATE_UP, vUp * 0.2f);

  0035a	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3e4ccccd
  00362	0f 28 85 50 01
	00 00		 movaps	 xmm0, XMMWORD PTR vUp$[rbp]
  00369	e8 00 00 00 00	 call	 ??DDirectX@@YQ?AT__m128@@T1@M@Z ; DirectX::operator*
  0036e	0f 29 85 c0 06
	00 00		 movaps	 XMMWORD PTR $T20[rbp], xmm0
  00375	0f 28 85 c0 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T20[rbp]
  0037c	0f 29 85 80 07
	00 00		 movaps	 XMMWORD PTR $T24[rbp], xmm0
  00383	4c 8d 85 80 07
	00 00		 lea	 r8, QWORD PTR $T24[rbp]
  0038a	ba 01 00 00 00	 mov	 edx, 1
  0038f	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00396	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0039d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 65   : 	m_pTransform->Set_State(CTransform::STATE_LOOK, vLook * 0.2f);

  003a3	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3e4ccccd
  003ab	0f 28 85 80 01
	00 00		 movaps	 xmm0, XMMWORD PTR vLook$[rbp]
  003b2	e8 00 00 00 00	 call	 ??DDirectX@@YQ?AT__m128@@T1@M@Z ; DirectX::operator*
  003b7	0f 29 85 f0 06
	00 00		 movaps	 XMMWORD PTR $T21[rbp], xmm0
  003be	0f 28 85 f0 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T21[rbp]
  003c5	0f 29 85 b0 07
	00 00		 movaps	 XMMWORD PTR $T25[rbp], xmm0
  003cc	4c 8d 85 b0 07
	00 00		 lea	 r8, QWORD PTR $T25[rbp]
  003d3	ba 02 00 00 00	 mov	 edx, 2
  003d8	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  003df	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  003e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 66   : 	m_pTransform->Set_State(CTransform::STATE_POSITION, vPos);

  003ec	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vPos$[rbp]
  003f0	0f 29 85 e0 07
	00 00		 movaps	 XMMWORD PTR $T26[rbp], xmm0
  003f7	4c 8d 85 e0 07
	00 00		 lea	 r8, QWORD PTR $T26[rbp]
  003fe	ba 03 00 00 00	 mov	 edx, 3
  00403	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0040a	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00411	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 67   : 
; 68   : 	if (m_fAcc <= 0.f)

  00417	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0041e	0f 57 c0	 xorps	 xmm0, xmm0
  00421	0f 2f 80 ac 00
	00 00		 comiss	 xmm0, DWORD PTR [rax+172]
  00428	0f 82 87 00 00
	00		 jb	 $LN3@Tick

; 69   : 	{
; 70   : 		m_bRender = false;

  0042e	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00435	c6 80 a8 00 00
	00 00		 mov	 BYTE PTR [rax+168], 0

; 71   : 		m_fAcc = m_fSpeed;

  0043c	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00443	48 8b 8d 50 08
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0044a	f3 0f 10 81 b0
	00 00 00	 movss	 xmm0, DWORD PTR [rcx+176]
  00452	f3 0f 11 80 ac
	00 00 00	 movss	 DWORD PTR [rax+172], xmm0

; 72   : 		m_fHeight = 0.0f;

  0045a	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00461	0f 57 c0	 xorps	 xmm0, xmm0
  00464	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR [rax+180], xmm0

; 73   : 		vPos = XMVectorSetY(vPos, 0.0f);

  0046c	0f 57 c9	 xorps	 xmm1, xmm1
  0046f	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vPos$[rbp]
  00473	e8 00 00 00 00	 call	 ?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z ; DirectX::XMVectorSetY
  00478	0f 29 85 20 07
	00 00		 movaps	 XMMWORD PTR $T22[rbp], xmm0
  0047f	0f 28 85 20 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T22[rbp]
  00486	0f 29 45 30	 movaps	 XMMWORD PTR vPos$[rbp], xmm0

; 74   : 		m_pTransform->Set_State(CTransform::STATE_POSITION, vPos);

  0048a	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vPos$[rbp]
  0048e	0f 29 85 10 08
	00 00		 movaps	 XMMWORD PTR $T27[rbp], xmm0
  00495	4c 8d 85 10 08
	00 00		 lea	 r8, QWORD PTR $T27[rbp]
  0049c	ba 03 00 00 00	 mov	 edx, 3
  004a1	48 8b 85 50 08
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  004a8	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  004af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z
$LN3@Tick:
$LN1@Tick:

; 75   : 	}
; 76   : 
; 77   : }

  004b5	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  004b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Tick@CBuff@Client@@UEAAXN@Z$rtcFrameData
  004c0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  004c5	48 8b 8d 28 08
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  004cc	48 33 cd	 xor	 rcx, rbp
  004cf	e8 00 00 00 00	 call	 __security_check_cookie
  004d4	48 8d a5 38 08
	00 00		 lea	 rsp, QWORD PTR [rbp+2104]
  004db	5f		 pop	 rdi
  004dc	5d		 pop	 rbp
  004dd	c3		 ret	 0
?Tick@CBuff@Client@@UEAAXN@Z ENDP			; Client::CBuff::Tick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Initialize@CBuff@Client@@UEAAJPEAX@Z
_TEXT	SEGMENT
vPos$ = 16
$T1 = 256
$T2 = 292
$T3 = 336
$T4 = 384
this$ = 448
pArg$ = 456
?Initialize@CBuff@Client@@UEAAJPEAX@Z PROC		; Client::CBuff::Initialize, COMDAT

; 25   : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec c0 01
	00 00		 sub	 rsp, 448		; 000001c0H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 70 00 00 00	 mov	 ecx, 112		; 00000070H
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+488]

; 26   : 	if (FAILED(CGameObject::Initialize(pArg)))

  00030	48 8b 95 c8 01
	00 00		 mov	 rdx, QWORD PTR pArg$[rbp]
  00037	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Initialize@CGameObject@Engine@@UEAAJPEAX@Z
  00044	85 c0		 test	 eax, eax
  00046	7d 0a		 jge	 SHORT $LN2@Initialize

; 27   : 		return E_FAIL;

  00048	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0004d	e9 cc 00 00 00	 jmp	 $LN1@Initialize
$LN2@Initialize:

; 28   : 
; 29   : 	if (FAILED(AddComponent()))

  00052	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ?AddComponent@CBuff@Client@@AEAAJXZ ; Client::CBuff::AddComponent
  0005e	85 c0		 test	 eax, eax
  00060	7d 0a		 jge	 SHORT $LN3@Initialize

; 30   : 		return E_FAIL;

  00062	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00067	e9 b2 00 00 00	 jmp	 $LN1@Initialize
$LN3@Initialize:

; 31   : 
; 32   : 	_vector vPos = XMVectorSet(30.f, 0.1f, 25.f, 1.f);

  0006c	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  00074	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@41c80000
  0007c	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3dcccccd
  00084	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  0008c	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  00091	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00098	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0009f	0f 29 45 10	 movaps	 XMMWORD PTR vPos$[rbp], xmm0

; 33   : 	m_pTransform->Set_State(CTransform::STATE_POSITION, vPos);

  000a3	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR vPos$[rbp]
  000a7	0f 29 85 50 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  000ae	4c 8d 85 50 01
	00 00		 lea	 r8, QWORD PTR $T3[rbp]
  000b5	ba 03 00 00 00	 mov	 edx, 3
  000ba	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c1	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 34   : 	m_pTransform->Set_Scale(_float3(0.15f, 0.15f, 0.f));

  000ce	0f 57 db	 xorps	 xmm3, xmm3
  000d1	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3e19999a
  000d9	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3e19999a
  000e1	48 8d 8d 24 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  000e8	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  000ed	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  000f4	48 8b f9	 mov	 rdi, rcx
  000f7	48 8b f0	 mov	 rsi, rax
  000fa	b9 0c 00 00 00	 mov	 ecx, 12
  000ff	f3 a4		 rep movsb
  00101	48 8d 95 80 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00108	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0010f	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_Scale@CTransform@Engine@@QEAAXUXMFLOAT3@DirectX@@@Z

; 35   : 	
; 36   : 	return S_OK;

  0011c	33 c0		 xor	 eax, eax
$LN1@Initialize:

; 37   : }

  0011e	48 8d a5 a0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+416]
  00125	5f		 pop	 rdi
  00126	5e		 pop	 rsi
  00127	5d		 pop	 rbp
  00128	c3		 ret	 0
?Initialize@CBuff@Client@@UEAAJPEAX@Z ENDP		; Client::CBuff::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?Initialize_Prototype@CBuff@Client@@UEAAJXZ
_TEXT	SEGMENT
this$ = 224
?Initialize_Prototype@CBuff@Client@@UEAAJXZ PROC	; Client::CBuff::Initialize_Prototype, COMDAT

; 17   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 18   : 	if (FAILED(CGameObject::Initialize_Prototype()))

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Initialize_Prototype@CGameObject@Engine@@UEAAJXZ
  00037	85 c0		 test	 eax, eax
  00039	7d 07		 jge	 SHORT $LN2@Initialize

; 19   : 		return E_FAIL;

  0003b	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00040	eb 02		 jmp	 SHORT $LN1@Initialize
$LN2@Initialize:

; 20   : 
; 21   : 	return S_OK;

  00042	33 c0		 xor	 eax, eax
$LN1@Initialize:

; 22   : }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?Initialize_Prototype@CBuff@Client@@UEAAJXZ ENDP	; Client::CBuff::Initialize_Prototype
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ??1CBuff@Client@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1CBuff@Client@@UEAA@XZ PROC				; Client::CBuff::~CBuff, COMDAT

; 9    : }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CGameObject@Engine@@MEAA@XZ
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1CBuff@Client@@UEAA@XZ ENDP				; Client::CBuff::~CBuff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
; File c:\users\arcco\documents\github\framework\client\public\buff.h
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ??0CBuff@Client@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
rhs$ = 264
??0CBuff@Client@@QEAA@AEBV01@@Z PROC			; Client::CBuff::CBuff, COMDAT

; 13   : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2

; 12   : 	: CGameObject(rhs)

  0003a	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR rhs$[rbp]
  00041	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0CGameObject@Engine@@IEAA@AEBV01@@Z
  0004e	90		 npad	 1

; 13   : {

  0004f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CBuff@Client@@6B@
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx
; File c:\users\arcco\documents\github\framework\client\public\buff.h

; 44   : 	CRenderer* m_pRenderer = nullptr;

  00060	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0

; 45   : 	CTransform* m_pTransform = nullptr;

  0006f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00076	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0

; 46   : 	CShader* m_pShader = nullptr;

  00081	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00088	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 47   : 	CTexture* m_pDiffuseTexture = nullptr;

  00093	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009a	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 48   : 	CVIBuffer_Rect* m_pVIBufferRect = nullptr;

  000a5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0

; 49   : 
; 50   : 	CTransform* m_pPlayerTransform = nullptr;

  000b7	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000be	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0

; 51   : 	_bool m_bRender = true;

  000c9	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1

; 52   : 	_float m_fAcc = 1.5f;

  000d7	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000de	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  000e6	f3 0f 11 80 ac
	00 00 00	 movss	 DWORD PTR [rax+172], xmm0

; 53   : 	_float m_fSpeed = 1.5f;

  000ee	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  000fd	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR [rax+176], xmm0

; 54   : 	_float m_fHeight = 0.0f;

  00105	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0010c	0f 57 c0	 xorps	 xmm0, xmm0
  0010f	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR [rax+180], xmm0
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp

; 13   : {

  00117	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011e	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00124	48 8b c8	 mov	 rcx, rax
  00127	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QEAA@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  0012c	90		 npad	 1

; 14   : }

  0012d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00134	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0013b	5f		 pop	 rdi
  0013c	5d		 pop	 rbp
  0013d	c3		 ret	 0
??0CBuff@Client@@QEAA@AEBV01@@Z ENDP			; Client::CBuff::CBuff
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
rhs$ = 264
?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA PROC	; `Client::CBuff::CBuff'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CGameObject@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA ENDP	; `Client::CBuff::CBuff'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
rhs$ = 264
?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA PROC	; `Client::CBuff::CBuff'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CGameObject@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CBuff@Client@@QEAA@AEBV01@@Z@4HA ENDP	; `Client::CBuff::CBuff'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
; File c:\users\arcco\documents\github\framework\client\public\buff.h
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
pDevice$ = 264
pContext$ = 272
??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z PROC ; Client::CBuff::CBuff, COMDAT

; 8    : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2

; 7    : 	: CGameObject(pDevice, pContext)

  0003f	4c 8b 85 10 01
	00 00		 mov	 r8, QWORD PTR pContext$[rbp]
  00046	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR pDevice$[rbp]
  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0CGameObject@Engine@@IEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
  0005a	90		 npad	 1

; 8    : {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CBuff@Client@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx
; File c:\users\arcco\documents\github\framework\client\public\buff.h

; 44   : 	CRenderer* m_pRenderer = nullptr;

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0

; 45   : 	CTransform* m_pTransform = nullptr;

  0007b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00082	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0

; 46   : 	CShader* m_pShader = nullptr;

  0008d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00094	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 47   : 	CTexture* m_pDiffuseTexture = nullptr;

  0009f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a6	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 48   : 	CVIBuffer_Rect* m_pVIBufferRect = nullptr;

  000b1	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0

; 49   : 
; 50   : 	CTransform* m_pPlayerTransform = nullptr;

  000c3	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ca	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0

; 51   : 	_bool m_bRender = true;

  000d5	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000dc	c6 80 a8 00 00
	00 01		 mov	 BYTE PTR [rax+168], 1

; 52   : 	_float m_fAcc = 1.5f;

  000e3	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  000f2	f3 0f 11 80 ac
	00 00 00	 movss	 DWORD PTR [rax+172], xmm0

; 53   : 	_float m_fSpeed = 1.5f;

  000fa	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00101	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc00000
  00109	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR [rax+176], xmm0

; 54   : 	_float m_fHeight = 0.0f;

  00111	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00118	0f 57 c0	 xorps	 xmm0, xmm0
  0011b	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR [rax+180], xmm0
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp

; 8    : {

  00123	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00130	48 8b c8	 mov	 rcx, rax
  00133	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QEAA@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  00138	90		 npad	 1

; 9    : }

  00139	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00140	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00147	5f		 pop	 rdi
  00148	5d		 pop	 rbp
  00149	c3		 ret	 0
??0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ENDP ; Client::CBuff::CBuff
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
pDevice$ = 264
pContext$ = 272
?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CBuff::CBuff'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CGameObject@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CBuff::CBuff'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
pDevice$ = 264
pContext$ = 272
?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CBuff::CBuff'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CGameObject@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CBuff@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CBuff::CBuff'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z
_TEXT	SEGMENT
V$ = 16
vLengthSq$ = 64
vTemp$ = 112
vResult$ = 160
vZeroMask$ = 208
vTemp1$ = 256
vTemp2$ = 304
$T1 = 928
$T2 = 976
$T3 = 1024
$T4 = 1072
$T5 = 1120
$T6 = 1168
$T7 = 1216
$T8 = 1264
$T9 = 1312
$T10 = 1360
$T11 = 1408
$T12 = 1456
$T13 = 1504
$T14 = 1552
$T15 = 1600
$T16 = 1648
$T17 = 1696
?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z PROC	; DirectX::XMVector3Normalize, COMDAT

; 9238 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec f8 06
	00 00		 sub	 rsp, 1784		; 000006f8H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 be 01 00 00	 mov	 ecx, 446		; 000001beH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00022	48 89 84 24 10
	07 00 00	 mov	 QWORD PTR [rsp+1808], rax
  0002a	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 9239 : #if defined(_XM_NO_INTRINSICS_)
; 9240 :     float fLength;
; 9241 :     XMVECTOR vResult;
; 9242 : 
; 9243 :     vResult = XMVector3Length( V );
; 9244 :     fLength = vResult.vector4_f32[0];
; 9245 : 
; 9246 :     // Prevent divide by zero
; 9247 :     if (fLength > 0) {
; 9248 :         fLength = 1.0f/fLength;
; 9249 :     }
; 9250 :     
; 9251 :     vResult.vector4_f32[0] = V.vector4_f32[0]*fLength;
; 9252 :     vResult.vector4_f32[1] = V.vector4_f32[1]*fLength;
; 9253 :     vResult.vector4_f32[2] = V.vector4_f32[2]*fLength;
; 9254 :     vResult.vector4_f32[3] = V.vector4_f32[3]*fLength;
; 9255 :     return vResult;
; 9256 : 
; 9257 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 9258 :     // Dot3
; 9259 :     float32x4_t vTemp = vmulq_f32( V, V );
; 9260 :     float32x2_t v1 = vget_low_f32( vTemp );
; 9261 :     float32x2_t v2 = vget_high_f32( vTemp );
; 9262 :     v1 = vpadd_f32( v1, v1 );
; 9263 :     v2 = vdup_lane_f32( v2, 0 );
; 9264 :     v1 = vadd_f32( v1, v2 );
; 9265 :     uint32x2_t VEqualsZero = vceq_f32( v1, vdup_n_f32(0) );
; 9266 :     uint32x2_t VEqualsInf = vceq_f32( v1, vget_low_f32(g_XMInfinity) );
; 9267 :     // Reciprocal sqrt (2 iterations of Newton-Raphson)
; 9268 :     float32x2_t S0 = vrsqrte_f32( v1 );
; 9269 :     float32x2_t P0 = vmul_f32( v1, S0 );
; 9270 :     float32x2_t R0 = vrsqrts_f32( P0, S0 );
; 9271 :     float32x2_t S1 = vmul_f32( S0, R0 );
; 9272 :     float32x2_t P1 = vmul_f32( v1, S1 );
; 9273 :     float32x2_t R1 = vrsqrts_f32( P1, S1 );
; 9274 :     v2 = vmul_f32( S1, R1 );
; 9275 :     // Normalize
; 9276 :     XMVECTOR vResult = vmulq_f32( V, vcombine_f32(v2,v2) );
; 9277 :     vResult = vbslq_f32( vcombine_f32(VEqualsZero,VEqualsZero), vdupq_n_f32(0), vResult );
; 9278 :     return vbslq_f32( vcombine_f32(VEqualsInf,VEqualsInf), g_XMQNaN, vResult );
; 9279 : #elif defined(_XM_SSE_INTRINSICS_)
; 9280 :     // Perform the dot product on x,y and z only
; 9281 :     XMVECTOR vLengthSq = _mm_mul_ps(V,V);

  0002e	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00032	0f 59 45 10	 mulps	 xmm0, XMMWORD PTR V$[rbp]
  00036	0f 29 85 a0 03
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0003d	0f 28 85 a0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00044	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9282 :     XMVECTOR vTemp = XM_PERMUTE_PS(vLengthSq,_MM_SHUFFLE(2,1,2,1));

  00048	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  0004c	0f c6 45 40 99	 shufps	 xmm0, XMMWORD PTR vLengthSq$[rbp], 153 ; 00000099H
  00051	0f 29 85 d0 03
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00058	0f 28 85 d0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0005f	0f 29 45 70	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9283 :     vLengthSq = _mm_add_ss(vLengthSq,vTemp);

  00063	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00067	f3 0f 58 45 70	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  0006c	0f 29 85 00 04
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00073	0f 28 85 00 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  0007a	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9284 :     vTemp = XM_PERMUTE_PS(vTemp,_MM_SHUFFLE(1,1,1,1));

  0007e	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  00082	0f c6 45 70 55	 shufps	 xmm0, XMMWORD PTR vTemp$[rbp], 85 ; 00000055H
  00087	0f 29 85 30 04
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  0008e	0f 28 85 30 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  00095	0f 29 45 70	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9285 :     vLengthSq = _mm_add_ss(vLengthSq,vTemp);

  00099	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  0009d	f3 0f 58 45 70	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  000a2	0f 29 85 60 04
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000a9	0f 28 85 60 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000b0	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9286 :     vLengthSq = XM_PERMUTE_PS(vLengthSq,_MM_SHUFFLE(0,0,0,0));

  000b4	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  000b8	0f c6 45 40 00	 shufps	 xmm0, XMMWORD PTR vLengthSq$[rbp], 0
  000bd	0f 29 85 90 04
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000c4	0f 28 85 90 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000cb	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9287 :     // Prepare for the division
; 9288 :     XMVECTOR vResult = _mm_sqrt_ps(vLengthSq);

  000cf	0f 51 45 40	 sqrtps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  000d3	0f 29 85 c0 04
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  000da	0f 28 85 c0 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  000e1	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9289 :     // Create zero with a single instruction
; 9290 :     XMVECTOR vZeroMask = _mm_setzero_ps();

  000e8	0f 57 c0	 xorps	 xmm0, xmm0
  000eb	0f 29 85 f0 04
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  000f2	0f 28 85 f0 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  000f9	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vZeroMask$[rbp], xmm0

; 9291 :     // Test for a divide by zero (Must be FP to detect -0.0)
; 9292 :     vZeroMask = _mm_cmpneq_ps(vZeroMask,vResult);

  00100	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vZeroMask$[rbp]
  00107	0f c2 85 a0 00
	00 00 04	 cmpneqps xmm0, XMMWORD PTR vResult$[rbp]
  0010f	0f 29 85 20 05
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  00116	0f 28 85 20 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  0011d	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vZeroMask$[rbp], xmm0

; 9293 :     // Failsafe on zero (Or epsilon) length planes
; 9294 :     // If the length is infinity, set the elements to zero
; 9295 :     vLengthSq = _mm_cmpneq_ps(vLengthSq,g_XMInfinity);

  00124	48 8d 95 80 05
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMInfinity
  00132	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  00137	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  0013b	0f c2 00 04	 cmpneqps xmm0, XMMWORD PTR [rax]
  0013f	0f 29 85 50 05
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  00146	0f 28 85 50 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T10[rbp]
  0014d	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9296 :     // Divide to perform the normalization
; 9297 :     vResult = _mm_div_ps(V,vResult);

  00151	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00155	0f 5e 85 a0 00
	00 00		 divps	 xmm0, XMMWORD PTR vResult$[rbp]
  0015c	0f 29 85 b0 05
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  00163	0f 28 85 b0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T12[rbp]
  0016a	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9298 :     // Any that are infinity, set to zero
; 9299 :     vResult = _mm_and_ps(vResult,vZeroMask);

  00171	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00178	0f 54 85 d0 00
	00 00		 andps	 xmm0, XMMWORD PTR vZeroMask$[rbp]
  0017f	0f 29 85 e0 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  00186	0f 28 85 e0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T13[rbp]
  0018d	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9300 :     // Select qnan or result based on infinite length
; 9301 :     XMVECTOR vTemp1 = _mm_andnot_ps(vLengthSq,g_XMQNaN);

  00194	48 8d 95 40 06
	00 00		 lea	 rdx, QWORD PTR $T15[rbp]
  0019b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMQNaN
  001a2	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  001a7	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  001ab	0f 55 00	 andnps	 xmm0, XMMWORD PTR [rax]
  001ae	0f 29 85 10 06
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  001b5	0f 28 85 10 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T14[rbp]
  001bc	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 9302 :     XMVECTOR vTemp2 = _mm_and_ps(vResult,vLengthSq);

  001c3	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  001ca	0f 54 45 40	 andps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  001ce	0f 29 85 70 06
	00 00		 movaps	 XMMWORD PTR $T16[rbp], xmm0
  001d5	0f 28 85 70 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T16[rbp]
  001dc	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 9303 :     vResult = _mm_or_ps(vTemp1,vTemp2);

  001e3	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  001ea	0f 56 85 30 01
	00 00		 orps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  001f1	0f 29 85 a0 06
	00 00		 movaps	 XMMWORD PTR $T17[rbp], xmm0
  001f8	0f 28 85 a0 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T17[rbp]
  001ff	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9304 :     return vResult;

  00206	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]

; 9305 : #endif
; 9306 : }

  0020d	48 8d a5 c8 06
	00 00		 lea	 rsp, QWORD PTR [rbp+1736]
  00214	5f		 pop	 rdi
  00215	5d		 pop	 rbp
  00216	c3		 ret	 0
?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ENDP	; DirectX::XMVector3Normalize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
vTemp1$ = 112
vTemp2$ = 160
vResult$ = 208
$T1 = 640
$T2 = 688
$T3 = 736
$T4 = 784
$T5 = 832
$T6 = 880
$T7 = 928
$T8 = 976
$T9 = 1024
?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z PROC	; DirectX::XMVector3Cross, COMDAT

; 8922 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 58 04
	00 00		 sub	 rsp, 1112		; 00000458H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 16 01 00 00	 mov	 ecx, 278		; 00000116H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 70
	04 00 00	 mov	 QWORD PTR [rsp+1136], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 78
	04 00 00	 mov	 QWORD PTR [rsp+1144], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 8923 :     // [ V1.y*V2.z - V1.z*V2.y, V1.z*V2.x - V1.x*V2.z, V1.x*V2.y - V1.y*V2.x ]
; 8924 : 
; 8925 : #if defined(_XM_NO_INTRINSICS_)
; 8926 :     XMVECTOR vResult = {
; 8927 :         (V1.vector4_f32[1] * V2.vector4_f32[2]) - (V1.vector4_f32[2] * V2.vector4_f32[1]),
; 8928 :         (V1.vector4_f32[2] * V2.vector4_f32[0]) - (V1.vector4_f32[0] * V2.vector4_f32[2]),
; 8929 :         (V1.vector4_f32[0] * V2.vector4_f32[1]) - (V1.vector4_f32[1] * V2.vector4_f32[0]),
; 8930 :         0.0f
; 8931 :     };
; 8932 :     return vResult;
; 8933 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 8934 :     float32x2_t v1xy = vget_low_f32(V1);
; 8935 :     float32x2_t v2xy = vget_low_f32(V2);
; 8936 : 
; 8937 :     float32x2_t v1yx = vrev64_f32( v1xy );
; 8938 :     float32x2_t v2yx = vrev64_f32( v2xy );
; 8939 : 
; 8940 :     float32x2_t v1zz = vdup_lane_f32( vget_high_f32(V1), 0 );
; 8941 :     float32x2_t v2zz = vdup_lane_f32( vget_high_f32(V2), 0 );
; 8942 : 
; 8943 :     XMVECTOR vResult = vmulq_f32( vcombine_f32(v1yx,v1xy), vcombine_f32(v2zz,v2yx) );
; 8944 :     vResult = vmlsq_f32( vResult, vcombine_f32(v1zz,v1yx), vcombine_f32(v2yx,v2xy) );
; 8945 :     vResult = veorq_u32( vResult, g_XMFlipY );
; 8946 :     return vandq_u32( vResult, g_XMMask3 );
; 8947 : #elif defined(_XM_SSE_INTRINSICS_)
; 8948 :     // y1,z1,x1,w1
; 8949 :     XMVECTOR vTemp1 = XM_PERMUTE_PS(V1,_MM_SHUFFLE(3,0,2,1));

  0003e	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00042	0f c6 45 10 c9	 shufps	 xmm0, XMMWORD PTR V1$[rbp], 201 ; 000000c9H
  00047	0f 29 85 80 02
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004e	0f 28 85 80 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00055	0f 29 45 70	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 8950 :     // z2,x2,y2,w2
; 8951 :     XMVECTOR vTemp2 = XM_PERMUTE_PS(V2,_MM_SHUFFLE(3,1,0,2));

  00059	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR V2$[rbp]
  0005d	0f c6 45 40 d2	 shufps	 xmm0, XMMWORD PTR V2$[rbp], 210 ; 000000d2H
  00062	0f 29 85 b0 02
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00069	0f 28 85 b0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  00070	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 8952 :     // Perform the left operation
; 8953 :     XMVECTOR vResult = _mm_mul_ps(vTemp1,vTemp2);

  00077	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  0007b	0f 59 85 a0 00
	00 00		 mulps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  00082	0f 29 85 e0 02
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00089	0f 28 85 e0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  00090	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 8954 :     // z1,x1,y1,w1
; 8955 :     vTemp1 = XM_PERMUTE_PS(vTemp1,_MM_SHUFFLE(3,0,2,1));

  00097	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  0009b	0f c6 45 70 c9	 shufps	 xmm0, XMMWORD PTR vTemp1$[rbp], 201 ; 000000c9H
  000a0	0f 29 85 10 03
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000a7	0f 28 85 10 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000ae	0f 29 45 70	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 8956 :     // y2,z2,x2,w2
; 8957 :     vTemp2 = XM_PERMUTE_PS(vTemp2,_MM_SHUFFLE(3,1,0,2));

  000b2	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  000b9	0f c6 85 a0 00
	00 00 d2	 shufps	 xmm0, XMMWORD PTR vTemp2$[rbp], 210 ; 000000d2H
  000c1	0f 29 85 40 03
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000c8	0f 28 85 40 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000cf	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 8958 :     // Perform the right operation
; 8959 :     vTemp1 = _mm_mul_ps(vTemp1,vTemp2);

  000d6	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  000da	0f 59 85 a0 00
	00 00		 mulps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  000e1	0f 29 85 70 03
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000e8	0f 28 85 70 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000ef	0f 29 45 70	 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 8960 :     // Subract the right from left, and return answer
; 8961 :     vResult = _mm_sub_ps(vResult,vTemp1);

  000f3	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  000fa	0f 5c 45 70	 subps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  000fe	0f 29 85 a0 03
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  00105	0f 28 85 a0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  0010c	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 8962 :     // Set w to zero
; 8963 :     return _mm_and_ps(vResult,g_XMMask3);

  00113	48 8d 95 00 04
	00 00		 lea	 rdx, QWORD PTR $T9[rbp]
  0011a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMMask3@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMask3
  00121	e8 00 00 00 00	 call	 ??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORU32::operator __m128
  00126	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  0012d	0f 54 00	 andps	 xmm0, XMMWORD PTR [rax]
  00130	0f 29 85 d0 03
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  00137	0f 28 85 d0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]

; 8964 : #endif
; 8965 : }

  0013e	48 8d a5 28 04
	00 00		 lea	 rsp, QWORD PTR [rbp+1064]
  00145	5f		 pop	 rdi
  00146	5d		 pop	 rbp
  00147	c3		 ret	 0
?XMVector3Cross@DirectX@@YQ?AT__m128@@T2@0@Z ENDP	; DirectX::XMVector3Cross
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z
_TEXT	SEGMENT
V$ = 16
vResult$ = 64
$T1 = 304
$T2 = 352
ScaleFactor$ = 424
?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z PROC	; DirectX::XMVectorScale, COMDAT

; 2965 : {

$LN3:
  00000	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0000f	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00027	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR [rsp+432], rax
  0002f	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 2966 : #if defined(_XM_NO_INTRINSICS_)
; 2967 :     XMVECTOR Result;
; 2968 :     Result.vector4_f32[0] = V.vector4_f32[0] * ScaleFactor;
; 2969 :     Result.vector4_f32[1] = V.vector4_f32[1] * ScaleFactor;
; 2970 :     Result.vector4_f32[2] = V.vector4_f32[2] * ScaleFactor;
; 2971 :     Result.vector4_f32[3] = V.vector4_f32[3] * ScaleFactor;
; 2972 :     return Result;
; 2973 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2974 :     return XM_VMULQ_N_F32( V, ScaleFactor );
; 2975 : #elif defined(_XM_SSE_INTRINSICS_)
; 2976 :    XMVECTOR vResult = _mm_set_ps1(ScaleFactor);

  00033	f3 0f 10 85 a8
	01 00 00	 movss	 xmm0, DWORD PTR ScaleFactor$[rbp]
  0003b	0f c6 c0 00	 shufps	 xmm0, xmm0, 0
  0003f	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00046	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0004d	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 2977 :    return _mm_mul_ps(vResult,V);

  00051	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00055	0f 59 45 10	 mulps	 xmm0, XMMWORD PTR V$[rbp]
  00059	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00060	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]

; 2978 : #endif
; 2979 : }

  00067	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z ENDP	; DirectX::XMVectorScale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
$T1 = 304
?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z PROC	; DirectX::XMVectorSubtract, COMDAT

; 2784 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0000a	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR [rsp+384], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR [rsp+392], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 2785 : #if defined(_XM_NO_INTRINSICS_)
; 2786 : 
; 2787 :     XMVECTOR Result;
; 2788 :     Result.vector4_f32[0] = V1.vector4_f32[0] - V2.vector4_f32[0];
; 2789 :     Result.vector4_f32[1] = V1.vector4_f32[1] - V2.vector4_f32[1];
; 2790 :     Result.vector4_f32[2] = V1.vector4_f32[2] - V2.vector4_f32[2];
; 2791 :     Result.vector4_f32[3] = V1.vector4_f32[3] - V2.vector4_f32[3];
; 2792 :     return Result;
; 2793 : 
; 2794 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2795 :     return vsubq_f32( V1, V2 );
; 2796 : #elif defined(_XM_SSE_INTRINSICS_)
; 2797 :     return _mm_sub_ps( V1, V2 );

  0003e	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00042	0f 5c 45 40	 subps	 xmm0, XMMWORD PTR V2$[rbp]
  00046	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004d	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 2798 : #endif
; 2799 : }

  00054	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z ENDP	; DirectX::XMVectorSubtract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
$T1 = 304
?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z PROC		; DirectX::XMVectorAdd, COMDAT

; 2701 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0000a	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR [rsp+384], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR [rsp+392], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 2702 : #if defined(_XM_NO_INTRINSICS_)
; 2703 : 
; 2704 :     XMVECTOR Result;
; 2705 :     Result.vector4_f32[0] = V1.vector4_f32[0] + V2.vector4_f32[0];
; 2706 :     Result.vector4_f32[1] = V1.vector4_f32[1] + V2.vector4_f32[1];
; 2707 :     Result.vector4_f32[2] = V1.vector4_f32[2] + V2.vector4_f32[2];
; 2708 :     Result.vector4_f32[3] = V1.vector4_f32[3] + V2.vector4_f32[3];
; 2709 :     return Result;
; 2710 : 
; 2711 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2712 :     return vaddq_f32( V1, V2 );
; 2713 : #elif defined(_XM_SSE_INTRINSICS_)
; 2714 :     return _mm_add_ps( V1, V2 );

  0003e	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00042	0f 58 45 40	 addps	 xmm0, XMMWORD PTR V2$[rbp]
  00046	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004d	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 2715 : #endif
; 2716 : }

  00054	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z ENDP		; DirectX::XMVectorAdd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z
_TEXT	SEGMENT
V$ = 16
vResult$ = 64
vTemp$ = 112
$T1 = 352
$T2 = 400
$T3 = 448
$T4 = 496
y$ = 568
?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z PROC		; DirectX::XMVectorSetY, COMDAT

; 742  : {

$LN3:
  00000	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  0000f	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00027	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR [rsp+576], rax
  0002f	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 743  : #if defined(_XM_NO_INTRINSICS_)
; 744  :     XMVECTOR U;
; 745  :     U.vector4_f32[0] = V.vector4_f32[0];
; 746  :     U.vector4_f32[1] = y;
; 747  :     U.vector4_f32[2] = V.vector4_f32[2];
; 748  :     U.vector4_f32[3] = V.vector4_f32[3];
; 749  :     return U;
; 750  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 751  :     return vsetq_lane_f32(y,V,1);
; 752  : #elif defined(_XM_SSE_INTRINSICS_)
; 753  :     // Swap y and x
; 754  :     XMVECTOR vResult = XM_PERMUTE_PS(V,_MM_SHUFFLE(3,2,0,1));

  00033	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00037	0f c6 45 10 e1	 shufps	 xmm0, XMMWORD PTR V$[rbp], 225 ; 000000e1H
  0003c	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00043	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0004a	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 755  :     // Convert input to vector
; 756  :     XMVECTOR vTemp = _mm_set_ss(y);

  0004e	f3 0f 10 85 38
	02 00 00	 movss	 xmm0, DWORD PTR y$[rbp]
  00056	0f 57 c9	 xorps	 xmm1, xmm1
  00059	f3 0f 10 c8	 movss	 xmm1, xmm0
  0005d	0f 28 c1	 movaps	 xmm0, xmm1
  00060	0f 29 85 90 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00067	0f 28 85 90 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0006e	0f 29 45 70	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 757  :     // Replace the x component
; 758  :     vResult = _mm_move_ss(vResult,vTemp);

  00072	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00076	0f 28 4d 70	 movaps	 xmm1, XMMWORD PTR vTemp$[rbp]
  0007a	f3 0f 10 c1	 movss	 xmm0, xmm1
  0007e	0f 29 85 c0 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00085	0f 28 85 c0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  0008c	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 759  :     // Swap y and x again
; 760  :     vResult = XM_PERMUTE_PS(vResult,_MM_SHUFFLE(3,2,0,1));

  00090	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00094	0f c6 45 40 e1	 shufps	 xmm0, XMMWORD PTR vResult$[rbp], 225 ; 000000e1H
  00099	0f 29 85 f0 01
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000a0	0f 28 85 f0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000a7	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 761  :     return vResult;

  000ab	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]

; 762  : #endif
; 763  : }

  000af	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  000b6	5f		 pop	 rdi
  000b7	5d		 pop	 rbp
  000b8	c3		 ret	 0
?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z ENDP		; DirectX::XMVectorSetY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = 208
x$ = 272
y$ = 280
z$ = 288
w$ = 296
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT

; 71   : {

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00018	55		 push	 rbp
  00019	57		 push	 rdi
  0001a	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00021	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00026	48 8b fc	 mov	 rdi, rsp
  00029	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00033	f3 ab		 rep stosd

; 72   : #if defined(_XM_NO_INTRINSICS_)
; 73   :     XMVECTORF32 vResult = {x,y,z,w};
; 74   :     return vResult.v;
; 75   : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 76   :     float32x2_t V0 = vcreate_f32(((uint64_t)*(const uint32_t *)&x) | ((uint64_t)(*(const uint32_t *)&y) << 32));
; 77   :     float32x2_t V1 = vcreate_f32(((uint64_t)*(const uint32_t *)&z) | ((uint64_t)(*(const uint32_t *)&w) << 32));
; 78   :     return vcombine_f32(V0, V1);
; 79   : #elif defined(_XM_SSE_INTRINSICS_)
; 80   :     return _mm_set_ps( w, z, y, x );

  00035	f3 0f 10 85 28
	01 00 00	 movss	 xmm0, DWORD PTR w$[rbp]
  0003d	f3 0f 10 8d 20
	01 00 00	 movss	 xmm1, DWORD PTR z$[rbp]
  00045	f3 0f 10 95 18
	01 00 00	 movss	 xmm2, DWORD PTR y$[rbp]
  0004d	f3 0f 10 9d 10
	01 00 00	 movss	 xmm3, DWORD PTR x$[rbp]
  00055	0f 14 d9	 unpcklps xmm3, xmm1
  00058	0f 14 d0	 unpcklps xmm2, xmm0
  0005b	0f 28 c3	 movaps	 xmm0, xmm3
  0005e	0f 14 c2	 unpcklps xmm0, xmm2
  00061	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00068	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 81   : #endif
; 82   : }

  0006f	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00076	5f		 pop	 rdi
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
;	COMDAT ?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z
_TEXT	SEGMENT
$T1 = 208
pSource$ = 272
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z PROC ; DirectX::XMLoadFloat4, COMDAT

; 680  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]

; 681  :     assert(pSource);

  0002a	48 83 bd 10 01
	00 00 00	 cmp	 QWORD PTR pSource$[rbp], 0
  00032	75 21		 jne	 SHORT $LN3@XMLoadFloa
  00034	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@2@@Z@4JA
  0003a	ff c0		 inc	 eax
  0003c	44 8b c0	 mov	 r8d, eax
  0003f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00046	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
  0004d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00053	33 c0		 xor	 eax, eax
$LN3@XMLoadFloa:

; 682  : #if defined(_XM_NO_INTRINSICS_)
; 683  :     XMVECTOR V;
; 684  :     V.vector4_f32[0] = pSource->x;
; 685  :     V.vector4_f32[1] = pSource->y;
; 686  :     V.vector4_f32[2] = pSource->z;
; 687  :     V.vector4_f32[3] = pSource->w;
; 688  :     return V;
; 689  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 690  :     return vld1q_f32( reinterpret_cast<const float*>(pSource) );
; 691  : #elif defined(_XM_SSE_INTRINSICS_)
; 692  :     return _mm_loadu_ps( &pSource->x );

  00055	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  0005c	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0005f	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00066	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 693  : #endif
; 694  : }

  0006d	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?XMLoadFloat4@DirectX@@YQ?AT__m128@@PEBUXMFLOAT4@1@@Z ENDP ; DirectX::XMLoadFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 224
Float4$ = 232
??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z PROC		; DirectX::XMFLOAT4::operator=, COMDAT

; 564  :     XMFLOAT4& operator= (const XMFLOAT4& Float4) { x = Float4.x; y = Float4.y; z = Float4.z; w = Float4.w; return *this; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float4$[rbp]
  0003b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [rcx]
  0003f	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004a	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float4$[rbp]
  00051	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [rcx+4]
  00056	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  0005b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float4$[rbp]
  00069	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [rcx+8]
  0006e	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00073	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float4$[rbp]
  00081	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [rcx+12]
  00086	f3 0f 11 40 0c	 movss	 DWORD PTR [rax+12], xmm0
  0008b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00092	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
??4XMFLOAT4@DirectX@@QEAAAEAU01@AEBU01@@Z ENDP		; DirectX::XMFLOAT4::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMFLOAT4@DirectX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0XMFLOAT4@DirectX@@QEAA@XZ PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT

; 560  :     XMFLOAT4() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0XMFLOAT4@DirectX@@QEAA@XZ ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMFLOAT3@DirectX@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 224
_x$ = 232
_y$ = 240
_z$ = 248
??0XMFLOAT3@DirectX@@QEAA@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT

; 506  :     XMFLOAT3(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00017	55		 push	 rbp
  00018	57		 push	 rdi
  00019	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00020	48 8b ec	 mov	 rbp, rsp
  00023	48 8b fc	 mov	 rdi, rsp
  00026	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0003a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	f3 0f 10 85 e8
	00 00 00	 movss	 xmm0, DWORD PTR _x$[rbp]
  00049	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	f3 0f 10 85 f0
	00 00 00	 movss	 xmm0, DWORD PTR _y$[rbp]
  0005c	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	f3 0f 10 85 f8
	00 00 00	 movss	 xmm0, DWORD PTR _z$[rbp]
  00070	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00075	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
??0XMFLOAT3@DirectX@@QEAA@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ??DDirectX@@YQ?AT__m128@@T1@M@Z
_TEXT	SEGMENT
V$ = 16
$T1 = 256
S$ = 328
??DDirectX@@YQ?AT__m128@@T1@M@Z PROC			; DirectX::operator*, COMDAT

; 13994: {

$LN3:
  00000	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000f	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00027	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR [rsp+368], rax
  0002f	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 13995:     return XMVectorScale(V, S);

  00033	f3 0f 10 8d 48
	01 00 00	 movss	 xmm1, DWORD PTR S$[rbp]
  0003b	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  0003f	e8 00 00 00 00	 call	 ?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z ; DirectX::XMVectorScale
  00044	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004b	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 13996: }

  00052	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00059	5f		 pop	 rdi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??DDirectX@@YQ?AT__m128@@T1@M@Z ENDP			; DirectX::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ??GDirectX@@YQ?AT__m128@@T1@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
$T1 = 304
??GDirectX@@YQ?AT__m128@@T1@0@Z PROC			; DirectX::operator-, COMDAT

; 13961: {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR [rsp+416], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR [rsp+424], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 13962:     return XMVectorSubtract(V1, V2);

  0003e	0f 28 4d 40	 movaps	 xmm1, XMMWORD PTR V2$[rbp]
  00042	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00046	e8 00 00 00 00	 call	 ?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVectorSubtract
  0004b	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00052	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 13963: }

  00059	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??GDirectX@@YQ?AT__m128@@T1@0@Z ENDP			; DirectX::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ??HDirectX@@YQ?AT__m128@@T1@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
$T1 = 304
??HDirectX@@YQ?AT__m128@@T1@0@Z PROC			; DirectX::operator+, COMDAT

; 13950: {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR [rsp+416], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR [rsp+424], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 13951:     return XMVectorAdd(V1, V2);

  0003e	0f 28 4d 40	 movaps	 xmm1, XMMWORD PTR V2$[rbp]
  00042	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00046	e8 00 00 00 00	 call	 ?XMVectorAdd@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVectorAdd
  0004b	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00052	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 13952: }

  00059	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??HDirectX@@YQ?AT__m128@@T1@0@Z ENDP			; DirectX::operator+
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ PROC		; DirectX::XMVECTORU32::operator __m128, COMDAT

; 346  :     inline operator XMVECTOR() const { return v; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00034	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003b	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0003e	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  00041	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00048	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004f	5f		 pop	 rdi
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??BXMVECTORU32@DirectX@@QEBA?AT__m128@@XZ ENDP		; DirectX::XMVECTORU32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ PROC		; DirectX::XMVECTORI32::operator __m128, COMDAT

; 316  :     inline operator XMVECTOR() const { return v; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00034	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003b	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0003e	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  00041	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00048	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004f	5f		 pop	 rdi
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ENDP		; DirectX::XMVECTORI32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\buff.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 192
tv67 = 200
__t$ = 240
__s$ = 248
__n$ = 256
__f$ = 264
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
$LN2@vector:
  00039	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __n$[rbp]
  00040	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv66[rbp], rax
  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __n$[rbp]
  0004e	48 ff c8	 dec	 rax
  00051	48 89 85 00 01
	00 00		 mov	 QWORD PTR __n$[rbp], rax
  00058	48 83 bd c0 00
	00 00 00	 cmp	 QWORD PTR tv66[rbp], 0
  00060	76 0c		 jbe	 SHORT $LN5@vector
  00062	c7 85 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0006c	eb 0a		 jmp	 SHORT $LN6@vector
$LN5@vector:
  0006e	c7 85 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN6@vector:
  00078	83 bd c8 00 00
	00 00		 cmp	 DWORD PTR tv67[rbp], 0
  0007f	74 2a		 je	 SHORT $LN3@vector
  00081	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __t$[rbp]
  00088	ff 95 08 01 00
	00		 call	 QWORD PTR __f$[rbp]
  0008e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __s$[rbp]
  00095	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __t$[rbp]
  0009c	48 03 c8	 add	 rcx, rax
  0009f	48 8b c1	 mov	 rax, rcx
  000a2	48 89 85 f0 00
	00 00		 mov	 QWORD PTR __t$[rbp], rax
  000a9	eb 8e		 jmp	 SHORT $LN2@vector
$LN3@vector:
  000ab	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
