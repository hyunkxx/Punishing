; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B	; DirectX::g_BoxOffset
PUBLIC	?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_RayEpsilon
PUBLIC	?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_RayNegEpsilon
PUBLIC	?g_FltMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_FltMin
PUBLIC	?g_FltMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_FltMax
PUBLIC	?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitVectorEpsilon
PUBLIC	?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitQuaternionEpsilon
PUBLIC	?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitPlaneEpsilon
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT ?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitPlaneEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitQuaternionEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitVectorEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_FltMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_FltMax@DirectX@@3UXMVECTORF32@1@B DD 07f7fffffr ; 3.40282e+38 ; DirectX::g_FltMax
	DD	07f7fffffr			; 3.40282e+38
	DD	07f7fffffr			; 3.40282e+38
	DD	07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT ?g_FltMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_FltMin@DirectX@@3UXMVECTORF32@1@B DD 0ff7fffffr ; -3.40282e+38 ; DirectX::g_FltMin
	DD	0ff7fffffr			; -3.40282e+38
	DD	0ff7fffffr			; -3.40282e+38
	DD	0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT ?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B DD 09e3ce508r ; -1e-20 ; DirectX::g_RayNegEpsilon
	DD	09e3ce508r			; -1e-20
	DD	09e3ce508r			; -1e-20
	DD	09e3ce508r			; -1e-20
CONST	ENDS
;	COMDAT ?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B DD 01e3ce508r ; 1e-20 ; DirectX::g_RayEpsilon
	DD	01e3ce508r			; 1e-20
	DD	01e3ce508r			; 1e-20
	DD	01e3ce508r			; 1e-20
CONST	ENDS
;	COMDAT ?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B
CONST	SEGMENT
?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_BoxOffset
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?XMConvertToRadians@DirectX@@YAMM@Z		; DirectX::XMConvertToRadians
PUBLIC	??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ	; DirectX::XMVECTORI32::operator __m128
PUBLIC	??GDirectX@@YQ?AT__m128@@T1@0@Z			; DirectX::operator-
PUBLIC	??DDirectX@@YQ?AT__m128@@T1@M@Z			; DirectX::operator*
PUBLIC	??0XMFLOAT3@DirectX@@QEAA@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ; DirectX::XMLoadFloat3
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z	; DirectX::XMVectorSetY
PUBLIC	?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z	; DirectX::XMVectorSubtract
PUBLIC	?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z	; DirectX::XMVectorScale
PUBLIC	?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z	; DirectX::XMVector3Normalize
PUBLIC	??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CPlayerCamera::CPlayerCamera
PUBLIC	??0CPlayerCamera@Client@@AEAA@AEBV01@@Z		; Client::CPlayerCamera::CPlayerCamera
PUBLIC	??1CPlayerCamera@Client@@EEAA@XZ		; Client::CPlayerCamera::~CPlayerCamera
PUBLIC	?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ ; Client::CPlayerCamera::Initialize_Prototype
PUBLIC	?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z	; Client::CPlayerCamera::Initialize
PUBLIC	?Tick@CPlayerCamera@Client@@UEAAXN@Z		; Client::CPlayerCamera::Tick
PUBLIC	?LateTick@CPlayerCamera@Client@@UEAAXN@Z	; Client::CPlayerCamera::LateTick
PUBLIC	?Render@CPlayerCamera@Client@@UEAAJXZ		; Client::CPlayerCamera::Render
PUBLIC	?Add_Components@CPlayerCamera@Client@@QEAAJXZ	; Client::CPlayerCamera::Add_Components
PUBLIC	?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ ; Client::CPlayerCamera::Setup_ShaderResources
PUBLIC	?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CPlayerCamera::Create
PUBLIC	?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z ; Client::CPlayerCamera::Clone
PUBLIC	?Free@CPlayerCamera@Client@@UEAAXXZ		; Client::CPlayerCamera::Free
PUBLIC	??_GCPlayerCamera@Client@@EEAAPEAXI@Z		; Client::CPlayerCamera::`scalar deleting destructor'
PUBLIC	??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z ; Engine::Safe_Release<Client::CPlayerCamera * __ptr64>
PUBLIC	??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z ; Engine::Safe_Release<Engine::CTransform * __ptr64>
PUBLIC	??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA ; `DirectX::XMLoadFloat3'::`1'::__LINE__Var
PUBLIC	??_7CPlayerCamera@Client@@6B@			; Client::CPlayerCamera::`vftable'
PUBLIC	?__LINE__Var@?0??Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z@4JA ; `Client::CPlayerCamera::Initialize'::`1'::__LINE__Var
PUBLIC	??_C@_1JE@LOBGNKN@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAr?$AAc?$AAc?$AAo?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@ ; `string'
PUBLIC	??_C@_19OPBALDBC@?$AAp?$AAA?$AAr?$AAg?$AA?$AA@	; `string'
PUBLIC	??_C@_1DI@OLGFHDLM@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAa?$AAm?$AAe?$AAr?$AAa?$AA_?$AAs?$AAo?$AAc?$AAk?$AAe?$AAt?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??Tick@CPlayerCamera@Client@@UEAAXN@Z@4JA ; `Client::CPlayerCamera::Tick'::`1'::__LINE__Var
PUBLIC	??_C@_1CG@OLOBJFP@?$AAm?$AA_?$AAp?$AAT?$AAa?$AAr?$AAg?$AAe?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??Create@CPlayerCamera@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA ; `Client::CPlayerCamera::Create'::`1'::__LINE__Var
PUBLIC	??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@ ; `string'
PUBLIC	??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EE@CMOMLOPH@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr@ ; `string'
PUBLIC	?__LINE__Var@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA ; `Client::CPlayerCamera::Clone'::`1'::__LINE__Var
PUBLIC	??_C@_1EC@NFPGCMME@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa@ ; `string'
PUBLIC	??_R4CPlayerCamera@Client@@6B@			; Client::CPlayerCamera::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCPlayerCamera@Client@@@8		; Client::CPlayerCamera `RTTI Type Descriptor'
PUBLIC	??_R3CPlayerCamera@Client@@8			; Client::CPlayerCamera::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPlayerCamera@Client@@8			; Client::CPlayerCamera::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPlayerCamera@Client@@8		; Client::CPlayerCamera::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CCamera@Engine@@8			; Engine::CCamera::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCCamera@Engine@@@8			; Engine::CCamera `RTTI Type Descriptor'
PUBLIC	??_R3CCamera@Engine@@8				; Engine::CCamera::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CCamera@Engine@@8				; Engine::CCamera::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CGameObject@Engine@@8		; Engine::CGameObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGameObject@Engine@@@8			; Engine::CGameObject `RTTI Type Descriptor'
PUBLIC	??_R3CGameObject@Engine@@8			; Engine::CGameObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGameObject@Engine@@8			; Engine::CGameObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBase@Engine@@8			; Engine::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBase@Engine@@@8			; Engine::CBase `RTTI Type Descriptor'
PUBLIC	??_R3CBase@Engine@@8				; Engine::CBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBase@Engine@@8				; Engine::CBase::`RTTI Base Class Array'
PUBLIC	__real@3c8efa35
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f800000
PUBLIC	__real@3fb99999a0000000
PUBLIC	__real@40400000
PUBLIC	__real@40c00000
PUBLIC	__real@42340000
PUBLIC	__real@44340000
PUBLIC	__real@447a0000
PUBLIC	__real@44a00000
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp_MessageBoxW:PROC
EXTRN	__imp__wassert:PROC
EXTRN	??2@YAPEAX_KHPEBDH@Z:PROC			; operator new
EXTRN	??3@YAXPEAXHPEBDH@Z:PROC			; operator delete
EXTRN	__imp_?Release@CBase@Engine@@QEAAKXZ:PROC
EXTRN	__imp_?Find_Component@CGameObject@Engine@@QEAAPEAVCComponent@2@PEB_W@Z:PROC
EXTRN	__imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z:PROC
EXTRN	__imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z:PROC
EXTRN	__imp_?Rotate@CTransform@Engine@@QEAAXT__m128@@N@Z:PROC
EXTRN	__imp_?LookAt@CTransform@Engine@@QEAAXT__m128@@@Z:PROC
EXTRN	__imp_?Create@CTransform@Engine@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z:PROC
EXTRN	__imp_??0CCamera@Engine@@IEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z:PROC
EXTRN	__imp_??0CCamera@Engine@@IEAA@AEBV01@@Z:PROC
EXTRN	__imp_??1CCamera@Engine@@MEAA@XZ:PROC
EXTRN	__imp_?Initialize_Prototype@CCamera@Engine@@UEAAJXZ:PROC
EXTRN	__imp_?Tick@CCamera@Engine@@UEAAXN@Z:PROC
EXTRN	__imp_?LateTick@CCamera@Engine@@UEAAXN@Z:PROC
EXTRN	__imp_?Free@CCamera@Engine@@UEAAXXZ:PROC
EXTRN	??_ECPlayerCamera@Client@@EEAAPEAXI@Z:PROC	; Client::CPlayerCamera::`vector deleting destructor'
EXTRN	__imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ:PROC
EXTRN	__imp_?Input_MouseState_Custom@CGameInstance@Engine@@QEAA?AW4KEY_STATE@2@W4MOUSE_KEYSTATE@2@@Z:PROC
EXTRN	__imp_?Input_MouseMove@CGameInstance@Engine@@QEAAJW4MOUSE_MOVESTATE@2@@Z:PROC
EXTRN	?RenderGUI@CGameObject@Engine@@UEAAXXZ:PROC	; Engine::CGameObject::RenderGUI
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+181
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMConvertToRadians@DirectX@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?XMConvertToRadians@DirectX@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??GDirectX@@YQ?AT__m128@@T1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??GDirectX@@YQ?AT__m128@@T1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??DDirectX@@YQ?AT__m128@@T1@M@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??DDirectX@@YQ?AT__m128@@T1@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+277
	DD	imagerel $unwind$?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z DD imagerel $LN3
	DD	imagerel $LN3+185
	DD	imagerel $unwind$?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z DD imagerel $LN3
	DD	imagerel $LN3+535
	DD	imagerel $unwind$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+215
	DD	imagerel $unwind$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD imagerel ?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+203
	DD	imagerel $unwind$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CPlayerCamera@Client@@EEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1CPlayerCamera@Client@@EEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z DD imagerel $LN5
	DD	imagerel $LN5+333
	DD	imagerel $unwind$?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Tick@CPlayerCamera@Client@@UEAAXN@Z DD imagerel $LN8
	DD	imagerel $LN8+741
	DD	imagerel $unwind$?Tick@CPlayerCamera@Client@@UEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LateTick@CPlayerCamera@Client@@UEAAXN@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?LateTick@CPlayerCamera@Client@@UEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@CPlayerCamera@Client@@UEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Render@CPlayerCamera@Client@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Add_Components@CPlayerCamera@Client@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Add_Components@CPlayerCamera@Client@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD imagerel ?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA+61
	DD	imagerel $unwind$?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA DD imagerel ?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
	DD	imagerel ?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA+61
	DD	imagerel $unwind$?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CPlayerCamera@Client@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?Free@CPlayerCamera@Client@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCPlayerCamera@Client@@EEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GCPlayerCamera@Client@@EEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z
pdata	ENDS
;	COMDAT __real@44a00000
CONST	SEGMENT
__real@44a00000 DD 044a00000r			; 1280
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44340000
CONST	SEGMENT
__real@44340000 DD 044340000r			; 720
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3fb99999a0000000
CONST	SEGMENT
__real@3fb99999a0000000 DQ 03fb99999a0000000r	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2CBase@Engine@@8
rdata$r	SEGMENT
??_R2CBase@Engine@@8 DD imagerel ??_R1A@?0A@EA@CBase@Engine@@8 ; Engine::CBase::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBase@Engine@@8
rdata$r	SEGMENT
??_R3CBase@Engine@@8 DD 00H				; Engine::CBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CBase@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBase@Engine@@@8
data$r	SEGMENT
??_R0?AVCBase@Engine@@@8 DQ FLAT:??_7type_info@@6B@	; Engine::CBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBase@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBase@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBase@Engine@@8 DD imagerel ??_R0?AVCBase@Engine@@@8 ; Engine::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBase@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R2CGameObject@Engine@@8
rdata$r	SEGMENT
??_R2CGameObject@Engine@@8 DD imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8 ; Engine::CGameObject::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CGameObject@Engine@@8
rdata$r	SEGMENT
??_R3CGameObject@Engine@@8 DD 00H			; Engine::CGameObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2CGameObject@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGameObject@Engine@@@8
data$r	SEGMENT
??_R0?AVCGameObject@Engine@@@8 DQ FLAT:??_7type_info@@6B@ ; Engine::CGameObject `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCGameObject@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGameObject@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGameObject@Engine@@8 DD imagerel ??_R0?AVCGameObject@Engine@@@8 ; Engine::CGameObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CGameObject@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R2CCamera@Engine@@8
rdata$r	SEGMENT
??_R2CCamera@Engine@@8 DD imagerel ??_R1A@?0A@EA@CCamera@Engine@@8 ; Engine::CCamera::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CCamera@Engine@@8
rdata$r	SEGMENT
??_R3CCamera@Engine@@8 DD 00H				; Engine::CCamera::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CCamera@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCCamera@Engine@@@8
data$r	SEGMENT
??_R0?AVCCamera@Engine@@@8 DQ FLAT:??_7type_info@@6B@	; Engine::CCamera `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCCamera@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CCamera@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CCamera@Engine@@8 DD imagerel ??_R0?AVCCamera@Engine@@@8 ; Engine::CCamera::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CCamera@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPlayerCamera@Client@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPlayerCamera@Client@@8 DD imagerel ??_R0?AVCPlayerCamera@Client@@@8 ; Client::CPlayerCamera::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CPlayerCamera@Client@@8
rdata$r	ENDS
;	COMDAT ??_R2CPlayerCamera@Client@@8
rdata$r	SEGMENT
??_R2CPlayerCamera@Client@@8 DD imagerel ??_R1A@?0A@EA@CPlayerCamera@Client@@8 ; Client::CPlayerCamera::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CCamera@Engine@@8
	DD	imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CPlayerCamera@Client@@8
rdata$r	SEGMENT
??_R3CPlayerCamera@Client@@8 DD 00H			; Client::CPlayerCamera::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2CPlayerCamera@Client@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCPlayerCamera@Client@@@8
data$r	SEGMENT
??_R0?AVCPlayerCamera@Client@@@8 DQ FLAT:??_7type_info@@6B@ ; Client::CPlayerCamera `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCPlayerCamera@Client@@', 00H
data$r	ENDS
;	COMDAT ??_R4CPlayerCamera@Client@@6B@
rdata$r	SEGMENT
??_R4CPlayerCamera@Client@@6B@ DD 01H			; Client::CPlayerCamera::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCPlayerCamera@Client@@@8
	DD	imagerel ??_R3CPlayerCamera@Client@@8
	DD	imagerel ??_R4CPlayerCamera@Client@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EC@NFPGCMME@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa@
CONST	SEGMENT
??_C@_1EC@NFPGCMME@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'C', 00H
	DB	'P', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'C'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA DD 073H ; `Client::CPlayerCamera::Clone'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1EE@CMOMLOPH@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr@
CONST	SEGMENT
??_C@_1EE@CMOMLOPH@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 'd', 00H, ' ', 00H, ':', 00H, ' ', 00H
	DB	'C', 00H, 'P', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r'
	DB	00H, 'C', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@ DB 'M', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
CONST	SEGMENT
??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@ DB 'c:\users\a'
	DB	'rcco\documents\github\framework\client\private\playercamera.c'
	DB	'pp', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Create@CPlayerCamera@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Create@CPlayerCamera@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA DD 067H ; `Client::CPlayerCamera::Create'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1CG@OLOBJFP@?$AAm?$AA_?$AAp?$AAT?$AAa?$AAr?$AAg?$AAe?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@OLOBJFP@?$AAm?$AA_?$AAp?$AAT?$AAa?$AAr?$AAg?$AAe?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ DB 'm'
	DB	00H, '_', 00H, 'p', 00H, 'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H
	DB	'e', 00H, 't', 00H, 'T', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Tick@CPlayerCamera@Client@@UEAAXN@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Tick@CPlayerCamera@Client@@UEAAXN@Z@4JA DD 02eH ; `Client::CPlayerCamera::Tick'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DI@OLGFHDLM@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAa?$AAm?$AAe?$AAr?$AAa?$AA_?$AAs?$AAo?$AAc?$AAk?$AAe?$AAt?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@OLGFHDLM@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAa?$AAm?$AAe?$AAr?$AAa?$AA_?$AAs?$AAo?$AAc?$AAk?$AAe?$AAt?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 'c', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, '_', 00H, 's', 00H, 'o', 00H, 'c'
	DB	00H, 'k', 00H, 'e', 00H, 't', 00H, '_', 00H, 't', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19OPBALDBC@?$AAp?$AAA?$AAr?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_19OPBALDBC@?$AAp?$AAA?$AAr?$AAg?$AA?$AA@ DB 'p', 00H, 'A', 00H, 'r', 00H
	DB	'g', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@LOBGNKN@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAr?$AAc?$AAc?$AAo?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
CONST	SEGMENT
??_C@_1JE@LOBGNKN@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAr?$AAc?$AAc?$AAo?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'a', 00H, 'r', 00H, 'c', 00H, 'c', 00H, 'o'
	DB	00H, '\', 00H, 'd', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'g', 00H, 'i'
	DB	00H, 't', 00H, 'h', 00H, 'u', 00H, 'b', 00H, '\', 00H, 'f', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'w', 00H, 'o', 00H, 'r'
	DB	00H, 'k', 00H, '\', 00H, 'c', 00H, 'l', 00H, 'i', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'v'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, '\', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, 'e', 00H, 'r', 00H, 'c', 00H, 'a', 00H, 'm'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, '.', 00H, 'c', 00H, 'p', 00H
	DB	'p', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z@4JA DD 01cH ; `Client::CPlayerCamera::Initialize'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_7CPlayerCamera@Client@@6B@
CONST	SEGMENT
??_7CPlayerCamera@Client@@6B@ DQ FLAT:??_R4CPlayerCamera@Client@@6B@ ; Client::CPlayerCamera::`vftable'
	DQ	FLAT:??_ECPlayerCamera@Client@@EEAAPEAXI@Z
	DQ	FLAT:?Free@CPlayerCamera@Client@@UEAAXXZ
	DQ	FLAT:?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ
	DQ	FLAT:?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z
	DQ	FLAT:?Tick@CPlayerCamera@Client@@UEAAXN@Z
	DQ	FLAT:?LateTick@CPlayerCamera@Client@@UEAAXN@Z
	DQ	FLAT:?Render@CPlayerCamera@Client@@UEAAJXZ
	DQ	FLAT:?RenderGUI@CGameObject@Engine@@UEAAXXZ
	DQ	FLAT:?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA DD 01f3H ; `DirectX::XMLoadFloat3'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ DB 'p', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'x', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCPlayerCamera@Client@@EEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CPlayerCamera@Client@@UEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD imagerel ?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z+115
	DD	00H
	DD	imagerel ?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z+178
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 025054b19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcName$0 DB 070H ; Client::CPlayerCamera::Clone
	DB	049H
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	063H
	DB	065H
	DB	00H
	ORG $+6
?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcVarDesc DD 028H ; Client::CPlayerCamera::Clone
	DD	08H
	DQ	FLAT:?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcName$0
	ORG $+48
?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcFrameData DD 01H ; Client::CPlayerCamera::Clone
	DD	00H
	DQ	FLAT:?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcVarDesc
$cppxdata$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel ?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0ffffffffH
	DD	imagerel ?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+115
	DD	00H
	DD	imagerel ?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+185
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 025054b19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcName$0 DB 070H ; Client::CPlayerCamera::Create
	DB	049H
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	063H
	DB	065H
	DB	00H
	ORG $+6
?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcVarDesc DD 028H ; Client::CPlayerCamera::Create
	DD	08H
	DQ	FLAT:?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcName$0
	ORG $+48
?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcFrameData DD 01H ; Client::CPlayerCamera::Create
	DD	00H
	DQ	FLAT:?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcVarDesc
$cppxdata$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Add_Components@CPlayerCamera@Client@@QEAAJXZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@CPlayerCamera@Client@@UEAAJXZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LateTick@CPlayerCamera@Client@@UEAAXN@Z DD 025053001H
	DD	01142319H
	DD	0700d001dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Tick@CPlayerCamera@Client@@UEAAXN@Z DD 025054119H
	DD	01142319H
	DD	0700d0091H
	DD	0500cH
	DD	imagerel __GSHandlerCheck
	DD	0478H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Tick@CPlayerCamera@Client@@UEAAXN@Z$rtcName$0 DB 076H	; Client::CPlayerCamera::Tick
	DB	054H
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	050H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+5
?Tick@CPlayerCamera@Client@@UEAAXN@Z$rtcVarDesc DD 050H	; Client::CPlayerCamera::Tick
	DD	010H
	DQ	FLAT:?Tick@CPlayerCamera@Client@@UEAAXN@Z$rtcName$0
	ORG $+48
?Tick@CPlayerCamera@Client@@UEAAXN@Z$rtcFrameData DD 01H ; Client::CPlayerCamera::Tick
	DD	00H
	DQ	FLAT:?Tick@CPlayerCamera@Client@@UEAAXN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CPlayerCamera@Client@@EEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z DD imagerel ??0CPlayerCamera@Client@@AEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0CPlayerCamera@Client@@AEAA@AEBV01@@Z+79
	DD	00H
	DD	imagerel ??0CPlayerCamera@Client@@AEAA@AEBV01@@Z+186
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z DD 025053a11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CPlayerCamera@Client@@AEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel ??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0ffffffffH
	DD	imagerel ??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+91
	DD	00H
	DD	imagerel ??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+198
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 025053f11H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z DD 035052a01H
	DD	010a330fH
	DD	0700300dfH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z DD 015052f01H
	DD	010f1314H
	DD	070080033H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z DD 015053601H
	DD	010a130fH
	DD	07003002dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z DD 015052f01H
	DD	010f1314H
	DD	070080045H
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD 015053501H
	DD	01211326H
	DD	0701a0021H
	DD	05019H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z DD 035052a01H
	DD	010e3313H
	DD	070070055H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD 05053a01H
	DD	01200323H
	DD	070190019H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??DDirectX@@YQ?AT__m128@@T1@M@Z DD 035052f01H
	DD	010f3314H
	DD	07008002bH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??GDirectX@@YQ?AT__m128@@T1@0@Z DD 035053601H
	DD	010a330fH
	DD	070030031H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMConvertToRadians@DirectX@@YAMM@Z DD 015052301H
	DD	010f1314H
	DD	07008001bH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 025053901H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z PROC ; Engine::Safe_Release<Engine::CTransform * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z ENDP ; Engine::Safe_Release<Engine::CTransform * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z PROC ; Engine::Safe_Release<Client::CPlayerCamera * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z ENDP ; Engine::Safe_Release<Client::CPlayerCamera * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCPlayerCamera@Client@@EEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GCPlayerCamera@Client@@EEAAPEAXI@Z PROC		; Client::CPlayerCamera::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1CPlayerCamera@Client@@EEAA@XZ ; Client::CPlayerCamera::~CPlayerCamera
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba e8 00 00 00	 mov	 edx, 232		; 000000e8H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GCPlayerCamera@Client@@EEAAPEAXI@Z ENDP		; Client::CPlayerCamera::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Free@CPlayerCamera@Client@@UEAAXXZ
_TEXT	SEGMENT
this$ = 224
?Free@CPlayerCamera@Client@@UEAAXXZ PROC		; Client::CPlayerCamera::Free, COMDAT

; 127  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 128  : 	__super::Free();

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Free@CCamera@Engine@@UEAAXXZ

; 129  : 
; 130  : 	Safe_Release(m_pTransform);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 78	 add	 rax, 120		; 00000078H
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z ; Engine::Safe_Release<Engine::CTransform * __ptr64>

; 131  : }

  0004a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
?Free@CPlayerCamera@Client@@UEAAXXZ ENDP		; Client::CPlayerCamera::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
_TEXT	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z PROC ; Client::CPlayerCamera::Clone, COMDAT

; 115  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 116  : 	CPlayerCamera*	pInstance = new CPlayerCamera(*this);

  0004b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  00051	ff c0		 inc	 eax
  00053	44 8b c8	 mov	 r9d, eax
  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
  0005d	ba 01 00 00 00	 mov	 edx, 1
  00062	b9 e8 00 00 00	 mov	 ecx, 232		; 000000e8H
  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_KHPEBDH@Z	; operator new
  0006c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00073	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0007b	74 1c		 je	 SHORT $LN4@Clone
  0007d	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00084	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0008b	e8 00 00 00 00	 call	 ??0CPlayerCamera@Client@@AEAA@AEBV01@@Z ; Client::CPlayerCamera::CPlayerCamera
  00090	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00097	eb 0b		 jmp	 SHORT $LN5@Clone
$LN4@Clone:
  00099	48 c7 85 38 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv83[rbp], 0
$LN5@Clone:
  000a4	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv83[rbp]
  000ab	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000b2	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000b9	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 117  : 	if (FAILED(pInstance->Initialize(pArg)))

  000bd	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR pArg$[rbp]
  000c4	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c8	e8 00 00 00 00	 call	 ?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z ; Client::CPlayerCamera::Initialize
  000cd	85 c0		 test	 eax, eax
  000cf	7d 22		 jge	 SHORT $LN2@Clone

; 118  : 	{
; 119  : 		MSG_BOX("Failed to Cloned : CPlayerCamera");

  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EC@NFPGCMME@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa@
  000e2	33 c9		 xor	 ecx, ecx
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxW

; 120  : 		Safe_Release(pInstance);

  000ea	48 8d 4d 08	 lea	 rcx, QWORD PTR pInstance$[rbp]
  000ee	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z ; Engine::Safe_Release<Client::CPlayerCamera * __ptr64>
$LN2@Clone:

; 121  : 	}
; 122  : 
; 123  : 	return pInstance;

  000f3	48 8b 45 08	 mov	 rax, QWORD PTR pInstance$[rbp]

; 124  : }

  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcFrameData
  00105	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010a	48 8b c7	 mov	 rax, rdi
  0010d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00114	48 33 cd	 xor	 rcx, rbp
  00117	e8 00 00 00 00	 call	 __security_check_cookie
  0011c	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00123	5f		 pop	 rdi
  00124	5d		 pop	 rbp
  00125	c3		 ret	 0
?Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z ENDP ; Client::CPlayerCamera::Clone
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA PROC ; `Client::CPlayerCamera::Clone'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA ENDP ; `Client::CPlayerCamera::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA PROC ; `Client::CPlayerCamera::Clone'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Clone@CPlayerCamera@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA ENDP ; `Client::CPlayerCamera::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z PROC ; Client::CPlayerCamera::Create, COMDAT

; 103  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 104  : 	CPlayerCamera*	pInstance = new CPlayerCamera(pDevice, pContext);

  0004b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Create@CPlayerCamera@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  00051	ff c0		 inc	 eax
  00053	44 8b c8	 mov	 r9d, eax
  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
  0005d	ba 01 00 00 00	 mov	 edx, 1
  00062	b9 e8 00 00 00	 mov	 ecx, 232		; 000000e8H
  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_KHPEBDH@Z	; operator new
  0006c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00073	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0007b	74 23		 je	 SHORT $LN4@Create
  0007d	4c 8b 85 78 01
	00 00		 mov	 r8, QWORD PTR pContext$[rbp]
  00084	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR pDevice$[rbp]
  0008b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00092	e8 00 00 00 00	 call	 ??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CPlayerCamera::CPlayerCamera
  00097	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  0009e	eb 0b		 jmp	 SHORT $LN5@Create
$LN4@Create:
  000a0	48 c7 85 38 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv84[rbp], 0
$LN5@Create:
  000ab	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv84[rbp]
  000b2	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000b9	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000c0	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 105  : 	if (FAILED(pInstance->Initialize_Prototype()))

  000c4	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c8	e8 00 00 00 00	 call	 ?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ ; Client::CPlayerCamera::Initialize_Prototype
  000cd	85 c0		 test	 eax, eax
  000cf	7d 22		 jge	 SHORT $LN2@Create

; 106  : 	{
; 107  : 		MSG_BOX("Failed to Created : CPlayerCamera");

  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@CMOMLOPH@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA?3?$AA?5?$AAC?$AAP?$AAl?$AAa?$AAy?$AAe?$AAr?$AAC?$AAa?$AAm?$AAe?$AAr@
  000e2	33 c9		 xor	 ecx, ecx
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxW

; 108  : 		Safe_Release(pInstance);

  000ea	48 8d 4d 08	 lea	 rcx, QWORD PTR pInstance$[rbp]
  000ee	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCPlayerCamera@Client@@@Engine@@YAKAEAPEAVCPlayerCamera@Client@@@Z ; Engine::Safe_Release<Client::CPlayerCamera * __ptr64>
$LN2@Create:

; 109  : 	}
; 110  : 
; 111  : 	return pInstance;

  000f3	48 8b 45 08	 mov	 rax, QWORD PTR pInstance$[rbp]

; 112  : }

  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcFrameData
  00105	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010a	48 8b c7	 mov	 rax, rdi
  0010d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00114	48 33 cd	 xor	 rcx, rbp
  00117	e8 00 00 00 00	 call	 __security_check_cookie
  0011c	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00123	5f		 pop	 rdi
  00124	5d		 pop	 rbp
  00125	c3		 ret	 0
?Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ENDP ; Client::CPlayerCamera::Create
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CPlayerCamera::Create'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Create@CPlayerCamera@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CPlayerCamera::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CPlayerCamera::Create'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Create@CPlayerCamera@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0EK@IICOGJBM@c?3?2users?2arcco?2documents?2github?2@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Create@CPlayerCamera@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CPlayerCamera::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ
_TEXT	SEGMENT
this$ = 224
?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ PROC ; Client::CPlayerCamera::Setup_ShaderResources, COMDAT

; 98   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 99   : 	return S_OK;

  00028	33 c0		 xor	 eax, eax

; 100  : }

  0002a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?Setup_ShaderResources@CPlayerCamera@Client@@QEAAJXZ ENDP ; Client::CPlayerCamera::Setup_ShaderResources
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Add_Components@CPlayerCamera@Client@@QEAAJXZ
_TEXT	SEGMENT
this$ = 224
?Add_Components@CPlayerCamera@Client@@QEAAJXZ PROC	; Client::CPlayerCamera::Add_Components, COMDAT

; 93   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 94   : 	return S_OK;

  00028	33 c0		 xor	 eax, eax

; 95   : }

  0002a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?Add_Components@CPlayerCamera@Client@@QEAAJXZ ENDP	; Client::CPlayerCamera::Add_Components
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Render@CPlayerCamera@Client@@UEAAJXZ
_TEXT	SEGMENT
this$ = 224
?Render@CPlayerCamera@Client@@UEAAJXZ PROC		; Client::CPlayerCamera::Render, COMDAT

; 88   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 89   : 	return S_OK;

  00028	33 c0		 xor	 eax, eax

; 90   : }

  0002a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?Render@CPlayerCamera@Client@@UEAAJXZ ENDP		; Client::CPlayerCamera::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?LateTick@CPlayerCamera@Client@@UEAAXN@Z
_TEXT	SEGMENT
this$ = 224
TimeDelta$ = 232
?LateTick@CPlayerCamera@Client@@UEAAXN@Z PROC		; Client::CPlayerCamera::LateTick, COMDAT

; 83   : {

$LN3:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	55		 push	 rbp
  0000c	57		 push	 rdi
  0000d	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 84   : 	__super::LateTick(TimeDelta);

  00030	f2 0f 10 8d e8
	00 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  00038	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?LateTick@CCamera@Engine@@UEAAXN@Z

; 85   : }

  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?LateTick@CPlayerCamera@Client@@UEAAXN@Z ENDP		; Client::CPlayerCamera::LateTick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Tick@CPlayerCamera@Client@@UEAAXN@Z
_TEXT	SEGMENT
pGameInstance$ = 8
vTargetPos$ = 48
vTargetLook$ = 96
vCameraPosition$ = 144
MouseMove$4 = 180
$T5 = 608
$T6 = 656
$T7 = 704
$T8 = 752
$T9 = 800
$T10 = 848
$T11 = 896
$T12 = 944
$T13 = 992
$T14 = 1040
$T15 = 1088
__$ArrayPad$ = 1112
this$ = 1152
TimeDelta$ = 1160
?Tick@CPlayerCamera@Client@@UEAAXN@Z PROC		; Client::CPlayerCamera::Tick, COMDAT

; 46   : {

$LN8:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	55		 push	 rbp
  0000c	57		 push	 rdi
  0000d	48 81 ec 88 04
	00 00		 sub	 rsp, 1160		; 00000488H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 22 01 00 00	 mov	 ecx, 290		; 00000122H
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 a8
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1192]
  00030	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00037	48 33 c5	 xor	 rax, rbp
  0003a	48 89 85 58 04
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 47   : 	__super::Tick(TimeDelta);

  00041	f2 0f 10 8d 88
	04 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  00049	48 8b 8d 80 04
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Tick@CCamera@Engine@@UEAAXN@Z

; 48   : 
; 49   : 	CGameInstance* pGameInstance = CGameInstance::GetInstance();

  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ
  0005c	48 89 45 08	 mov	 QWORD PTR pGameInstance$[rbp], rax

; 50   : 
; 51   : 	assert(m_pTargetTransform);

  00060	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 83 b8 d0 00
	00 00 00	 cmp	 QWORD PTR [rax+208], 0
  0006f	75 22		 jne	 SHORT $LN7@Tick
  00071	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Tick@CPlayerCamera@Client@@UEAAXN@Z@4JA
  00077	83 c0 05	 add	 eax, 5
  0007a	44 8b c0	 mov	 r8d, eax
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JE@LOBGNKN@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAr?$AAc?$AAc?$AAo?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@OLOBJFP@?$AAm?$AA_?$AAp?$AAT?$AAa?$AAr?$AAg?$AAe?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00091	33 c0		 xor	 eax, eax
$LN7@Tick:

; 52   : 
; 53   : 	_vector vTargetPos = m_pTargetTransform->Get_State(CTransform::STATE_POSITION);

  00093	41 b8 03 00 00
	00		 mov	 r8d, 3
  00099	48 8d 55 30	 lea	 rdx, QWORD PTR vTargetPos$[rbp]
  0009d	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a4	48 8b 88 d0 00
	00 00		 mov	 rcx, QWORD PTR [rax+208]
  000ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z

; 54   : 	_vector vTargetLook = XMVector3Normalize(m_pTargetTransform->Get_State(CTransform::STATE_LOOK));

  000b1	41 b8 02 00 00
	00		 mov	 r8d, 2
  000b7	48 8d 95 90 02
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  000be	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8b 88 d0 00
	00 00		 mov	 rcx, QWORD PTR [rax+208]
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z
  000d2	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000d5	e8 00 00 00 00	 call	 ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ; DirectX::XMVector3Normalize
  000da	0f 29 85 60 02
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000e1	0f 28 85 60 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000e8	0f 29 45 60	 movaps	 XMMWORD PTR vTargetLook$[rbp], xmm0

; 55   : 
; 56   : 	_vector vCameraPosition = vTargetPos - XMLoadFloat3(&vDistance);

  000ec	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f3	48 05 d8 00 00
	00		 add	 rax, 216		; 000000d8H
  000f9	48 8b c8	 mov	 rcx, rax
  000fc	e8 00 00 00 00	 call	 ?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ; DirectX::XMLoadFloat3
  00101	0f 29 85 f0 02
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  00108	0f 28 8d f0 02
	00 00		 movaps	 xmm1, XMMWORD PTR $T8[rbp]
  0010f	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTargetPos$[rbp]
  00113	e8 00 00 00 00	 call	 ??GDirectX@@YQ?AT__m128@@T1@0@Z ; DirectX::operator-
  00118	0f 29 85 c0 02
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  0011f	0f 28 85 c0 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  00126	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vCameraPosition$[rbp], xmm0

; 57   : 
; 58   : 	vCameraPosition = vTargetPos - (vTargetLook * vDistance.z);

  0012d	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00134	f3 0f 10 88 e0
	00 00 00	 movss	 xmm1, DWORD PTR [rax+224]
  0013c	0f 28 45 60	 movaps	 xmm0, XMMWORD PTR vTargetLook$[rbp]
  00140	e8 00 00 00 00	 call	 ??DDirectX@@YQ?AT__m128@@T1@M@Z ; DirectX::operator*
  00145	0f 29 85 50 03
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  0014c	0f 28 8d 50 03
	00 00		 movaps	 xmm1, XMMWORD PTR $T10[rbp]
  00153	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTargetPos$[rbp]
  00157	e8 00 00 00 00	 call	 ??GDirectX@@YQ?AT__m128@@T1@0@Z ; DirectX::operator-
  0015c	0f 29 85 20 03
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  00163	0f 28 85 20 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  0016a	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vCameraPosition$[rbp], xmm0

; 59   : 	vCameraPosition = XMVectorSetY(vCameraPosition, vDistance.y);

  00171	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00178	f3 0f 10 88 dc
	00 00 00	 movss	 xmm1, DWORD PTR [rax+220]
  00180	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vCameraPosition$[rbp]
  00187	e8 00 00 00 00	 call	 ?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z ; DirectX::XMVectorSetY
  0018c	0f 29 85 80 03
	00 00		 movaps	 XMMWORD PTR $T11[rbp], xmm0
  00193	0f 28 85 80 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T11[rbp]
  0019a	0f 29 85 90 00
	00 00		 movaps	 XMMWORD PTR vCameraPosition$[rbp], xmm0

; 60   : 
; 61   : 	if (pGameInstance->Input_MouseState_Custom(DIMK_RB) == KEY_STATE::HOLD)

  001a1	ba 01 00 00 00	 mov	 edx, 1
  001a6	48 8b 4d 08	 mov	 rcx, QWORD PTR pGameInstance$[rbp]
  001aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Input_MouseState_Custom@CGameInstance@Engine@@QEAA?AW4KEY_STATE@2@W4MOUSE_KEYSTATE@2@@Z
  001b0	85 c0		 test	 eax, eax
  001b2	75 10		 jne	 SHORT $LN2@Tick

; 62   : 		m_bMouseLock = false;

  001b4	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001bb	c6 80 e4 00 00
	00 00		 mov	 BYTE PTR [rax+228], 0

; 63   : 	else

  001c2	eb 0e		 jmp	 SHORT $LN3@Tick
$LN2@Tick:

; 64   : 		m_bMouseLock = true;

  001c4	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001cb	c6 80 e4 00 00
	00 01		 mov	 BYTE PTR [rax+228], 1
$LN3@Tick:

; 65   : 
; 66   : 	if (!m_bMouseLock)

  001d2	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001d9	0f b6 80 e4 00
	00 00		 movzx	 eax, BYTE PTR [rax+228]
  001e0	85 c0		 test	 eax, eax
  001e2	0f 85 86 00 00
	00		 jne	 $LN4@Tick

; 67   : 	{
; 68   : 		_long MouseMove = 0;

  001e8	c7 85 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR MouseMove$4[rbp], 0

; 69   : 		if (MouseMove = pGameInstance->Input_MouseMove(DIMM_X))

  001f2	33 d2		 xor	 edx, edx
  001f4	48 8b 4d 08	 mov	 rcx, QWORD PTR pGameInstance$[rbp]
  001f8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Input_MouseMove@CGameInstance@Engine@@QEAAJW4MOUSE_MOVESTATE@2@@Z
  001fe	89 85 b4 00 00
	00		 mov	 DWORD PTR MouseMove$4[rbp], eax
  00204	83 bd b4 00 00
	00 00		 cmp	 DWORD PTR MouseMove$4[rbp], 0
  0020b	74 61		 je	 SHORT $LN5@Tick

; 70   : 		{
; 71   : 			m_pTargetTransform->Rotate(VECTOR_UP, MouseMove * TimeDelta * 0.1f);

  0020d	0f 57 db	 xorps	 xmm3, xmm3
  00210	0f 57 d2	 xorps	 xmm2, xmm2
  00213	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f800000
  0021b	0f 57 c0	 xorps	 xmm0, xmm0
  0021e	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  00223	0f 29 85 b0 03
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  0022a	f2 0f 2a 85 b4
	00 00 00	 cvtsi2sd xmm0, DWORD PTR MouseMove$4[rbp]
  00232	f2 0f 59 85 88
	04 00 00	 mulsd	 xmm0, QWORD PTR TimeDelta$[rbp]
  0023a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb99999a0000000
  00242	0f 28 8d b0 03
	00 00		 movaps	 xmm1, XMMWORD PTR $T12[rbp]
  00249	0f 29 8d e0 03
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm1
  00250	0f 28 d0	 movaps	 xmm2, xmm0
  00253	48 8d 95 e0 03
	00 00		 lea	 rdx, QWORD PTR $T13[rbp]
  0025a	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00261	48 8b 88 d0 00
	00 00		 mov	 rcx, QWORD PTR [rax+208]
  00268	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Rotate@CTransform@Engine@@QEAAXT__m128@@N@Z
$LN5@Tick:
$LN4@Tick:

; 72   : 		}
; 73   : 	}
; 74   : 
; 75   : 	//if (MouseMove = pGameInstance->Input_MouseMove(DIMM_Y))
; 76   : 	//	m_pTransform->Rotate(m_pTransform->Get_State(CTransform::STATE_RIGHT), MouseMove * TimeDelta * 0.1f);
; 77   : 
; 78   : 	m_pTransform->Set_State(CTransform::STATE_POSITION, vCameraPosition);

  0026e	0f 28 85 90 00
	00 00		 movaps	 xmm0, XMMWORD PTR vCameraPosition$[rbp]
  00275	0f 29 85 10 04
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  0027c	4c 8d 85 10 04
	00 00		 lea	 r8, QWORD PTR $T14[rbp]
  00283	ba 03 00 00 00	 mov	 edx, 3
  00288	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0028f	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00293	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 79   : 	m_pTransform->LookAt(vTargetPos);

  00299	0f 28 45 30	 movaps	 xmm0, XMMWORD PTR vTargetPos$[rbp]
  0029d	0f 29 85 40 04
	00 00		 movaps	 XMMWORD PTR $T15[rbp], xmm0
  002a4	48 8d 95 40 04
	00 00		 lea	 rdx, QWORD PTR $T15[rbp]
  002ab	48 8b 85 80 04
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  002b2	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  002b6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?LookAt@CTransform@Engine@@QEAAXT__m128@@@Z

; 80   : }

  002bc	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  002c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Tick@CPlayerCamera@Client@@UEAAXN@Z$rtcFrameData
  002c7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002cc	48 8b 8d 58 04
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  002d3	48 33 cd	 xor	 rcx, rbp
  002d6	e8 00 00 00 00	 call	 __security_check_cookie
  002db	48 8d a5 68 04
	00 00		 lea	 rsp, QWORD PTR [rbp+1128]
  002e2	5f		 pop	 rdi
  002e3	5d		 pop	 rbp
  002e4	c3		 ret	 0
?Tick@CPlayerCamera@Client@@UEAAXN@Z ENDP		; Client::CPlayerCamera::Tick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z
_TEXT	SEGMENT
this$ = 224
pArg$ = 232
?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z PROC	; Client::CPlayerCamera::Initialize, COMDAT

; 28   : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 29   : 	m_pTransform = CTransform::Create(m_pDevice, m_pContext);

  0002f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8b 50 68	 mov	 rdx, QWORD PTR [rax+104]
  0003a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Create@CTransform@Engine@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
  0004b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	48 89 41 78	 mov	 QWORD PTR [rcx+120], rax

; 30   : 	if (nullptr == m_pTransform)

  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 83 78 78 00	 cmp	 QWORD PTR [rax+120], 0
  00062	75 0a		 jne	 SHORT $LN2@Initialize

; 31   : 		return E_FAIL;

  00064	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00069	e9 d5 00 00 00	 jmp	 $LN1@Initialize
$LN2@Initialize:

; 32   : 
; 33   : 	assert(pArg);

  0006e	48 83 bd e8 00
	00 00 00	 cmp	 QWORD PTR pArg$[rbp], 0
  00076	75 22		 jne	 SHORT $LN4@Initialize
  00078	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z@4JA
  0007e	83 c0 05	 add	 eax, 5
  00081	44 8b c0	 mov	 r8d, eax
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JE@LOBGNKN@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAr?$AAc?$AAc?$AAo?$AA?2?$AAd?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAg?$AAi?$AAt?$AAh?$AAu?$AAb?$AA?2@
  0008b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_19OPBALDBC@?$AAp?$AAA?$AAr?$AAg?$AA?$AA@
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00098	33 c0		 xor	 eax, eax
$LN4@Initialize:

; 34   : 	m_pTarget = (CGameObject*)pArg;

  0009a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR pArg$[rbp]
  000a8	48 89 88 c8 00
	00 00		 mov	 QWORD PTR [rax+200], rcx

; 35   : 	m_pTargetTransform = static_cast<CTransform*>(m_pTarget->Find_Component(L"com_camera_socket_transform"));

  000af	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DI@OLGFHDLM@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAa?$AAm?$AAe?$AAr?$AAa?$AA_?$AAs?$AAo?$AAc?$AAk?$AAe?$AAt?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
  000b6	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bd	48 8b 88 c8 00
	00 00		 mov	 rcx, QWORD PTR [rax+200]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Find_Component@CGameObject@Engine@@QEAAPEAVCComponent@2@PEB_W@Z
  000ca	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d1	48 89 81 d0 00
	00 00		 mov	 QWORD PTR [rcx+208], rax

; 36   : 
; 37   : 	m_CameraDesc.fFovy = XMConvertToRadians(45.f);

  000d8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42340000
  000e0	e8 00 00 00 00	 call	 ?XMConvertToRadians@DirectX@@YAMM@Z ; DirectX::XMConvertToRadians
  000e5	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ec	f3 0f 11 80 b4
	00 00 00	 movss	 DWORD PTR [rax+180], xmm0

; 38   : 	m_CameraDesc.fAspect = g_iWinSizeX / (_float)g_iWinSizeY;

  000f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44a00000
  000fc	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@44340000
  00104	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0010b	f3 0f 11 80 b8
	00 00 00	 movss	 DWORD PTR [rax+184], xmm0

; 39   : 	m_CameraDesc.fNear = 0.1f;

  00113	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00122	f3 0f 11 80 bc
	00 00 00	 movss	 DWORD PTR [rax+188], xmm0

; 40   : 	m_CameraDesc.fFar = 1000.f;

  0012a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00131	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  00139	f3 0f 11 80 c0
	00 00 00	 movss	 DWORD PTR [rax+192], xmm0

; 41   : 
; 42   : 	return S_OK;

  00141	33 c0		 xor	 eax, eax
$LN1@Initialize:

; 43   : }

  00143	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0014a	5f		 pop	 rdi
  0014b	5d		 pop	 rbp
  0014c	c3		 ret	 0
?Initialize@CPlayerCamera@Client@@UEAAJPEAX@Z ENDP	; Client::CPlayerCamera::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ
_TEXT	SEGMENT
this$ = 224
?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ PROC ; Client::CPlayerCamera::Initialize_Prototype, COMDAT

; 20   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 21   : 	if (FAILED(__super::Initialize_Prototype()))

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Initialize_Prototype@CCamera@Engine@@UEAAJXZ
  00037	85 c0		 test	 eax, eax
  00039	7d 07		 jge	 SHORT $LN2@Initialize

; 22   : 		return E_FAIL;

  0003b	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00040	eb 02		 jmp	 SHORT $LN1@Initialize
$LN2@Initialize:

; 23   : 
; 24   : 	return S_OK;

  00042	33 c0		 xor	 eax, eax
$LN1@Initialize:

; 25   : }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?Initialize_Prototype@CPlayerCamera@Client@@UEAAJXZ ENDP ; Client::CPlayerCamera::Initialize_Prototype
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ??1CPlayerCamera@Client@@EEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1CPlayerCamera@Client@@EEAA@XZ PROC			; Client::CPlayerCamera::~CPlayerCamera, COMDAT

; 12   : }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CCamera@Engine@@MEAA@XZ
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1CPlayerCamera@Client@@EEAA@XZ ENDP			; Client::CPlayerCamera::~CPlayerCamera
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
; File c:\users\arcco\documents\github\framework\client\public\playercamera.h
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ??0CPlayerCamera@Client@@AEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
rhs$ = 264
??0CPlayerCamera@Client@@AEAA@AEBV01@@Z PROC		; Client::CPlayerCamera::CPlayerCamera, COMDAT

; 16   : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2

; 15   : 	: CCamera(rhs)

  0003a	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR rhs$[rbp]
  00041	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0CCamera@Engine@@IEAA@AEBV01@@Z
  0004e	90		 npad	 1

; 16   : {

  0004f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CPlayerCamera@Client@@6B@
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx
; File c:\users\arcco\documents\github\framework\client\public\playercamera.h

; 30   : 	CGameObject* m_pTarget = nullptr;

  00060	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 c7 80 c8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+200], 0

; 31   : 	CTransform* m_pTargetTransform = nullptr;

  00072	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00079	48 c7 80 d0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+208], 0

; 32   : 
; 33   : 	_float3 vDistance = { 0.f, 3.f, 6.f };

  00084	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008b	48 05 d8 00 00
	00		 add	 rax, 216		; 000000d8H
  00091	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@40c00000
  00099	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@40400000
  000a1	0f 57 c9	 xorps	 xmm1, xmm1
  000a4	48 8b c8	 mov	 rcx, rax
  000a7	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3

; 34   : 	_bool m_bMouseLock = true;

  000ac	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b3	c6 80 e4 00 00
	00 01		 mov	 BYTE PTR [rax+228], 1
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp

; 17   : }

  000ba	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c1	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c8	5f		 pop	 rdi
  000c9	5d		 pop	 rbp
  000ca	c3		 ret	 0
??0CPlayerCamera@Client@@AEAA@AEBV01@@Z ENDP		; Client::CPlayerCamera::CPlayerCamera
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
rhs$ = 264
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA PROC ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CCamera@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA ENDP ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
rhs$ = 264
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA PROC ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CCamera@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@AEBV01@@Z@4HA ENDP ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
; File c:\users\arcco\documents\github\framework\client\public\playercamera.h
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
pDevice$ = 264
pContext$ = 272
??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z PROC ; Client::CPlayerCamera::CPlayerCamera, COMDAT

; 11   : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2

; 10   : 	: CCamera(pDevice, pContext)

  0003f	4c 8b 85 10 01
	00 00		 mov	 r8, QWORD PTR pContext$[rbp]
  00046	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR pDevice$[rbp]
  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00054	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0CCamera@Engine@@IEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
  0005a	90		 npad	 1

; 11   : {

  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CPlayerCamera@Client@@6B@
  00069	48 89 08	 mov	 QWORD PTR [rax], rcx
; File c:\users\arcco\documents\github\framework\client\public\playercamera.h

; 30   : 	CGameObject* m_pTarget = nullptr;

  0006c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 c7 80 c8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+200], 0

; 31   : 	CTransform* m_pTargetTransform = nullptr;

  0007e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 c7 80 d0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+208], 0

; 32   : 
; 33   : 	_float3 vDistance = { 0.f, 3.f, 6.f };

  00090	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 05 d8 00 00
	00		 add	 rax, 216		; 000000d8H
  0009d	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@40c00000
  000a5	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@40400000
  000ad	0f 57 c9	 xorps	 xmm1, xmm1
  000b0	48 8b c8	 mov	 rcx, rax
  000b3	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3

; 34   : 	_bool m_bMouseLock = true;

  000b8	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	c6 80 e4 00 00
	00 01		 mov	 BYTE PTR [rax+228], 1
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp

; 12   : }

  000c6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cd	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000d4	5f		 pop	 rdi
  000d5	5d		 pop	 rbp
  000d6	c3		 ret	 0
??0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ENDP ; Client::CPlayerCamera::CPlayerCamera
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
pDevice$ = 264
pContext$ = 272
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CCamera@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
pDevice$ = 264
pContext$ = 272
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CCamera@Engine@@MEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???0CPlayerCamera@Client@@AEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CPlayerCamera::CPlayerCamera'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z
_TEXT	SEGMENT
V$ = 16
vLengthSq$ = 64
vTemp$ = 112
vResult$ = 160
vZeroMask$ = 208
vTemp1$ = 256
vTemp2$ = 304
$T1 = 928
$T2 = 976
$T3 = 1024
$T4 = 1072
$T5 = 1120
$T6 = 1168
$T7 = 1216
$T8 = 1264
$T9 = 1312
$T10 = 1360
$T11 = 1408
$T12 = 1456
$T13 = 1504
$T14 = 1552
$T15 = 1600
$T16 = 1648
$T17 = 1696
?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z PROC	; DirectX::XMVector3Normalize, COMDAT

; 9238 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec f8 06
	00 00		 sub	 rsp, 1784		; 000006f8H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 be 01 00 00	 mov	 ecx, 446		; 000001beH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00022	48 89 84 24 10
	07 00 00	 mov	 QWORD PTR [rsp+1808], rax
  0002a	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 9239 : #if defined(_XM_NO_INTRINSICS_)
; 9240 :     float fLength;
; 9241 :     XMVECTOR vResult;
; 9242 : 
; 9243 :     vResult = XMVector3Length( V );
; 9244 :     fLength = vResult.vector4_f32[0];
; 9245 : 
; 9246 :     // Prevent divide by zero
; 9247 :     if (fLength > 0) {
; 9248 :         fLength = 1.0f/fLength;
; 9249 :     }
; 9250 :     
; 9251 :     vResult.vector4_f32[0] = V.vector4_f32[0]*fLength;
; 9252 :     vResult.vector4_f32[1] = V.vector4_f32[1]*fLength;
; 9253 :     vResult.vector4_f32[2] = V.vector4_f32[2]*fLength;
; 9254 :     vResult.vector4_f32[3] = V.vector4_f32[3]*fLength;
; 9255 :     return vResult;
; 9256 : 
; 9257 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 9258 :     // Dot3
; 9259 :     float32x4_t vTemp = vmulq_f32( V, V );
; 9260 :     float32x2_t v1 = vget_low_f32( vTemp );
; 9261 :     float32x2_t v2 = vget_high_f32( vTemp );
; 9262 :     v1 = vpadd_f32( v1, v1 );
; 9263 :     v2 = vdup_lane_f32( v2, 0 );
; 9264 :     v1 = vadd_f32( v1, v2 );
; 9265 :     uint32x2_t VEqualsZero = vceq_f32( v1, vdup_n_f32(0) );
; 9266 :     uint32x2_t VEqualsInf = vceq_f32( v1, vget_low_f32(g_XMInfinity) );
; 9267 :     // Reciprocal sqrt (2 iterations of Newton-Raphson)
; 9268 :     float32x2_t S0 = vrsqrte_f32( v1 );
; 9269 :     float32x2_t P0 = vmul_f32( v1, S0 );
; 9270 :     float32x2_t R0 = vrsqrts_f32( P0, S0 );
; 9271 :     float32x2_t S1 = vmul_f32( S0, R0 );
; 9272 :     float32x2_t P1 = vmul_f32( v1, S1 );
; 9273 :     float32x2_t R1 = vrsqrts_f32( P1, S1 );
; 9274 :     v2 = vmul_f32( S1, R1 );
; 9275 :     // Normalize
; 9276 :     XMVECTOR vResult = vmulq_f32( V, vcombine_f32(v2,v2) );
; 9277 :     vResult = vbslq_f32( vcombine_f32(VEqualsZero,VEqualsZero), vdupq_n_f32(0), vResult );
; 9278 :     return vbslq_f32( vcombine_f32(VEqualsInf,VEqualsInf), g_XMQNaN, vResult );
; 9279 : #elif defined(_XM_SSE_INTRINSICS_)
; 9280 :     // Perform the dot product on x,y and z only
; 9281 :     XMVECTOR vLengthSq = _mm_mul_ps(V,V);

  0002e	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00032	0f 59 45 10	 mulps	 xmm0, XMMWORD PTR V$[rbp]
  00036	0f 29 85 a0 03
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0003d	0f 28 85 a0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00044	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9282 :     XMVECTOR vTemp = XM_PERMUTE_PS(vLengthSq,_MM_SHUFFLE(2,1,2,1));

  00048	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  0004c	0f c6 45 40 99	 shufps	 xmm0, XMMWORD PTR vLengthSq$[rbp], 153 ; 00000099H
  00051	0f 29 85 d0 03
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00058	0f 28 85 d0 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0005f	0f 29 45 70	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9283 :     vLengthSq = _mm_add_ss(vLengthSq,vTemp);

  00063	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  00067	f3 0f 58 45 70	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  0006c	0f 29 85 00 04
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00073	0f 28 85 00 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  0007a	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9284 :     vTemp = XM_PERMUTE_PS(vTemp,_MM_SHUFFLE(1,1,1,1));

  0007e	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR vTemp$[rbp]
  00082	0f c6 45 70 55	 shufps	 xmm0, XMMWORD PTR vTemp$[rbp], 85 ; 00000055H
  00087	0f 29 85 30 04
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  0008e	0f 28 85 30 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  00095	0f 29 45 70	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 9285 :     vLengthSq = _mm_add_ss(vLengthSq,vTemp);

  00099	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  0009d	f3 0f 58 45 70	 addss	 xmm0, DWORD PTR vTemp$[rbp]
  000a2	0f 29 85 60 04
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000a9	0f 28 85 60 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000b0	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9286 :     vLengthSq = XM_PERMUTE_PS(vLengthSq,_MM_SHUFFLE(0,0,0,0));

  000b4	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  000b8	0f c6 45 40 00	 shufps	 xmm0, XMMWORD PTR vLengthSq$[rbp], 0
  000bd	0f 29 85 90 04
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000c4	0f 28 85 90 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000cb	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9287 :     // Prepare for the division
; 9288 :     XMVECTOR vResult = _mm_sqrt_ps(vLengthSq);

  000cf	0f 51 45 40	 sqrtps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  000d3	0f 29 85 c0 04
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  000da	0f 28 85 c0 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  000e1	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9289 :     // Create zero with a single instruction
; 9290 :     XMVECTOR vZeroMask = _mm_setzero_ps();

  000e8	0f 57 c0	 xorps	 xmm0, xmm0
  000eb	0f 29 85 f0 04
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  000f2	0f 28 85 f0 04
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  000f9	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vZeroMask$[rbp], xmm0

; 9291 :     // Test for a divide by zero (Must be FP to detect -0.0)
; 9292 :     vZeroMask = _mm_cmpneq_ps(vZeroMask,vResult);

  00100	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vZeroMask$[rbp]
  00107	0f c2 85 a0 00
	00 00 04	 cmpneqps xmm0, XMMWORD PTR vResult$[rbp]
  0010f	0f 29 85 20 05
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  00116	0f 28 85 20 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  0011d	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vZeroMask$[rbp], xmm0

; 9293 :     // Failsafe on zero (Or epsilon) length planes
; 9294 :     // If the length is infinity, set the elements to zero
; 9295 :     vLengthSq = _mm_cmpneq_ps(vLengthSq,g_XMInfinity);

  00124	48 8d 95 80 05
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  0012b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMInfinity
  00132	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  00137	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  0013b	0f c2 00 04	 cmpneqps xmm0, XMMWORD PTR [rax]
  0013f	0f 29 85 50 05
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  00146	0f 28 85 50 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T10[rbp]
  0014d	0f 29 45 40	 movaps	 XMMWORD PTR vLengthSq$[rbp], xmm0

; 9296 :     // Divide to perform the normalization
; 9297 :     vResult = _mm_div_ps(V,vResult);

  00151	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00155	0f 5e 85 a0 00
	00 00		 divps	 xmm0, XMMWORD PTR vResult$[rbp]
  0015c	0f 29 85 b0 05
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  00163	0f 28 85 b0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T12[rbp]
  0016a	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9298 :     // Any that are infinity, set to zero
; 9299 :     vResult = _mm_and_ps(vResult,vZeroMask);

  00171	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00178	0f 54 85 d0 00
	00 00		 andps	 xmm0, XMMWORD PTR vZeroMask$[rbp]
  0017f	0f 29 85 e0 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  00186	0f 28 85 e0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T13[rbp]
  0018d	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9300 :     // Select qnan or result based on infinite length
; 9301 :     XMVECTOR vTemp1 = _mm_andnot_ps(vLengthSq,g_XMQNaN);

  00194	48 8d 95 40 06
	00 00		 lea	 rdx, QWORD PTR $T15[rbp]
  0019b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMQNaN
  001a2	e8 00 00 00 00	 call	 ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ; DirectX::XMVECTORI32::operator __m128
  001a7	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  001ab	0f 55 00	 andnps	 xmm0, XMMWORD PTR [rax]
  001ae	0f 29 85 10 06
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  001b5	0f 28 85 10 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T14[rbp]
  001bc	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vTemp1$[rbp], xmm0

; 9302 :     XMVECTOR vTemp2 = _mm_and_ps(vResult,vLengthSq);

  001c3	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  001ca	0f 54 45 40	 andps	 xmm0, XMMWORD PTR vLengthSq$[rbp]
  001ce	0f 29 85 70 06
	00 00		 movaps	 XMMWORD PTR $T16[rbp], xmm0
  001d5	0f 28 85 70 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T16[rbp]
  001dc	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vTemp2$[rbp], xmm0

; 9303 :     vResult = _mm_or_ps(vTemp1,vTemp2);

  001e3	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vTemp1$[rbp]
  001ea	0f 56 85 30 01
	00 00		 orps	 xmm0, XMMWORD PTR vTemp2$[rbp]
  001f1	0f 29 85 a0 06
	00 00		 movaps	 XMMWORD PTR $T17[rbp], xmm0
  001f8	0f 28 85 a0 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T17[rbp]
  001ff	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 9304 :     return vResult;

  00206	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vResult$[rbp]

; 9305 : #endif
; 9306 : }

  0020d	48 8d a5 c8 06
	00 00		 lea	 rsp, QWORD PTR [rbp+1736]
  00214	5f		 pop	 rdi
  00215	5d		 pop	 rbp
  00216	c3		 ret	 0
?XMVector3Normalize@DirectX@@YQ?AT__m128@@T2@@Z ENDP	; DirectX::XMVector3Normalize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z
_TEXT	SEGMENT
V$ = 16
vResult$ = 64
$T1 = 304
$T2 = 352
ScaleFactor$ = 424
?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z PROC	; DirectX::XMVectorScale, COMDAT

; 2965 : {

$LN3:
  00000	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0000f	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00027	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR [rsp+432], rax
  0002f	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 2966 : #if defined(_XM_NO_INTRINSICS_)
; 2967 :     XMVECTOR Result;
; 2968 :     Result.vector4_f32[0] = V.vector4_f32[0] * ScaleFactor;
; 2969 :     Result.vector4_f32[1] = V.vector4_f32[1] * ScaleFactor;
; 2970 :     Result.vector4_f32[2] = V.vector4_f32[2] * ScaleFactor;
; 2971 :     Result.vector4_f32[3] = V.vector4_f32[3] * ScaleFactor;
; 2972 :     return Result;
; 2973 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2974 :     return XM_VMULQ_N_F32( V, ScaleFactor );
; 2975 : #elif defined(_XM_SSE_INTRINSICS_)
; 2976 :    XMVECTOR vResult = _mm_set_ps1(ScaleFactor);

  00033	f3 0f 10 85 a8
	01 00 00	 movss	 xmm0, DWORD PTR ScaleFactor$[rbp]
  0003b	0f c6 c0 00	 shufps	 xmm0, xmm0, 0
  0003f	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00046	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0004d	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 2977 :    return _mm_mul_ps(vResult,V);

  00051	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00055	0f 59 45 10	 mulps	 xmm0, XMMWORD PTR V$[rbp]
  00059	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00060	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]

; 2978 : #endif
; 2979 : }

  00067	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z ENDP	; DirectX::XMVectorScale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
$T1 = 304
?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z PROC	; DirectX::XMVectorSubtract, COMDAT

; 2784 : {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0000a	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR [rsp+384], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 88
	01 00 00	 mov	 QWORD PTR [rsp+392], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 2785 : #if defined(_XM_NO_INTRINSICS_)
; 2786 : 
; 2787 :     XMVECTOR Result;
; 2788 :     Result.vector4_f32[0] = V1.vector4_f32[0] - V2.vector4_f32[0];
; 2789 :     Result.vector4_f32[1] = V1.vector4_f32[1] - V2.vector4_f32[1];
; 2790 :     Result.vector4_f32[2] = V1.vector4_f32[2] - V2.vector4_f32[2];
; 2791 :     Result.vector4_f32[3] = V1.vector4_f32[3] - V2.vector4_f32[3];
; 2792 :     return Result;
; 2793 : 
; 2794 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 2795 :     return vsubq_f32( V1, V2 );
; 2796 : #elif defined(_XM_SSE_INTRINSICS_)
; 2797 :     return _mm_sub_ps( V1, V2 );

  0003e	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00042	0f 5c 45 40	 subps	 xmm0, XMMWORD PTR V2$[rbp]
  00046	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004d	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 2798 : #endif
; 2799 : }

  00054	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z ENDP	; DirectX::XMVectorSubtract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z
_TEXT	SEGMENT
V$ = 16
vResult$ = 64
vTemp$ = 112
$T1 = 352
$T2 = 400
$T3 = 448
$T4 = 496
y$ = 568
?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z PROC		; DirectX::XMVectorSetY, COMDAT

; 742  : {

$LN3:
  00000	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  0000f	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00027	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR [rsp+576], rax
  0002f	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 743  : #if defined(_XM_NO_INTRINSICS_)
; 744  :     XMVECTOR U;
; 745  :     U.vector4_f32[0] = V.vector4_f32[0];
; 746  :     U.vector4_f32[1] = y;
; 747  :     U.vector4_f32[2] = V.vector4_f32[2];
; 748  :     U.vector4_f32[3] = V.vector4_f32[3];
; 749  :     return U;
; 750  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 751  :     return vsetq_lane_f32(y,V,1);
; 752  : #elif defined(_XM_SSE_INTRINSICS_)
; 753  :     // Swap y and x
; 754  :     XMVECTOR vResult = XM_PERMUTE_PS(V,_MM_SHUFFLE(3,2,0,1));

  00033	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00037	0f c6 45 10 e1	 shufps	 xmm0, XMMWORD PTR V$[rbp], 225 ; 000000e1H
  0003c	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00043	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  0004a	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 755  :     // Convert input to vector
; 756  :     XMVECTOR vTemp = _mm_set_ss(y);

  0004e	f3 0f 10 85 38
	02 00 00	 movss	 xmm0, DWORD PTR y$[rbp]
  00056	0f 57 c9	 xorps	 xmm1, xmm1
  00059	f3 0f 10 c8	 movss	 xmm1, xmm0
  0005d	0f 28 c1	 movaps	 xmm0, xmm1
  00060	0f 29 85 90 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  00067	0f 28 85 90 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  0006e	0f 29 45 70	 movaps	 XMMWORD PTR vTemp$[rbp], xmm0

; 757  :     // Replace the x component
; 758  :     vResult = _mm_move_ss(vResult,vTemp);

  00072	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00076	0f 28 4d 70	 movaps	 xmm1, XMMWORD PTR vTemp$[rbp]
  0007a	f3 0f 10 c1	 movss	 xmm0, xmm1
  0007e	0f 29 85 c0 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  00085	0f 28 85 c0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  0008c	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 759  :     // Swap y and x again
; 760  :     vResult = XM_PERMUTE_PS(vResult,_MM_SHUFFLE(3,2,0,1));

  00090	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]
  00094	0f c6 45 40 e1	 shufps	 xmm0, XMMWORD PTR vResult$[rbp], 225 ; 000000e1H
  00099	0f 29 85 f0 01
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000a0	0f 28 85 f0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000a7	0f 29 45 40	 movaps	 XMMWORD PTR vResult$[rbp], xmm0

; 761  :     return vResult;

  000ab	0f 28 45 40	 movaps	 xmm0, XMMWORD PTR vResult$[rbp]

; 762  : #endif
; 763  : }

  000af	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  000b6	5f		 pop	 rdi
  000b7	5d		 pop	 rbp
  000b8	c3		 ret	 0
?XMVectorSetY@DirectX@@YQ?AT__m128@@T2@M@Z ENDP		; DirectX::XMVectorSetY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = 208
x$ = 272
y$ = 280
z$ = 288
w$ = 296
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT

; 71   : {

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00018	55		 push	 rbp
  00019	57		 push	 rdi
  0001a	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00021	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00026	48 8b fc	 mov	 rdi, rsp
  00029	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00033	f3 ab		 rep stosd

; 72   : #if defined(_XM_NO_INTRINSICS_)
; 73   :     XMVECTORF32 vResult = {x,y,z,w};
; 74   :     return vResult.v;
; 75   : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 76   :     float32x2_t V0 = vcreate_f32(((uint64_t)*(const uint32_t *)&x) | ((uint64_t)(*(const uint32_t *)&y) << 32));
; 77   :     float32x2_t V1 = vcreate_f32(((uint64_t)*(const uint32_t *)&z) | ((uint64_t)(*(const uint32_t *)&w) << 32));
; 78   :     return vcombine_f32(V0, V1);
; 79   : #elif defined(_XM_SSE_INTRINSICS_)
; 80   :     return _mm_set_ps( w, z, y, x );

  00035	f3 0f 10 85 28
	01 00 00	 movss	 xmm0, DWORD PTR w$[rbp]
  0003d	f3 0f 10 8d 20
	01 00 00	 movss	 xmm1, DWORD PTR z$[rbp]
  00045	f3 0f 10 95 18
	01 00 00	 movss	 xmm2, DWORD PTR y$[rbp]
  0004d	f3 0f 10 9d 10
	01 00 00	 movss	 xmm3, DWORD PTR x$[rbp]
  00055	0f 14 d9	 unpcklps xmm3, xmm1
  00058	0f 14 d0	 unpcklps xmm2, xmm0
  0005b	0f 28 c3	 movaps	 xmm0, xmm3
  0005e	0f 14 c2	 unpcklps xmm0, xmm2
  00061	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00068	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 81   : #endif
; 82   : }

  0006f	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00076	5f		 pop	 rdi
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
;	COMDAT ?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z
_TEXT	SEGMENT
x$ = 16
y$ = 64
z$ = 112
xy$ = 160
$T1 = 400
$T2 = 448
$T3 = 496
$T4 = 544
$T5 = 592
pSource$ = 656
?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z PROC ; DirectX::XMLoadFloat3, COMDAT

; 499  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec a8 02
	00 00		 sub	 rsp, 680		; 000002a8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 aa 00 00 00	 mov	 ecx, 170		; 000000aaH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR [rsp+712]

; 500  :     assert(pSource);

  0002a	48 83 bd 90 02
	00 00 00	 cmp	 QWORD PTR pSource$[rbp], 0
  00032	75 21		 jne	 SHORT $LN3@XMLoadFloa
  00034	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@2@@Z@4JA
  0003a	ff c0		 inc	 eax
  0003c	44 8b c0	 mov	 r8d, eax
  0003f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00046	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
  0004d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00053	33 c0		 xor	 eax, eax
$LN3@XMLoadFloa:

; 501  : #if defined(_XM_NO_INTRINSICS_)
; 502  :     XMVECTOR V;
; 503  :     V.vector4_f32[0] = pSource->x;
; 504  :     V.vector4_f32[1] = pSource->y;
; 505  :     V.vector4_f32[2] = pSource->z;
; 506  :     V.vector4_f32[3] = 0.f;
; 507  :     return V;
; 508  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 509  :     float32x2_t x = vld1_f32( reinterpret_cast<const float*>(pSource) );
; 510  :     float32x2_t zero = vdup_n_f32(0);
; 511  :     float32x2_t y = vld1_lane_f32( reinterpret_cast<const float*>(pSource)+2, zero, 0 );
; 512  :     return vcombine_f32( x, y );
; 513  : #elif defined(_XM_SSE_INTRINSICS_)
; 514  :     __m128 x = _mm_load_ss( &pSource->x );

  00055	48 8b 85 90 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  0005c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [rax]
  00060	0f 57 c9	 xorps	 xmm1, xmm1
  00063	f3 0f 10 c8	 movss	 xmm1, xmm0
  00067	0f 28 c1	 movaps	 xmm0, xmm1
  0006a	0f 29 85 90 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00071	0f 28 85 90 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]
  00078	0f 29 45 10	 movaps	 XMMWORD PTR x$[rbp], xmm0

; 515  :     __m128 y = _mm_load_ss( &pSource->y );

  0007c	48 8b 85 90 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  00083	48 83 c0 04	 add	 rax, 4
  00087	f3 0f 10 00	 movss	 xmm0, DWORD PTR [rax]
  0008b	0f 57 c9	 xorps	 xmm1, xmm1
  0008e	f3 0f 10 c8	 movss	 xmm1, xmm0
  00092	0f 28 c1	 movaps	 xmm0, xmm1
  00095	0f 29 85 c0 01
	00 00		 movaps	 XMMWORD PTR $T2[rbp], xmm0
  0009c	0f 28 85 c0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T2[rbp]
  000a3	0f 29 45 40	 movaps	 XMMWORD PTR y$[rbp], xmm0

; 516  :     __m128 z = _mm_load_ss( &pSource->z );

  000a7	48 8b 85 90 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  000ae	48 83 c0 08	 add	 rax, 8
  000b2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [rax]
  000b6	0f 57 c9	 xorps	 xmm1, xmm1
  000b9	f3 0f 10 c8	 movss	 xmm1, xmm0
  000bd	0f 28 c1	 movaps	 xmm0, xmm1
  000c0	0f 29 85 f0 01
	00 00		 movaps	 XMMWORD PTR $T3[rbp], xmm0
  000c7	0f 28 85 f0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T3[rbp]
  000ce	0f 29 45 70	 movaps	 XMMWORD PTR z$[rbp], xmm0

; 517  :     __m128 xy = _mm_unpacklo_ps( x, y );

  000d2	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR x$[rbp]
  000d6	0f 14 45 40	 unpcklps xmm0, XMMWORD PTR y$[rbp]
  000da	0f 29 85 20 02
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  000e1	0f 28 85 20 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  000e8	0f 29 85 a0 00
	00 00		 movaps	 XMMWORD PTR xy$[rbp], xmm0

; 518  :     return _mm_movelh_ps( xy, z );

  000ef	0f 28 85 a0 00
	00 00		 movaps	 xmm0, XMMWORD PTR xy$[rbp]
  000f6	0f 28 4d 70	 movaps	 xmm1, XMMWORD PTR z$[rbp]
  000fa	0f 16 c1	 movlhps xmm0, xmm1
  000fd	0f 29 85 50 02
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  00104	0f 28 85 50 02
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]

; 519  : #endif
; 520  : }

  0010b	48 8d a5 78 02
	00 00		 lea	 rsp, QWORD PTR [rbp+632]
  00112	5f		 pop	 rdi
  00113	5d		 pop	 rbp
  00114	c3		 ret	 0
?XMLoadFloat3@DirectX@@YQ?AT__m128@@PEBUXMFLOAT3@1@@Z ENDP ; DirectX::XMLoadFloat3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMFLOAT3@DirectX@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 224
_x$ = 232
_y$ = 240
_z$ = 248
??0XMFLOAT3@DirectX@@QEAA@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT

; 506  :     XMFLOAT3(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00017	55		 push	 rbp
  00018	57		 push	 rdi
  00019	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00020	48 8b ec	 mov	 rbp, rsp
  00023	48 8b fc	 mov	 rdi, rsp
  00026	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0003a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	f3 0f 10 85 e8
	00 00 00	 movss	 xmm0, DWORD PTR _x$[rbp]
  00049	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	f3 0f 10 85 f0
	00 00 00	 movss	 xmm0, DWORD PTR _y$[rbp]
  0005c	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	f3 0f 10 85 f8
	00 00 00	 movss	 xmm0, DWORD PTR _z$[rbp]
  00070	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00075	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
??0XMFLOAT3@DirectX@@QEAA@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ??DDirectX@@YQ?AT__m128@@T1@M@Z
_TEXT	SEGMENT
V$ = 16
$T1 = 256
S$ = 328
??DDirectX@@YQ?AT__m128@@T1@M@Z PROC			; DirectX::operator*, COMDAT

; 13994: {

$LN3:
  00000	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000f	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  00027	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR [rsp+368], rax
  0002f	0f 29 45 10	 movaps	 XMMWORD PTR V$[rbp], xmm0

; 13995:     return XMVectorScale(V, S);

  00033	f3 0f 10 8d 48
	01 00 00	 movss	 xmm1, DWORD PTR S$[rbp]
  0003b	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  0003f	e8 00 00 00 00	 call	 ?XMVectorScale@DirectX@@YQ?AT__m128@@T2@M@Z ; DirectX::XMVectorScale
  00044	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  0004b	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 13996: }

  00052	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00059	5f		 pop	 rdi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
??DDirectX@@YQ?AT__m128@@T1@M@Z ENDP			; DirectX::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ??GDirectX@@YQ?AT__m128@@T1@0@Z
_TEXT	SEGMENT
V1$ = 16
V2$ = 64
$T1 = 304
??GDirectX@@YQ?AT__m128@@T1@0@Z PROC			; DirectX::operator-, COMDAT

; 13961: {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 45 10	 lea	 rax, QWORD PTR V1$[rbp]
  00022	48 89 84 24 a0
	01 00 00	 mov	 QWORD PTR [rsp+416], rax
  0002a	48 8d 45 40	 lea	 rax, QWORD PTR V2$[rbp]
  0002e	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR [rsp+424], rax
  00036	0f 29 4d 40	 movaps	 XMMWORD PTR V2$[rbp], xmm1
  0003a	0f 29 45 10	 movaps	 XMMWORD PTR V1$[rbp], xmm0

; 13962:     return XMVectorSubtract(V1, V2);

  0003e	0f 28 4d 40	 movaps	 xmm1, XMMWORD PTR V2$[rbp]
  00042	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V1$[rbp]
  00046	e8 00 00 00 00	 call	 ?XMVectorSubtract@DirectX@@YQ?AT__m128@@T2@0@Z ; DirectX::XMVectorSubtract
  0004b	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00052	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 13963: }

  00059	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??GDirectX@@YQ?AT__m128@@T1@0@Z ENDP			; DirectX::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ PROC		; DirectX::XMVECTORI32::operator __m128, COMDAT

; 316  :     inline operator XMVECTOR() const { return v; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00034	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003b	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0003e	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
  00041	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00048	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004f	5f		 pop	 rdi
  00050	5d		 pop	 rbp
  00051	c3		 ret	 0
??BXMVECTORI32@DirectX@@QEBA?AT__m128@@XZ ENDP		; DirectX::XMVECTORI32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ?XMConvertToRadians@DirectX@@YAMM@Z
_TEXT	SEGMENT
fDegrees$ = 224
?XMConvertToRadians@DirectX@@YAMM@Z PROC		; DirectX::XMConvertToRadians, COMDAT

; 208  : inline float XMConvertToRadians(float fDegrees) { return fDegrees * (XM_PI / 180.0f); }

$LN3:
  00000	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00006	55		 push	 rbp
  00007	57		 push	 rdi
  00008	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H
  0000f	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	f3 0f 10 85 e0
	00 00 00	 movss	 xmm0, DWORD PTR fDegrees$[rbp]
  0002b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  00033	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?XMConvertToRadians@DirectX@@YAMM@Z ENDP		; DirectX::XMConvertToRadians
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\arcco\documents\github\framework\client\private\playercamera.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 192
tv67 = 200
__t$ = 240
__s$ = 248
__n$ = 256
__f$ = 264
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
$LN2@vector:
  00039	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __n$[rbp]
  00040	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv66[rbp], rax
  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __n$[rbp]
  0004e	48 ff c8	 dec	 rax
  00051	48 89 85 00 01
	00 00		 mov	 QWORD PTR __n$[rbp], rax
  00058	48 83 bd c0 00
	00 00 00	 cmp	 QWORD PTR tv66[rbp], 0
  00060	76 0c		 jbe	 SHORT $LN5@vector
  00062	c7 85 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0006c	eb 0a		 jmp	 SHORT $LN6@vector
$LN5@vector:
  0006e	c7 85 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN6@vector:
  00078	83 bd c8 00 00
	00 00		 cmp	 DWORD PTR tv67[rbp], 0
  0007f	74 2a		 je	 SHORT $LN3@vector
  00081	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __t$[rbp]
  00088	ff 95 08 01 00
	00		 call	 QWORD PTR __f$[rbp]
  0008e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __s$[rbp]
  00095	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __t$[rbp]
  0009c	48 03 c8	 add	 rcx, rax
  0009f	48 8b c1	 mov	 rax, rcx
  000a2	48 89 85 f0 00
	00 00		 mov	 QWORD PTR __t$[rbp], rax
  000a9	eb 8e		 jmp	 SHORT $LN2@vector
$LN3@vector:
  000ab	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
