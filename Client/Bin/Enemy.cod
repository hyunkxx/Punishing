; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24245.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AliceBlue
PUBLIC	?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::AntiqueWhite
PUBLIC	?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Aqua
PUBLIC	?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Aquamarine
PUBLIC	?Azure@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Azure
PUBLIC	?Beige@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Beige
PUBLIC	?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Bisque
PUBLIC	?Black@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Black
PUBLIC	?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::BlanchedAlmond
PUBLIC	?Blue@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Blue
PUBLIC	?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BlueViolet
PUBLIC	?Brown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Brown
PUBLIC	?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::BurlyWood
PUBLIC	?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::CadetBlue
PUBLIC	?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chartreuse
PUBLIC	?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Chocolate
PUBLIC	?Coral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Coral
PUBLIC	?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::CornflowerBlue
PUBLIC	?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Cornsilk
PUBLIC	?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Crimson
PUBLIC	?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Cyan
PUBLIC	?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkBlue
PUBLIC	?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkCyan
PUBLIC	?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkGoldenrod
PUBLIC	?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGray
PUBLIC	?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkGreen
PUBLIC	?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkKhaki
PUBLIC	?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkMagenta
PUBLIC	?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkOliveGreen
PUBLIC	?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrange
PUBLIC	?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkOrchid
PUBLIC	?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkRed
PUBLIC	?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSalmon
PUBLIC	?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkSeaGreen
PUBLIC	?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateBlue
PUBLIC	?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkSlateGray
PUBLIC	?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::DarkTurquoise
PUBLIC	?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DarkViolet
PUBLIC	?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepPink
PUBLIC	?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DeepSkyBlue
PUBLIC	?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DimGray
PUBLIC	?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::DodgerBlue
PUBLIC	?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Firebrick
PUBLIC	?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::FloralWhite
PUBLIC	?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::ForestGreen
PUBLIC	?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Fuchsia
PUBLIC	?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Gainsboro
PUBLIC	?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GhostWhite
PUBLIC	?Gold@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gold
PUBLIC	?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Goldenrod
PUBLIC	?Gray@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Gray
PUBLIC	?Green@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Green
PUBLIC	?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::GreenYellow
PUBLIC	?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Honeydew
PUBLIC	?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::HotPink
PUBLIC	?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::IndianRed
PUBLIC	?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Indigo
PUBLIC	?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Ivory
PUBLIC	?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Khaki
PUBLIC	?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Lavender
PUBLIC	?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LavenderBlush
PUBLIC	?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LawnGreen
PUBLIC	?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LemonChiffon
PUBLIC	?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightBlue
PUBLIC	?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCoral
PUBLIC	?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightCyan
PUBLIC	?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightGoldenrodYellow
PUBLIC	?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGreen
PUBLIC	?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightGray
PUBLIC	?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightPink
PUBLIC	?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSalmon
PUBLIC	?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSeaGreen
PUBLIC	?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightSkyBlue
PUBLIC	?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSlateGray
PUBLIC	?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::LightSteelBlue
PUBLIC	?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LightYellow
PUBLIC	?Lime@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Lime
PUBLIC	?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::LimeGreen
PUBLIC	?Linen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Linen
PUBLIC	?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Magenta
PUBLIC	?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Maroon
PUBLIC	?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumAquamarine
PUBLIC	?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumBlue
PUBLIC	?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumOrchid
PUBLIC	?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MediumPurple
PUBLIC	?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSeaGreen
PUBLIC	?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSlateBlue
PUBLIC	?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumSpringGreen
PUBLIC	?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumTurquoise
PUBLIC	?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::MediumVioletRed
PUBLIC	?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MidnightBlue
PUBLIC	?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MintCream
PUBLIC	?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::MistyRose
PUBLIC	?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Moccasin
PUBLIC	?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::NavajoWhite
PUBLIC	?Navy@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Navy
PUBLIC	?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OldLace
PUBLIC	?Olive@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Olive
PUBLIC	?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OliveDrab
PUBLIC	?Orange@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orange
PUBLIC	?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::OrangeRed
PUBLIC	?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Orchid
PUBLIC	?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleGoldenrod
PUBLIC	?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PaleGreen
PUBLIC	?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleTurquoise
PUBLIC	?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B ; DirectX::Colors::PaleVioletRed
PUBLIC	?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PapayaWhip
PUBLIC	?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PeachPuff
PUBLIC	?Peru@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Peru
PUBLIC	?Pink@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Pink
PUBLIC	?Plum@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Plum
PUBLIC	?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::PowderBlue
PUBLIC	?Purple@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Purple
PUBLIC	?Red@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Red
PUBLIC	?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RosyBrown
PUBLIC	?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::RoyalBlue
PUBLIC	?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SaddleBrown
PUBLIC	?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Salmon
PUBLIC	?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SandyBrown
PUBLIC	?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaGreen
PUBLIC	?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SeaShell
PUBLIC	?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Sienna
PUBLIC	?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B	; DirectX::g_BoxOffset
PUBLIC	?Silver@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Silver
PUBLIC	?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_RayEpsilon
PUBLIC	?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SkyBlue
PUBLIC	?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_RayNegEpsilon
PUBLIC	?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateBlue
PUBLIC	?g_FltMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_FltMin
PUBLIC	?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SlateGray
PUBLIC	?g_FltMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_FltMax
PUBLIC	?Snow@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Snow
PUBLIC	?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SpringGreen
PUBLIC	?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::SteelBlue
PUBLIC	?Tan@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Tan
PUBLIC	?Teal@Colors@DirectX@@3UXMVECTORF32@2@B		; DirectX::Colors::Teal
PUBLIC	?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Thistle
PUBLIC	?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Tomato
PUBLIC	?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Transparent
PUBLIC	?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Turquoise
PUBLIC	?Violet@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Violet
PUBLIC	?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Wheat
PUBLIC	?White@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::White
PUBLIC	?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::WhiteSmoke
PUBLIC	?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::Yellow
PUBLIC	?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B	; DirectX::Colors::YellowGreen
PUBLIC	?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitVectorEpsilon
PUBLIC	?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitQuaternionEpsilon
PUBLIC	?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B ; DirectX::Internal::g_UnitPlaneEpsilon
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT ?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitPlaneEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitPlaneEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitQuaternionEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitQuaternionEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?g_UnitVectorEpsilon@Internal@DirectX@@3UXMVECTORF32@2@B DD 038d1b717r ; 0.0001 ; DirectX::Internal::g_UnitVectorEpsilon
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
	DD	038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?YellowGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f1a9a9br ; 0.603922 ; DirectX::Colors::YellowGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Yellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Yellow
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?WhiteSmoke@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::WhiteSmoke
	DD	03f75f5f7r			; 0.960784
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?White@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?White@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::White
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Wheat@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Wheat
	DD	03f5edee0r			; 0.870588
	DD	03f33b3b4r			; 0.701961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Violet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Violet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::Violet
	DD	03f028283r			; 0.509804
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Turquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e808081r ; 0.25098 ; DirectX::Colors::Turquoise
	DD	03f60e0e2r			; 0.878431
	DD	03f50d0d2r			; 0.815686
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Transparent@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Transparent
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tomato@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Tomato
	DD	03ec6c6c8r			; 0.388235
	DD	03e8e8e8fr			; 0.278431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Thistle@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f58d8dar ; 0.847059 ; DirectX::Colors::Thistle
	DD	03f3fbfc0r			; 0.74902
	DD	03f58d8dar			; 0.847059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Teal@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Teal@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Teal
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Tan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Tan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Tan
	DD	03f34b4b5r			; 0.705882
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e8c8c8dr ; 0.27451 ; DirectX::Colors::SteelBlue
	DD	03f028283r			; 0.509804
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::SpringGreen
	DD	03f800000r			; 1
	DD	03efeff00r			; 0.498039
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Snow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Snow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Snow
	DD	03f7afafcr			; 0.980392
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_FltMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_FltMax@DirectX@@3UXMVECTORF32@1@B DD 07f7fffffr ; 3.40282e+38 ; DirectX::g_FltMax
	DD	07f7fffffr			; 3.40282e+38
	DD	07f7fffffr			; 3.40282e+38
	DD	07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT ?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ee0e0e2r ; 0.439216 ; DirectX::Colors::SlateGray
	DD	03f008081r			; 0.501961
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_FltMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_FltMin@DirectX@@3UXMVECTORF32@1@B DD 0ff7fffffr ; -3.40282e+38 ; DirectX::g_FltMin
	DD	0ff7fffffr			; -3.40282e+38
	DD	0ff7fffffr			; -3.40282e+38
	DD	0ff7fffffr			; -3.40282e+38
CONST	ENDS
;	COMDAT ?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed4d4d6r ; 0.415686 ; DirectX::Colors::SlateBlue
	DD	03eb4b4b5r			; 0.352941
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_RayNegEpsilon@DirectX@@3UXMVECTORF32@1@B DD 09e3ce508r ; -1e-20 ; DirectX::g_RayNegEpsilon
	DD	09e3ce508r			; -1e-20
	DD	09e3ce508r			; -1e-20
	DD	09e3ce508r			; -1e-20
CONST	ENDS
;	COMDAT ?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::SkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f6bebedr			; 0.921569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_RayEpsilon@DirectX@@3UXMVECTORF32@1@B DD 01e3ce508r ; 1e-20 ; DirectX::g_RayEpsilon
	DD	01e3ce508r			; 1e-20
	DD	01e3ce508r			; 1e-20
	DD	01e3ce508r			; 1e-20
CONST	ENDS
;	COMDAT ?Silver@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Silver@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f40c0c2r ; 0.752941 ; DirectX::Colors::Silver
	DD	03f40c0c2r			; 0.752941
	DD	03f40c0c2r			; 0.752941
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B
CONST	SEGMENT
?g_BoxOffset@DirectX@@3QBUXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_BoxOffset
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Sienna@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f20a0a1r ; 0.627451 ; DirectX::Colors::Sienna
	DD	03ea4a4a5r			; 0.321569
	DD	03e34b4b5r			; 0.176471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaShell@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::SeaShell
	DD	03f75f5f7r			; 0.960784
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e38b8b9r ; 0.180392 ; DirectX::Colors::SeaGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03eaeaeafr			; 0.341176
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SandyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f74f4f6r ; 0.956863 ; DirectX::Colors::SandyBrown
	DD	03f24a4a5r			; 0.643137
	DD	03ec0c0c2r			; 0.376471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Salmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Salmon
	DD	03f008081r			; 0.501961
	DD	03ee4e4e6r			; 0.447059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?SaddleBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::SaddleBrown
	DD	03e8a8a8br			; 0.270588
	DD	03d989899r			; 0.0745098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RoyalBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e828283r ; 0.254902 ; DirectX::Colors::RoyalBlue
	DD	03ed2d2d4r			; 0.411765
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?RosyBrown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3cbcbdr ; 0.737255 ; DirectX::Colors::RosyBrown
	DD	03f0f8f90r			; 0.560784
	DD	03f0f8f90r			; 0.560784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Red@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Red@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Red
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Purple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Purple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Purple
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PowderBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::PowderBlue
	DD	03f60e0e2r			; 0.878431
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Plum@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Plum@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5ddddfr ; 0.866667 ; DirectX::Colors::Plum
	DD	03f20a0a1r			; 0.627451
	DD	03f5ddddfr			; 0.866667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Pink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Pink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Pink
	DD	03f40c0c2r			; 0.752941
	DD	03f4bcbcdr			; 0.796079
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Peru@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Peru@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::Peru
	DD	03f058586r			; 0.521569
	DD	03e7cfcfer			; 0.247059
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PeachPuff@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PeachPuff
	DD	03f5adadcr			; 0.854902
	DD	03f39b9bar			; 0.72549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PapayaWhip@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::PapayaWhip
	DD	03f6feff1r			; 0.937255
	DD	03f55d5d7r			; 0.835294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5bdbddr ; 0.858824 ; DirectX::Colors::PaleVioletRed
	DD	03ee0e0e2r			; 0.439216
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2fafb0r ; 0.686275 ; DirectX::Colors::PaleTurquoise
	DD	03f6eeef0r			; 0.933333
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f189899r ; 0.596078 ; DirectX::Colors::PaleGreen
	DD	03f7bfbfdr			; 0.984314
	DD	03f189899r			; 0.596078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?PaleGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f6eeef0r ; 0.933333 ; DirectX::Colors::PaleGoldenrod
	DD	03f68e8ear			; 0.909804
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Orchid
	DD	03ee0e0e2r			; 0.439216
	DD	03f56d6d8r			; 0.839216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OrangeRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::OrangeRed
	DD	03e8a8a8br			; 0.270588
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Orange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Orange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Orange
	DD	03f25a5a6r			; 0.647059
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OliveDrab@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed6d6d8r ; 0.419608 ; DirectX::Colors::OliveDrab
	DD	03f0e8e8fr			; 0.556863
	DD	03e0c8c8dr			; 0.137255
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Olive@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Olive@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Olive
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?OldLace@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7dfdffr ; 0.992157 ; DirectX::Colors::OldLace
	DD	03f75f5f7r			; 0.960784
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Navy@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Navy@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Navy
	DD	000000000r			; 0
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?NavajoWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::NavajoWhite
	DD	03f5edee0r			; 0.870588
	DD	03f2dadaer			; 0.678431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Moccasin@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Moccasin
	DD	03f64e4e6r			; 0.894118
	DD	03f35b5b6r			; 0.709804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MistyRose@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::MistyRose
	DD	03f64e4e6r			; 0.894118
	DD	03f61e1e3r			; 0.882353
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MintCream@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::MintCream
	DD	03f800000r			; 1
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MidnightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03dc8c8car ; 0.0980392 ; DirectX::Colors::MidnightBlue
	DD	03dc8c8car			; 0.0980392
	DD	03ee0e0e2r			; 0.439216
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumVioletRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f47c7c9r ; 0.780392 ; DirectX::Colors::MediumVioletRed
	DD	03da8a8a9r			; 0.0823529
	DD	03f058586r			; 0.521569
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::MediumTurquoise
	DD	03f51d1d3r			; 0.819608
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSpringGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumSpringGreen
	DD	03f7afafcr			; 0.980392
	DD	03f1a9a9br			; 0.603922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef6f6f8r ; 0.482353 ; DirectX::Colors::MediumSlateBlue
	DD	03ed0d0d2r			; 0.407843
	DD	03f6eeef0r			; 0.933333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e70f0f2r ; 0.235294 ; DirectX::Colors::MediumSeaGreen
	DD	03f33b3b4r			; 0.701961
	DD	03ee2e2e4r			; 0.443137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumPurple@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f139394r ; 0.576471 ; DirectX::Colors::MediumPurple
	DD	03ee0e0e2r			; 0.439216
	DD	03f5bdbddr			; 0.858824
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3ababbr ; 0.729412 ; DirectX::Colors::MediumOrchid
	DD	03eaaaaabr			; 0.333333
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::MediumBlue
	DD	000000000r			; 0
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?MediumAquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ecccccer ; 0.4 ; DirectX::Colors::MediumAquamarine
	DD	03f4dcdcfr			; 0.803922
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Maroon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Maroon
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Magenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Magenta
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Linen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Linen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::Linen
	DD	03f70f0f2r			; 0.941177
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LimeGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e48c8car ; 0.196078 ; DirectX::Colors::LimeGreen
	DD	03f4dcdcfr			; 0.803922
	DD	03e48c8car			; 0.196078
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lime@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lime@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Lime
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightYellow
	DD	03f800000r			; 1
	DD	03f60e0e2r			; 0.878431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSteelBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f30b0b1r ; 0.690196 ; DirectX::Colors::LightSteelBlue
	DD	03f44c4c6r			; 0.768628
	DD	03f5edee0r			; 0.870588
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eeeeef0r ; 0.466667 ; DirectX::Colors::LightSlateGray
	DD	03f088889r			; 0.533333
	DD	03f19999ar			; 0.6
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f078788r ; 0.529412 ; DirectX::Colors::LightSkyBlue
	DD	03f4eced0r			; 0.807843
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e008081r ; 0.12549 ; DirectX::Colors::LightSeaGreen
	DD	03f32b2b3r			; 0.698039
	DD	03f2aaaabr			; 0.666667
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightSalmon
	DD	03f20a0a1r			; 0.627451
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LightPink
	DD	03f36b6b7r			; 0.713726
	DD	03f41c1c3r			; 0.756863
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f53d3d5r ; 0.827451 ; DirectX::Colors::LightGray
	DD	03f53d3d5r			; 0.827451
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f109091r ; 0.564706 ; DirectX::Colors::LightGreen
	DD	03f6eeef0r			; 0.933333
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightGoldenrodYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::LightGoldenrodYellow
	DD	03f7afafcr			; 0.980392
	DD	03f52d2d4r			; 0.823529
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f60e0e2r ; 0.878431 ; DirectX::Colors::LightCyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightCoral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::LightCoral
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LightBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::LightBlue
	DD	03f58d8dar			; 0.847059
	DD	03f66e6e8r			; 0.901961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LemonChiffon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LemonChiffon
	DD	03f7afafcr			; 0.980392
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LawnGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ef8f8far ; 0.486275 ; DirectX::Colors::LawnGreen
	DD	03f7cfcfer			; 0.988235
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?LavenderBlush@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::LavenderBlush
	DD	03f70f0f2r			; 0.941177
	DD	03f75f5f7r			; 0.960784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Lavender@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f66e6e8r ; 0.901961 ; DirectX::Colors::Lavender
	DD	03f66e6e8r			; 0.901961
	DD	03f7afafcr			; 0.980392
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Khaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Khaki
	DD	03f66e6e8r			; 0.901961
	DD	03f0c8c8dr			; 0.54902
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Ivory@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Ivory
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Indigo@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e969697r ; 0.294118 ; DirectX::Colors::Indigo
	DD	000000000r			; 0
	DD	03f028283r			; 0.509804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?IndianRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f4dcdcfr ; 0.803922 ; DirectX::Colors::IndianRed
	DD	03eb8b8b9r			; 0.360784
	DD	03eb8b8b9r			; 0.360784
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?HotPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::HotPink
	DD	03ed2d2d4r			; 0.411765
	DD	03f34b4b5r			; 0.705882
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Honeydew@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Honeydew
	DD	03f800000r			; 1
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GreenYellow@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f2dadaer ; 0.678431 ; DirectX::Colors::GreenYellow
	DD	03f800000r			; 1
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Green@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Green@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Green
	DD	03f008081r			; 0.501961
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Gray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f008081r ; 0.501961 ; DirectX::Colors::Gray
	DD	03f008081r			; 0.501961
	DD	03f008081r			; 0.501961
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Goldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5adadcr ; 0.854902 ; DirectX::Colors::Goldenrod
	DD	03f25a5a6r			; 0.647059
	DD	03e008081r			; 0.12549
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Gold@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gold@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Gold
	DD	03f57d7d9r			; 0.843137
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?GhostWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f78f8far ; 0.972549 ; DirectX::Colors::GhostWhite
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Gainsboro@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Gainsboro
	DD	03f5cdcder			; 0.862745
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Fuchsia@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Fuchsia
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?ForestGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e088889r ; 0.133333 ; DirectX::Colors::ForestGreen
	DD	03f0b8b8cr			; 0.545098
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?FloralWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::FloralWhite
	DD	03f7afafcr			; 0.980392
	DD	03f70f0f2r			; 0.941177
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Firebrick@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f32b2b3r ; 0.698039 ; DirectX::Colors::Firebrick
	DD	03e088889r			; 0.133333
	DD	03e088889r			; 0.133333
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DodgerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03df0f0f2r ; 0.117647 ; DirectX::Colors::DodgerBlue
	DD	03f109091r			; 0.564706
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DimGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ed2d2d4r ; 0.411765 ; DirectX::Colors::DimGray
	DD	03ed2d2d4r			; 0.411765
	DD	03ed2d2d4r			; 0.411765
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepSkyBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DeepSkyBlue
	DD	03f3fbfc0r			; 0.74902
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DeepPink@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DeepPink
	DD	03da0a0a1r			; 0.0784314
	DD	03f139394r			; 0.576471
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f149495r ; 0.580392 ; DirectX::Colors::DarkViolet
	DD	000000000r			; 0
	DD	03f53d3d5r			; 0.827451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkTurquoise@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkTurquoise
	DD	03f4eced0r			; 0.807843
	DD	03f51d1d3r			; 0.819608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e3cbcbdr ; 0.184314 ; DirectX::Colors::DarkSlateGray
	DD	03e9e9e9fr			; 0.309804
	DD	03e9e9e9fr			; 0.309804
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSlateBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03e909091r ; 0.282353 ; DirectX::Colors::DarkSlateBlue
	DD	03e74f4f6r			; 0.239216
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSeaGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0f8f90r ; 0.560784 ; DirectX::Colors::DarkSeaGreen
	DD	03f3cbcbdr			; 0.737255
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkSalmon@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f69e9ebr ; 0.913726 ; DirectX::Colors::DarkSalmon
	DD	03f169697r			; 0.588235
	DD	03ef4f4f6r			; 0.478431
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkRed@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkRed
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrchid@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f19999ar ; 0.6 ; DirectX::Colors::DarkOrchid
	DD	03e48c8car			; 0.196078
	DD	03f4ccccer			; 0.8
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOrange@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::DarkOrange
	DD	03f0c8c8dr			; 0.54902
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkOliveGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 03eaaaaabr ; 0.333333 ; DirectX::Colors::DarkOliveGreen
	DD	03ed6d6d8r			; 0.419608
	DD	03e3cbcbdr			; 0.184314
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkMagenta@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0b8b8cr ; 0.545098 ; DirectX::Colors::DarkMagenta
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkKhaki@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f3dbdber ; 0.741176 ; DirectX::Colors::DarkKhaki
	DD	03f37b7b8r			; 0.717647
	DD	03ed6d6d8r			; 0.419608
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGreen@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkGreen
	DD	03ec8c8car			; 0.392157
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGray@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f29a9aar ; 0.662745 ; DirectX::Colors::DarkGray
	DD	03f29a9aar			; 0.662745
	DD	03f29a9aar			; 0.662745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkGoldenrod@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f38b8b9r ; 0.721569 ; DirectX::Colors::DarkGoldenrod
	DD	03f068687r			; 0.52549
	DD	03d30b0b1r			; 0.0431373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkCyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkCyan
	DD	03f0b8b8cr			; 0.545098
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?DarkBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::DarkBlue
	DD	000000000r			; 0
	DD	03f0b8b8cr			; 0.545098
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cyan@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Cyan
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Crimson@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5cdcder ; 0.862745 ; DirectX::Colors::Crimson
	DD	03da0a0a1r			; 0.0784314
	DD	03e70f0f2r			; 0.235294
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Cornsilk@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Cornsilk
	DD	03f78f8far			; 0.972549
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CornflowerBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ec8c8car ; 0.392157 ; DirectX::Colors::CornflowerBlue
	DD	03f159596r			; 0.584314
	DD	03f6dedefr			; 0.929412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Coral@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Coral@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Coral
	DD	03efeff00r			; 0.498039
	DD	03ea0a0a1r			; 0.313726
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chocolate@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f52d2d4r ; 0.823529 ; DirectX::Colors::Chocolate
	DD	03ed2d2d4r			; 0.411765
	DD	03df0f0f2r			; 0.117647
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Chartreuse@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Chartreuse
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?CadetBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03ebebebfr ; 0.372549 ; DirectX::Colors::CadetBlue
	DD	03f1e9e9fr			; 0.619608
	DD	03f20a0a1r			; 0.627451
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BurlyWood@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f5edee0r ; 0.870588 ; DirectX::Colors::BurlyWood
	DD	03f38b8b9r			; 0.721569
	DD	03f078788r			; 0.529412
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Brown@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Brown@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f25a5a6r ; 0.647059 ; DirectX::Colors::Brown
	DD	03e28a8a9r			; 0.164706
	DD	03e28a8a9r			; 0.164706
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlueViolet@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f0a8a8br ; 0.541176 ; DirectX::Colors::BlueViolet
	DD	03e2cacadr			; 0.168627
	DD	03f62e2e4r			; 0.886275
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Blue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Blue@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Blue
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?BlanchedAlmond@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::BlanchedAlmond
	DD	03f6bebedr			; 0.921569
	DD	03f4dcdcfr			; 0.803922
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Black@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Black@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Black
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Bisque@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f800000r ; 1 ; DirectX::Colors::Bisque
	DD	03f64e4e6r			; 0.894118
	DD	03f44c4c6r			; 0.768628
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Beige@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Beige@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f75f5f7r ; 0.960784 ; DirectX::Colors::Beige
	DD	03f75f5f7r			; 0.960784
	DD	03f5cdcder			; 0.862745
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Azure@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Azure@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::Azure
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aquamarine@Colors@DirectX@@3UXMVECTORF32@2@B DD 03efeff00r ; 0.498039 ; DirectX::Colors::Aquamarine
	DD	03f800000r			; 1
	DD	03f54d4d6r			; 0.831373
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?Aqua@Colors@DirectX@@3UXMVECTORF32@2@B DD 000000000r ; 0 ; DirectX::Colors::Aqua
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AntiqueWhite@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f7afafcr ; 0.980392 ; DirectX::Colors::AntiqueWhite
	DD	03f6bebedr			; 0.921569
	DD	03f57d7d9r			; 0.843137
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B
CONST	SEGMENT
?AliceBlue@Colors@DirectX@@3UXMVECTORF32@2@B DD 03f70f0f2r ; 0.941177 ; DirectX::Colors::AliceBlue
	DD	03f78f8far			; 0.972549
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??0XMMATRIX@DirectX@@QEAA@XZ			; DirectX::XMMATRIX::XMMATRIX
PUBLIC	??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z		; DirectX::XMMATRIX::operator*
PUBLIC	??0XMFLOAT3@DirectX@@QEAA@XZ			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??0XMFLOAT3@DirectX@@QEAA@MMM@Z			; DirectX::XMFLOAT3::XMFLOAT3
PUBLIC	??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z	; DirectX::XMFLOAT3::operator=
PUBLIC	??0XMFLOAT4@DirectX@@QEAA@XZ			; DirectX::XMFLOAT4::XMFLOAT4
PUBLIC	?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z ; DirectX::XMLoadFloat4x4
PUBLIC	?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z ; DirectX::XMStoreFloat4
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z ; DirectX::XMMatrixMultiply
PUBLIC	??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CEnemy::CEnemy
PUBLIC	??0CEnemy@Client@@QEAA@AEBV01@@Z		; Client::CEnemy::CEnemy
PUBLIC	??1CEnemy@Client@@UEAA@XZ			; Client::CEnemy::~CEnemy
PUBLIC	?Initialize_Prototype@CEnemy@Client@@UEAAJXZ	; Client::CEnemy::Initialize_Prototype
PUBLIC	?Initialize@CEnemy@Client@@UEAAJPEAX@Z		; Client::CEnemy::Initialize
PUBLIC	?Tick@CEnemy@Client@@UEAAXN@Z			; Client::CEnemy::Tick
PUBLIC	?LateTick@CEnemy@Client@@UEAAXN@Z		; Client::CEnemy::LateTick
PUBLIC	?Render@CEnemy@Client@@UEAAJXZ			; Client::CEnemy::Render
PUBLIC	?RenderGUI@CEnemy@Client@@UEAAXXZ		; Client::CEnemy::RenderGUI
PUBLIC	?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ ; Client::CEnemy::GetPosition
PUBLIC	?AddComponents@CEnemy@Client@@AEAAJXZ		; Client::CEnemy::AddComponents
PUBLIC	?SetupShaderResources@CEnemy@Client@@AEAAJXZ	; Client::CEnemy::SetupShaderResources
PUBLIC	?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CEnemy::Create
PUBLIC	?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z ; Client::CEnemy::Clone
PUBLIC	?Free@CEnemy@Client@@UEAAXXZ			; Client::CEnemy::Free
PUBLIC	??_GCEnemy@Client@@UEAAPEAXI@Z			; Client::CEnemy::`scalar deleting destructor'
PUBLIC	??0tagColliderDesc@CCollider@Engine@@QEAA@XZ	; Engine::CCollider::tagColliderDesc::tagColliderDesc
PUBLIC	?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ ; Engine::CBone::GetCombinedMatrix
PUBLIC	??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z ; Engine::Safe_Release<Client::CEnemy * __ptr64>
PUBLIC	??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z ; Engine::Safe_Release<Engine::CRenderer * __ptr64>
PUBLIC	??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z ; Engine::Safe_Release<Engine::CTransform * __ptr64>
PUBLIC	??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z ; Engine::Safe_Release<Engine::CModel * __ptr64>
PUBLIC	??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z ; Engine::Safe_Release<Engine::CShader * __ptr64>
PUBLIC	??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z ; Engine::Safe_Release<Engine::CCollider * __ptr64>
PUBLIC	??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ ; `string'
PUBLIC	??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@2@PEBUXMFLOAT4X4@2@@Z@4JA ; `DirectX::XMLoadFloat4x4'::`1'::__LINE__Var
PUBLIC	??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@2@T__m128@@@Z@4JA ; `DirectX::XMStoreFloat4'::`1'::__LINE__Var
PUBLIC	??_7CEnemy@Client@@6B@				; Client::CEnemy::`vftable'
PUBLIC	??_C@_06HFDDOAAP@Bip001?$AA@			; `string'
PUBLIC	??_C@_05KKFOKGIE@Cheek?$AA@			; `string'
PUBLIC	??_C@_07ICGMBDOO@Cheek01?$AA@			; `string'
PUBLIC	??_C@_0BB@FMIBAICL@g_DiffuseTexture?$AA@	; `string'
PUBLIC	??_C@_0N@OEHGEODD@g_BoneMatrix?$AA@		; `string'
PUBLIC	??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DM@OGMOEMJ@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAa?$AAn?$AAi?$AAm?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@MLNOEPCA@?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@JHHOCPPA@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA_?$AAe?$AAn?$AAe?$AAm?$AAy?$AA0?$AA1?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@BKCENIHA@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@OCAJEKIC@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAp?$AAh?$AAe?$AAr?$AAe?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@		; `string'
PUBLIC	??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@		; `string'
PUBLIC	??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@		; `string'
PUBLIC	??_C@_0P@BDEIJKBM@g_vCamPosition?$AA@		; `string'
PUBLIC	??_C@_0M@NHGOLGEL@g_vLightDir?$AA@		; `string'
PUBLIC	??_C@_0BA@PCOGIHOF@g_vLightDiffuse?$AA@		; `string'
PUBLIC	??_C@_0BB@IJIIKIH@g_vLightSpecular?$AA@		; `string'
PUBLIC	??_C@_0BA@EALGDMPJ@g_vLightAmbient?$AA@		; `string'
PUBLIC	?__LINE__Var@?0??Create@CEnemy@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA ; `Client::CEnemy::Create'::`1'::__LINE__Var
PUBLIC	??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@ ; `string'
PUBLIC	??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@HGPPJNOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA ; `Client::CEnemy::Clone'::`1'::__LINE__Var
PUBLIC	??_C@_1DC@DLCINEP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_R4CEnemy@Client@@6B@				; Client::CEnemy::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCEnemy@Client@@@8			; Client::CEnemy `RTTI Type Descriptor'
PUBLIC	??_R3CEnemy@Client@@8				; Client::CEnemy::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CEnemy@Client@@8				; Client::CEnemy::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CEnemy@Client@@8			; Client::CEnemy::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@CGameObject@Engine@@8		; Engine::CGameObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCGameObject@Engine@@@8			; Engine::CGameObject `RTTI Type Descriptor'
PUBLIC	??_R3CGameObject@Engine@@8			; Engine::CGameObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CGameObject@Engine@@8			; Engine::CGameObject::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CBase@Engine@@8			; Engine::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVCBase@Engine@@@8			; Engine::CBase `RTTI Type Descriptor'
PUBLIC	??_R3CBase@Engine@@8				; Engine::CBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CBase@Engine@@8				; Engine::CBase::`RTTI Base Class Array'
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@41c80000
PUBLIC	__real@42200000
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	memset:PROC
EXTRN	strcmp:PROC
EXTRN	__imp_MessageBoxW:PROC
EXTRN	__imp__wassert:PROC
EXTRN	??2@YAPEAX_KHPEBDH@Z:PROC			; operator new
EXTRN	??3@YAXPEAXHPEBDH@Z:PROC			; operator delete
EXTRN	__imp_?Release@CBase@Engine@@QEAAKXZ:PROC
EXTRN	__imp_??0CGameObject@Engine@@IEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z:PROC
EXTRN	__imp_??0CGameObject@Engine@@IEAA@AEBV01@@Z:PROC
EXTRN	__imp_??1CGameObject@Engine@@MEAA@XZ:PROC
EXTRN	__imp_?Initialize_Prototype@CGameObject@Engine@@UEAAJXZ:PROC
EXTRN	__imp_?Initialize@CGameObject@Engine@@UEAAJPEAX@Z:PROC
EXTRN	__imp_?Tick@CGameObject@Engine@@UEAAXN@Z:PROC
EXTRN	__imp_?LateTick@CGameObject@Engine@@UEAAXN@Z:PROC
EXTRN	__imp_?Render@CGameObject@Engine@@UEAAJXZ:PROC
EXTRN	__imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z:PROC
EXTRN	__imp_?Free@CGameObject@Engine@@UEAAXXZ:PROC
EXTRN	??_ECEnemy@Client@@UEAAPEAXI@Z:PROC		; Client::CEnemy::`vector deleting destructor'
EXTRN	__imp_?Setup_ShaderMaterialResource@CModel@Engine@@QEAAJPEAVCShader@2@PEBDIW4aiTextureType@@@Z:PROC
EXTRN	__imp_?Setup_BoneMatrices@CModel@Engine@@QEAAJPEAVCShader@2@PEBDI@Z:PROC
EXTRN	__imp_?Setup_Animation@CModel@Engine@@QEAAJI_N@Z:PROC
EXTRN	__imp_?Play_Animation@CModel@Engine@@QEAAJNPEAVCTransform@2@W4TYPE@CAnimation@2@N_N@Z:PROC
EXTRN	__imp_?Render@CModel@Engine@@QEAAJI@Z:PROC
EXTRN	__imp_?GetMeshName@CModel@Engine@@QEAAPEBDI@Z:PROC
EXTRN	__imp_?Get_MeshCount@CModel@Engine@@QEAAIXZ:PROC
EXTRN	__imp_?GetBonePtr@CModel@Engine@@QEAAPEAVCBone@2@PEBD@Z:PROC
EXTRN	__imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z:PROC
EXTRN	__imp_?Get_WorldMatrix@CTransform@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@XZ:PROC
EXTRN	__imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z:PROC
EXTRN	__imp_?Setup_ShaderResource@CTransform@Engine@@QEAAJPEAVCShader@2@PEBD@Z:PROC
EXTRN	__imp_?Add_RenderGroup@CRenderer@Engine@@QEAAJW4RENDER_GROUP@12@PEAVCGameObject@2@@Z:PROC
EXTRN	__imp_?Begin@CShader@Engine@@QEAAJI@Z:PROC
EXTRN	__imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z:PROC
EXTRN	__imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z:PROC
EXTRN	__imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ:PROC
EXTRN	__imp_?Get_Transform_float4x4@CGameInstance@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@W4TRANSFORM_STATE@CPipeLine@2@@Z:PROC
EXTRN	__imp_?Get_CamPosition@CGameInstance@Engine@@QEAA?AUXMFLOAT4@DirectX@@XZ:PROC
EXTRN	__imp_?Input_KeyState_Custom@CGameInstance@Engine@@QEAA?AW4KEY_STATE@2@H@Z:PROC
EXTRN	__imp_?GetLightDesc@CGameInstance@Engine@@QEAAPEBUtagLight_Desc@2@I@Z:PROC
EXTRN	__imp_?AddCollider@CGameInstance@Engine@@QEAAJPEAVCCollider@2@@Z:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN7
	DD	imagerel $LN7+181
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMMATRIX@DirectX@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0XMMATRIX@DirectX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z DD imagerel $LN3
	DD	imagerel $LN3+224
	DD	imagerel $unwind$??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT3@DirectX@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0XMFLOAT3@DirectX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XMFLOAT4@DirectX@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$??0XMFLOAT4@DirectX@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+344
	DD	imagerel $unwind$?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z DD imagerel $LN4
	DD	imagerel $LN4+125
	DD	imagerel $unwind$?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+2098
	DD	imagerel $unwind$?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+235
	DD	imagerel $unwind$??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0CEnemy@Client@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+223
	DD	imagerel $unwind$??0CEnemy@Client@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1CEnemy@Client@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1CEnemy@Client@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize_Prototype@CEnemy@Client@@UEAAJXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?Initialize_Prototype@CEnemy@Client@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Initialize@CEnemy@Client@@UEAAJPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+143
	DD	imagerel $unwind$?Initialize@CEnemy@Client@@UEAAJPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Tick@CEnemy@Client@@UEAAXN@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?Tick@CEnemy@Client@@UEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LateTick@CEnemy@Client@@UEAAXN@Z DD imagerel $LN4
	DD	imagerel $LN4+666
	DD	imagerel $unwind$?LateTick@CEnemy@Client@@UEAAXN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Render@CEnemy@Client@@UEAAJXZ DD imagerel $LN10
	DD	imagerel $LN10+393
	DD	imagerel $unwind$?Render@CEnemy@Client@@UEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RenderGUI@CEnemy@Client@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?RenderGUI@CEnemy@Client@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ DD imagerel $LN4
	DD	imagerel $LN4+233
	DD	imagerel $unwind$?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddComponents@CEnemy@Client@@AEAAJXZ DD imagerel $LN7
	DD	imagerel $LN7+721
	DD	imagerel $unwind$?AddComponents@CEnemy@Client@@AEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetupShaderResources@CEnemy@Client@@AEAAJXZ DD imagerel $LN14
	DD	imagerel $LN14+648
	DD	imagerel $unwind$?SetupShaderResources@CEnemy@Client@@AEAAJXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD imagerel ?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA+61
	DD	imagerel $unwind$?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD imagerel $LN7
	DD	imagerel $LN7+294
	DD	imagerel $unwind$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA DD imagerel ?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
	DD	imagerel ?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA+61
	DD	imagerel $unwind$?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Free@CEnemy@Client@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$?Free@CEnemy@Client@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCEnemy@Client@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_GCEnemy@Client@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0tagColliderDesc@CCollider@Engine@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0tagColliderDesc@CCollider@Engine@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z
pdata	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2CBase@Engine@@8
rdata$r	SEGMENT
??_R2CBase@Engine@@8 DD imagerel ??_R1A@?0A@EA@CBase@Engine@@8 ; Engine::CBase::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CBase@Engine@@8
rdata$r	SEGMENT
??_R3CBase@Engine@@8 DD 00H				; Engine::CBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CBase@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCBase@Engine@@@8
data$r	SEGMENT
??_R0?AVCBase@Engine@@@8 DQ FLAT:??_7type_info@@6B@	; Engine::CBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCBase@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CBase@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CBase@Engine@@8 DD imagerel ??_R0?AVCBase@Engine@@@8 ; Engine::CBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CBase@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R2CGameObject@Engine@@8
rdata$r	SEGMENT
??_R2CGameObject@Engine@@8 DD imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8 ; Engine::CGameObject::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CGameObject@Engine@@8
rdata$r	SEGMENT
??_R3CGameObject@Engine@@8 DD 00H			; Engine::CGameObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2CGameObject@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCGameObject@Engine@@@8
data$r	SEGMENT
??_R0?AVCGameObject@Engine@@@8 DQ FLAT:??_7type_info@@6B@ ; Engine::CGameObject `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCGameObject@Engine@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CGameObject@Engine@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CGameObject@Engine@@8 DD imagerel ??_R0?AVCGameObject@Engine@@@8 ; Engine::CGameObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CGameObject@Engine@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CEnemy@Client@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CEnemy@Client@@8 DD imagerel ??_R0?AVCEnemy@Client@@@8 ; Client::CEnemy::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CEnemy@Client@@8
rdata$r	ENDS
;	COMDAT ??_R2CEnemy@Client@@8
rdata$r	SEGMENT
??_R2CEnemy@Client@@8 DD imagerel ??_R1A@?0A@EA@CEnemy@Client@@8 ; Client::CEnemy::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@CGameObject@Engine@@8
	DD	imagerel ??_R1A@?0A@EA@CBase@Engine@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CEnemy@Client@@8
rdata$r	SEGMENT
??_R3CEnemy@Client@@8 DD 00H				; Client::CEnemy::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2CEnemy@Client@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCEnemy@Client@@@8
data$r	SEGMENT
??_R0?AVCEnemy@Client@@@8 DQ FLAT:??_7type_info@@6B@	; Client::CEnemy `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCEnemy@Client@@', 00H
data$r	ENDS
;	COMDAT ??_R4CEnemy@Client@@6B@
rdata$r	SEGMENT
??_R4CEnemy@Client@@6B@ DD 01H				; Client::CEnemy::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCEnemy@Client@@@8
	DD	imagerel ??_R3CEnemy@Client@@8
	DD	imagerel ??_R4CEnemy@Client@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1DC@DLCINEP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@DLCINEP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 'n'
	DB	00H, 'e', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'C', 00H, 'E', 00H
	DB	'n', 00H, 'e', 00H, 'm', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA DD 0baH ; `Client::CEnemy::Clone'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DE@HGPPJNOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@HGPPJNOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@ DB 'F'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	't', 00H, 'o', 00H, ' ', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, ' ', 00H, ':', 00H, ' ', 00H, 'C', 00H
	DB	'E', 00H, 'n', 00H, 'e', 00H, 'm', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@ DB 'M', 00H
	DB	'e', 00H, 's', 00H, 's', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
CONST	SEGMENT
??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@ DB 'c:\github\f'
	DB	'ramework\client\private\enemy.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??Create@CEnemy@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??Create@CEnemy@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA DD 0aeH ; `Client::CEnemy::Create'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@EALGDMPJ@g_vLightAmbient?$AA@
CONST	SEGMENT
??_C@_0BA@EALGDMPJ@g_vLightAmbient?$AA@ DB 'g_vLightAmbient', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IJIIKIH@g_vLightSpecular?$AA@
CONST	SEGMENT
??_C@_0BB@IJIIKIH@g_vLightSpecular?$AA@ DB 'g_vLightSpecular', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PCOGIHOF@g_vLightDiffuse?$AA@
CONST	SEGMENT
??_C@_0BA@PCOGIHOF@g_vLightDiffuse?$AA@ DB 'g_vLightDiffuse', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NHGOLGEL@g_vLightDir?$AA@
CONST	SEGMENT
??_C@_0M@NHGOLGEL@g_vLightDir?$AA@ DB 'g_vLightDir', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDEIJKBM@g_vCamPosition?$AA@
CONST	SEGMENT
??_C@_0P@BDEIJKBM@g_vCamPosition?$AA@ DB 'g_vCamPosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@
CONST	SEGMENT
??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@ DB 'g_ProjMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@
CONST	SEGMENT
??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@ DB 'g_ViewMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@
CONST	SEGMENT
??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@ DB 'g_WorldMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@OCAJEKIC@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAp?$AAh?$AAe?$AAr?$AAe?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@OCAJEKIC@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAp?$AAh?$AAe?$AAr?$AAe?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 's', 00H, 'p', 00H, 'h', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'l', 00H
	DB	'l', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BKCENIHA@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@BKCENIHA@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'l', 00H
	DB	'l', 00H, 'i', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@JHHOCPPA@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA_?$AAe?$AAn?$AAe?$AAm?$AAy?$AA0?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@JHHOCPPA@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA_?$AAe?$AAn?$AAe?$AAm?$AAy?$AA0?$AA1?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 'm', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, 'l', 00H, '_', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'm', 00H
	DB	'y', 00H, '0', 00H, '1', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@MLNOEPCA@?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@MLNOEPCA@?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 'm', 00H, 'o', 00H, 'd', 00H
	DB	'e', 00H, 'l', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@OGMOEMJ@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAa?$AAn?$AAi?$AAm?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@OGMOEMJ@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAa?$AAn?$AAi?$AAm?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, '_', 00H, 'v', 00H, 't', 00H, 'x', 00H
	DB	'a', 00H, 'n', 00H, 'i', 00H, 'm', 00H, 'm', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, 'l', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 's', 00H, 'h', 00H, 'a', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 's', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 't', 00H, 'o', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@ DB 'c'
	DB	00H, 'o', 00H, 'm', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OEHGEODD@g_BoneMatrix?$AA@
CONST	SEGMENT
??_C@_0N@OEHGEODD@g_BoneMatrix?$AA@ DB 'g_BoneMatrix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FMIBAICL@g_DiffuseTexture?$AA@
CONST	SEGMENT
??_C@_0BB@FMIBAICL@g_DiffuseTexture?$AA@ DB 'g_DiffuseTexture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ICGMBDOO@Cheek01?$AA@
CONST	SEGMENT
??_C@_07ICGMBDOO@Cheek01?$AA@ DB 'Cheek01', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KKFOKGIE@Cheek?$AA@
CONST	SEGMENT
??_C@_05KKFOKGIE@Cheek?$AA@ DB 'Cheek', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HFDDOAAP@Bip001?$AA@
CONST	SEGMENT
??_C@_06HFDDOAAP@Bip001?$AA@ DB 'Bip001', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CEnemy@Client@@6B@
CONST	SEGMENT
??_7CEnemy@Client@@6B@ DQ FLAT:??_R4CEnemy@Client@@6B@	; Client::CEnemy::`vftable'
	DQ	FLAT:??_ECEnemy@Client@@UEAAPEAXI@Z
	DQ	FLAT:?Free@CEnemy@Client@@UEAAXXZ
	DQ	FLAT:?Initialize_Prototype@CEnemy@Client@@UEAAJXZ
	DQ	FLAT:?Initialize@CEnemy@Client@@UEAAJPEAX@Z
	DQ	FLAT:?Tick@CEnemy@Client@@UEAAXN@Z
	DQ	FLAT:?LateTick@CEnemy@Client@@UEAAXN@Z
	DQ	FLAT:?Render@CEnemy@Client@@UEAAJXZ
	DQ	FLAT:?RenderGUI@CEnemy@Client@@UEAAXXZ
	DQ	FLAT:?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@2@T__m128@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@2@T__m128@@@Z@4JA DD 0602H ; `DirectX::XMStoreFloat4'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@ DB 'p'
	DB	00H, 'D', 00H, 'e', 00H, 's', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@2@PEBUXMFLOAT4X4@2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@2@PEBUXMFLOAT4X4@2@@Z@4JA DD 03f5H ; `DirectX::XMLoadFloat4x4'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@ DB 'p', 00H
	DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
CONST	SEGMENT
??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'k', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '8', 00H, '.', 00H, '1', 00H, '\'
	DB	00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H
	DB	'e', 00H, '\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'd', 00H, 'i'
	DB	00H, 'r', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'x', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, '.', 00H, 'i', 00H, 'n', 00H
	DB	'l', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ DD 05062e01H
	DD	01140317H
	DD	0700d0018H
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0tagColliderDesc@CCollider@Engine@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCEnemy@Client@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Free@CEnemy@Client@@UEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD imagerel ?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z+115
	DD	00H
	DD	imagerel ?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z+178
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 025054b19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcName$0 DB 070H ; Client::CEnemy::Clone
	DB	049H
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	063H
	DB	065H
	DB	00H
	ORG $+6
?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcVarDesc DD 028H ; Client::CEnemy::Clone
	DD	08H
	DQ	FLAT:?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcName$0
	ORG $+48
?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcFrameData DD 01H ; Client::CEnemy::Clone
	DD	00H
	DQ	FLAT:?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcVarDesc
$cppxdata$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD imagerel ?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0ffffffffH
	DD	imagerel ?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+115
	DD	00H
	DD	imagerel ?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z+185
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 025054b19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcName$0 DB 070H ; Client::CEnemy::Create
	DB	049H
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	063H
	DB	065H
	DB	00H
	ORG $+6
?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcVarDesc DD 028H ; Client::CEnemy::Create
	DD	08H
	DQ	FLAT:?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcName$0
	ORG $+48
?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcFrameData DD 01H ; Client::CEnemy::Create
	DD	00H
	DQ	FLAT:?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcVarDesc
$cppxdata$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
	DD	0148H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetupShaderResources@CEnemy@Client@@AEAAJXZ DD 025052a01H
	DD	010e2313H
	DD	070070043H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddComponents@CEnemy@Client@@AEAAJXZ DD 035053b19H
	DD	010e3313H
	DD	070070049H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0238H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddComponents@CEnemy@Client@@AEAAJXZ$rtcName$0 DB 054H	; Client::CEnemy::AddComponents
	DB	072H
	DB	061H
	DB	06eH
	DB	073H
	DB	066H
	DB	06fH
	DB	072H
	DB	06dH
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+2
?AddComponents@CEnemy@Client@@AEAAJXZ$rtcName$1 DB 063H	; Client::CEnemy::AddComponents
	DB	06fH
	DB	06cH
	DB	06cH
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+7
?AddComponents@CEnemy@Client@@AEAAJXZ$rtcVarDesc DD 058H ; Client::CEnemy::AddComponents
	DD	030H
	DQ	FLAT:?AddComponents@CEnemy@Client@@AEAAJXZ$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?AddComponents@CEnemy@Client@@AEAAJXZ$rtcName$0
	ORG $+96
?AddComponents@CEnemy@Client@@AEAAJXZ$rtcFrameData DD 02H ; Client::CEnemy::AddComponents
	DD	00H
	DQ	FLAT:?AddComponents@CEnemy@Client@@AEAAJXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ DD 025064119H
	DD	01142319H
	DD	0700d0028H
	DD	0500b600cH
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ$rtcName$0 DB 076H ; Client::CEnemy::GetPosition
	DB	050H
	DB	06fH
	DB	073H
	DB	00H
	ORG $+11
?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ$rtcVarDesc DD 028H ; Client::CEnemy::GetPosition
	DD	010H
	DQ	FLAT:?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ$rtcName$0
	ORG $+48
?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ$rtcFrameData DD 01H ; Client::CEnemy::GetPosition
	DD	00H
	DQ	FLAT:?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RenderGUI@CEnemy@Client@@UEAAXXZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Render@CEnemy@Client@@UEAAJXZ DD 035052a01H
	DD	010e3313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LateTick@CEnemy@Client@@UEAAXN@Z DD 035064219H
	DD	0115331aH
	DD	0700e00b2H
	DD	0500c600dH
	DD	imagerel __GSHandlerCheck
	DD	0588H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?LateTick@CEnemy@Client@@UEAAXN@Z$rtcName$0 DB 061H	; Client::CEnemy::LateTick
	DB	06eH
	DB	069H
	DB	06dH
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+7
?LateTick@CEnemy@Client@@UEAAXN@Z$rtcName$1 DB 074H	; Client::CEnemy::LateTick
	DB	072H
	DB	061H
	DB	06eH
	DB	04dH
	DB	061H
	DB	074H
	DB	072H
	DB	069H
	DB	078H
	DB	00H
	ORG $+5
?LateTick@CEnemy@Client@@UEAAXN@Z$rtcVarDesc DD 060H	; Client::CEnemy::LateTick
	DD	040H
	DQ	FLAT:?LateTick@CEnemy@Client@@UEAAXN@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?LateTick@CEnemy@Client@@UEAAXN@Z$rtcName$0
	ORG $+96
?LateTick@CEnemy@Client@@UEAAXN@Z$rtcFrameData DD 02H	; Client::CEnemy::LateTick
	DD	00H
	DQ	FLAT:?LateTick@CEnemy@Client@@UEAAXN@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Tick@CEnemy@Client@@UEAAXN@Z DD 025053001H
	DD	01142319H
	DD	0700d001dH
	DD	0500cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize@CEnemy@Client@@UEAAJPEAX@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Initialize_Prototype@CEnemy@Client@@UEAAJXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1CEnemy@Client@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CEnemy@Client@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z DD 035053f19H
	DD	010e3313H
	DD	0700701b7H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0da8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcName$0 DB 04dH ; DirectX::XMMatrixMultiply
	DB	031H
	DB	00H
	ORG $+5
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcName$1 DB 06dH ; DirectX::XMMatrixMultiply
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcVarDesc DD 0a0H ; DirectX::XMMatrixMultiply
	DD	040H
	DQ	FLAT:?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcName$1
	DD	040H
	DD	040H
	DQ	FLAT:?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcName$0
	ORG $+96
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcFrameData DD 02H ; DirectX::XMMatrixMultiply
	DD	00H
	DQ	FLAT:?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z DD 015053501H
	DD	01211326H
	DD	0701a0021H
	DD	05019H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z DD 025053601H
	DD	010e2313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z DD 035053b19H
	DD	010e3313H
	DD	070070043H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z$rtcName$0 DB 04dH ; DirectX::XMLoadFloat4x4
	DB	00H
	ORG $+14
?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z$rtcVarDesc DD 040H ; DirectX::XMLoadFloat4x4
	DD	040H
	DQ	FLAT:?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z$rtcName$0
	ORG $+48
?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z$rtcFrameData DD 01H ; DirectX::XMLoadFloat4x4
	DD	00H
	DQ	FLAT:?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT4@DirectX@@QEAA@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT3@DirectX@@QEAA@MMM@Z DD 05053a01H
	DD	01200323H
	DD	070190019H
	DD	05018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMFLOAT3@DirectX@@QEAA@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z DD 035063701H
	DD	010f3314H
	DD	070080042H
	DD	050066007H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z$rtcName$0 DB 04dH	; DirectX::XMMATRIX::operator*
	DB	00H
	ORG $+14
??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z$rtcVarDesc DD 040H ; DirectX::XMMATRIX::operator*
	DD	040H
	DQ	FLAT:??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z$rtcName$0
	ORG $+48
??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z$rtcFrameData DD 01H ; DirectX::XMMATRIX::operator*
	DD	00H
	DQ	FLAT:??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XMMATRIX@DirectX@@QEAA@XZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 025053901H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z PROC ; Engine::Safe_Release<Engine::CCollider * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z ENDP ; Engine::Safe_Release<Engine::CCollider * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z PROC ; Engine::Safe_Release<Engine::CShader * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z ENDP ; Engine::Safe_Release<Engine::CShader * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z PROC ; Engine::Safe_Release<Engine::CModel * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z ENDP ; Engine::Safe_Release<Engine::CModel * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z PROC ; Engine::Safe_Release<Engine::CTransform * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z ENDP ; Engine::Safe_Release<Engine::CTransform * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z PROC ; Engine::Safe_Release<Engine::CRenderer * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z ENDP ; Engine::Safe_Release<Engine::CRenderer * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\engine_template.h
;	COMDAT ??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z
_TEXT	SEGMENT
dwRefCnt$ = 4
classType$ = 256
??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z PROC ; Engine::Safe_Release<Client::CEnemy * __ptr64>, COMDAT

; 18   : 	{

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]

; 19   : 		unsigned long dwRefCnt = 0;

  0002a	c7 45 04 00 00
	00 00		 mov	 DWORD PTR dwRefCnt$[rbp], 0

; 20   : 
; 21   : 		if (nullptr != classType)

  00031	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00038	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003c	74 27		 je	 SHORT $LN2@Safe_Relea

; 22   : 		{
; 23   : 			dwRefCnt = classType->Release();

  0003e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  00045	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Release@CBase@Engine@@QEAAKXZ
  0004e	89 45 04	 mov	 DWORD PTR dwRefCnt$[rbp], eax

; 24   : 
; 25   : 			if (0 == dwRefCnt)

  00051	83 7d 04 00	 cmp	 DWORD PTR dwRefCnt$[rbp], 0
  00055	75 0e		 jne	 SHORT $LN3@Safe_Relea

; 26   : 			{
; 27   : 				classType = nullptr;

  00057	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR classType$[rbp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN3@Safe_Relea:
$LN2@Safe_Relea:

; 28   : 			}
; 29   : 		}
; 30   : 
; 31   : 		return dwRefCnt;

  00065	8b 45 04	 mov	 eax, DWORD PTR dwRefCnt$[rbp]

; 32   : 	}

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z ENDP ; Engine::Safe_Release<Client::CEnemy * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\reference\headers\bone.h
;	COMDAT ?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ PROC ; Engine::CBone::GetCombinedMatrix, COMDAT

; 16   : 	_float4x4 GetCombinedMatrix() const { return m_CombinedMatrix; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00014	48 8b ec	 mov	 rbp, rsp
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00035	48 8b bd e8 00
	00 00		 mov	 rdi, QWORD PTR __$ReturnUdt$[rbp]
  0003c	48 8d b0 9c 01
	00 00		 lea	 rsi, QWORD PTR [rax+412]
  00043	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00048	f3 a4		 rep movsb
  0004a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00051	48 8d a5 c0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+192]
  00058	5f		 pop	 rdi
  00059	5e		 pop	 rsi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ ENDP ; Engine::CBone::GetCombinedMatrix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0tagColliderDesc@CCollider@Engine@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0tagColliderDesc@CCollider@Engine@@QEAA@XZ PROC	; Engine::CCollider::tagColliderDesc::tagColliderDesc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@XZ ; DirectX::XMFLOAT3::XMFLOAT3
  0003d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00044	48 83 c0 14	 add	 rax, 20
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@XZ ; DirectX::XMFLOAT3::XMFLOAT3
  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 83 c0 20	 add	 rax, 32			; 00000020H
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@XZ ; DirectX::XMFLOAT3::XMFLOAT3
  00063	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??0tagColliderDesc@CCollider@Engine@@QEAA@XZ ENDP	; Engine::CCollider::tagColliderDesc::tagColliderDesc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCEnemy@Client@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GCEnemy@Client@@UEAAPEAXI@Z PROC			; Client::CEnemy::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1CEnemy@Client@@UEAA@XZ ; Client::CEnemy::~CEnemy
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba b0 00 00 00	 mov	 edx, 176		; 000000b0H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_GCEnemy@Client@@UEAAPEAXI@Z ENDP			; Client::CEnemy::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Free@CEnemy@Client@@UEAAXXZ
_TEXT	SEGMENT
this$ = 224
?Free@CEnemy@Client@@UEAAXXZ PROC			; Client::CEnemy::Free, COMDAT

; 198  : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 199  : 	__super::Free();

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Free@CGameObject@Engine@@UEAAXXZ

; 200  : 
; 201  : 	Safe_Release(renderer);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 78	 add	 rax, 120		; 00000078H
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCRenderer@Engine@@@Engine@@YAKAEAPEAVCRenderer@0@@Z ; Engine::Safe_Release<Engine::CRenderer * __ptr64>

; 202  : 	Safe_Release(transform);

  0004a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00051	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCTransform@Engine@@@Engine@@YAKAEAPEAVCTransform@0@@Z ; Engine::Safe_Release<Engine::CTransform * __ptr64>

; 203  : 	Safe_Release(model);

  0005f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00066	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCModel@Engine@@@Engine@@YAKAEAPEAVCModel@0@@Z ; Engine::Safe_Release<Engine::CModel * __ptr64>

; 204  : 	Safe_Release(shader);

  00074	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007b	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCShader@Engine@@@Engine@@YAKAEAPEAVCShader@0@@Z ; Engine::Safe_Release<Engine::CShader * __ptr64>

; 205  : 	Safe_Release(collider);

  00089	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00090	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00096	48 8b c8	 mov	 rcx, rax
  00099	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCCollider@Engine@@@Engine@@YAKAEAPEAVCCollider@0@@Z ; Engine::Safe_Release<Engine::CCollider * __ptr64>

; 206  : }

  0009e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000a5	5f		 pop	 rdi
  000a6	5d		 pop	 rbp
  000a7	c3		 ret	 0
?Free@CEnemy@Client@@UEAAXXZ ENDP			; Client::CEnemy::Free
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z
_TEXT	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z PROC ; Client::CEnemy::Clone, COMDAT

; 186  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 187  : 	CEnemy* pInstance = new CEnemy(*this);

  0004b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  00051	ff c0		 inc	 eax
  00053	44 8b c8	 mov	 r9d, eax
  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
  0005d	ba 01 00 00 00	 mov	 edx, 1
  00062	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H
  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_KHPEBDH@Z	; operator new
  0006c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00073	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0007b	74 1c		 je	 SHORT $LN4@Clone
  0007d	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00084	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  0008b	e8 00 00 00 00	 call	 ??0CEnemy@Client@@QEAA@AEBV01@@Z ; Client::CEnemy::CEnemy
  00090	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00097	eb 0b		 jmp	 SHORT $LN5@Clone
$LN4@Clone:
  00099	48 c7 85 38 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv83[rbp], 0
$LN5@Clone:
  000a4	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv83[rbp]
  000ab	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000b2	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000b9	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 188  : 	if (FAILED(pInstance->Initialize(pArg)))

  000bd	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR pArg$[rbp]
  000c4	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c8	e8 00 00 00 00	 call	 ?Initialize@CEnemy@Client@@UEAAJPEAX@Z ; Client::CEnemy::Initialize
  000cd	85 c0		 test	 eax, eax
  000cf	7d 22		 jge	 SHORT $LN2@Clone

; 189  : 	{
; 190  : 		MSG_BOX("Failed to Clone : CEnemy");

  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DC@DLCINEP@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAl?$AAo?$AAn?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@
  000e2	33 c9		 xor	 ecx, ecx
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxW

; 191  : 		Safe_Release(pInstance);

  000ea	48 8d 4d 08	 lea	 rcx, QWORD PTR pInstance$[rbp]
  000ee	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z ; Engine::Safe_Release<Client::CEnemy * __ptr64>
$LN2@Clone:

; 192  : 	}
; 193  : 
; 194  : 	return pInstance;

  000f3	48 8b 45 08	 mov	 rax, QWORD PTR pInstance$[rbp]

; 195  : }

  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z$rtcFrameData
  00105	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010a	48 8b c7	 mov	 rax, rdi
  0010d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00114	48 33 cd	 xor	 rcx, rbp
  00117	e8 00 00 00 00	 call	 __security_check_cookie
  0011c	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00123	5f		 pop	 rdi
  00124	5d		 pop	 rbp
  00125	c3		 ret	 0
?Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z ENDP ; Client::CEnemy::Clone
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA PROC ; `Client::CEnemy::Clone'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA ENDP ; `Client::CEnemy::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv83 = 312
__$ArrayPad$ = 320
this$ = 368
pArg$ = 376
?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA PROC ; `Client::CEnemy::Clone'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Clone@CEnemy@Client@@UEAAPEAVCGameObject@Engine@@PEAX@Z@4HA ENDP ; `Client::CEnemy::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z PROC ; Client::CEnemy::Create, COMDAT

; 174  : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 c7 85 28 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T6[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 40 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 175  : 	CEnemy*	pInstance = new CEnemy(pDevice, pContext);

  0004b	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??Create@CEnemy@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  00051	ff c0		 inc	 eax
  00053	44 8b c8	 mov	 r9d, eax
  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
  0005d	ba 01 00 00 00	 mov	 edx, 1
  00062	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H
  00067	e8 00 00 00 00	 call	 ??2@YAPEAX_KHPEBDH@Z	; operator new
  0006c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00073	48 83 bd 08 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0007b	74 23		 je	 SHORT $LN4@Create
  0007d	4c 8b 85 78 01
	00 00		 mov	 r8, QWORD PTR pContext$[rbp]
  00084	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR pDevice$[rbp]
  0008b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00092	e8 00 00 00 00	 call	 ??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ; Client::CEnemy::CEnemy
  00097	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  0009e	eb 0b		 jmp	 SHORT $LN5@Create
$LN4@Create:
  000a0	48 c7 85 38 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv84[rbp], 0
$LN5@Create:
  000ab	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv84[rbp]
  000b2	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000b9	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000c0	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 176  : 	if (FAILED(pInstance->Initialize_Prototype()))

  000c4	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c8	e8 00 00 00 00	 call	 ?Initialize_Prototype@CEnemy@Client@@UEAAJXZ ; Client::CEnemy::Initialize_Prototype
  000cd	85 c0		 test	 eax, eax
  000cf	7d 22		 jge	 SHORT $LN2@Create

; 177  : 	{
; 178  : 		MSG_BOX("Failed to Create : CEnemy");

  000d1	45 33 c9	 xor	 r9d, r9d
  000d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1BA@HHOMBECE@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@HGPPJNOD@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AA?3?$AA?5?$AAC?$AAE?$AAn?$AAe?$AAm?$AAy?$AA?$AA@
  000e2	33 c9		 xor	 ecx, ecx
  000e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_MessageBoxW

; 179  : 		Safe_Release(pInstance);

  000ea	48 8d 4d 08	 lea	 rcx, QWORD PTR pInstance$[rbp]
  000ee	e8 00 00 00 00	 call	 ??$Safe_Release@PEAVCEnemy@Client@@@Engine@@YAKAEAPEAVCEnemy@Client@@@Z ; Engine::Safe_Release<Client::CEnemy * __ptr64>
$LN2@Create:

; 180  : 	}
; 181  : 
; 182  : 	return pInstance;

  000f3	48 8b 45 08	 mov	 rax, QWORD PTR pInstance$[rbp]

; 183  : }

  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z$rtcFrameData
  00105	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010a	48 8b c7	 mov	 rax, rdi
  0010d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00114	48 33 cd	 xor	 rcx, rbp
  00117	e8 00 00 00 00	 call	 __security_check_cookie
  0011c	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00123	5f		 pop	 rdi
  00124	5d		 pop	 rbp
  00125	c3		 ret	 0
?Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ENDP ; Client::CEnemy::Create
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CEnemy::Create'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Create@CEnemy@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CEnemy::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
pInstance$ = 8
$T4 = 232
$T5 = 264
$T6 = 296
tv84 = 312
__$ArrayPad$ = 320
pDevice$ = 368
pContext$ = 376
?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA PROC ; `Client::CEnemy::Create'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	44 8b 0d 00 00
	00 00		 mov	 r9d, DWORD PTR ?__LINE__Var@?0??Create@CEnemy@Client@@SAPEAV23@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4JA
  0001b	41 ff c1	 inc	 r9d
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0CN@NPIBGABL@c?3?2github?2framework?2client?2priva@
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00031	e8 00 00 00 00	 call	 ??3@YAXPEAXHPEBDH@Z	; operator delete
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?dtor$0@?0??Create@CEnemy@Client@@SAPEAV12@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z@4HA ENDP ; `Client::CEnemy::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?SetupShaderResources@CEnemy@Client@@AEAAJXZ
_TEXT	SEGMENT
pInstance$ = 8
LightDesc$ = 40
$T1 = 260
$T2 = 356
$T3 = 452
this$ = 528
?SetupShaderResources@CEnemy@Client@@AEAAJXZ PROC	; Client::CEnemy::SetupShaderResources, COMDAT

; 136  : {

$LN14:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]

; 137  : 	if (nullptr == shader)

  0002a	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00039	75 0a		 jne	 SHORT $LN2@SetupShade

; 138  : 		return E_FAIL;

  0003b	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00040	e9 39 02 00 00	 jmp	 $LN1@SetupShade
$LN2@SetupShade:

; 139  : 
; 140  : 	CGameInstance* pInstance = CGameInstance::GetInstance();

  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ
  0004b	48 89 45 08	 mov	 QWORD PTR pInstance$[rbp], rax

; 141  : 
; 142  : 	if (pInstance->Input_KeyState_Custom(DIK_PGUP) == KEY_STATE::TAP)

  0004f	ba c9 00 00 00	 mov	 edx, 201		; 000000c9H
  00054	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Input_KeyState_Custom@CGameInstance@Engine@@QEAA?AW4KEY_STATE@2@H@Z
  0005e	83 f8 01	 cmp	 eax, 1
  00061	75 1c		 jne	 SHORT $LN3@SetupShade

; 143  : 		animation++;

  00063	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [rax+168]
  00070	ff c0		 inc	 eax
  00072	48 8b 8d 10 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00079	89 81 a8 00 00
	00		 mov	 DWORD PTR [rcx+168], eax
$LN3@SetupShade:

; 144  : 
; 145  : 	if (FAILED(transform->Setup_ShaderResource(shader, "g_WorldMatrix")))

  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0O@PFNLPMLD@g_WorldMatrix?$AA@
  00086	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008d	48 8b 90 90 00
	00 00		 mov	 rdx, QWORD PTR [rax+144]
  00094	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009b	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000a2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Setup_ShaderResource@CTransform@Engine@@QEAAJPEAVCShader@2@PEBD@Z
  000a8	85 c0		 test	 eax, eax
  000aa	7d 0a		 jge	 SHORT $LN4@SetupShade

; 146  : 		return E_FAIL;

  000ac	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  000b1	e9 c8 01 00 00	 jmp	 $LN1@SetupShade
$LN4@SetupShade:

; 147  : 
; 148  : 	if (FAILED(shader->SetMatrix("g_ViewMatrix", &pInstance->Get_Transform_float4x4(CPipeLine::TS_VIEW))))

  000b6	45 33 c0	 xor	 r8d, r8d
  000b9	48 8d 95 04 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  000c0	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_Transform_float4x4@CGameInstance@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@W4TRANSFORM_STATE@CPipeLine@2@@Z
  000ca	4c 8b c0	 mov	 r8, rax
  000cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@ELIMCBLG@g_ViewMatrix?$AA@
  000d4	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000db	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  000e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z
  000e8	85 c0		 test	 eax, eax
  000ea	7d 0a		 jge	 SHORT $LN5@SetupShade

; 149  : 		return E_FAIL;

  000ec	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  000f1	e9 88 01 00 00	 jmp	 $LN1@SetupShade
$LN5@SetupShade:

; 150  : 
; 151  : 	if (FAILED(shader->SetMatrix("g_ProjMatrix", &pInstance->Get_Transform_float4x4(CPipeLine::TS_PROJ))))

  000f6	41 b8 01 00 00
	00		 mov	 r8d, 1
  000fc	48 8d 95 64 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  00103	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  00107	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_Transform_float4x4@CGameInstance@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@W4TRANSFORM_STATE@CPipeLine@2@@Z
  0010d	4c 8b c0	 mov	 r8, rax
  00110	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@OOHDPIO@g_ProjMatrix?$AA@
  00117	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011e	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00125	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetMatrix@CShader@Engine@@QEAAJPEBDPEBUXMFLOAT4X4@DirectX@@@Z
  0012b	85 c0		 test	 eax, eax
  0012d	7d 0a		 jge	 SHORT $LN6@SetupShade

; 152  : 		return E_FAIL;

  0012f	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00134	e9 45 01 00 00	 jmp	 $LN1@SetupShade
$LN6@SetupShade:

; 153  : 
; 154  : 	if (FAILED(shader->SetRawValue("g_vCamPosition", &pInstance->Get_CamPosition(), sizeof(_float3))))

  00139	48 8d 95 c4 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  00140	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  00144	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_CamPosition@CGameInstance@Engine@@QEAA?AUXMFLOAT4@DirectX@@XZ
  0014a	41 b9 0c 00 00
	00		 mov	 r9d, 12
  00150	4c 8b c0	 mov	 r8, rax
  00153	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@BDEIJKBM@g_vCamPosition?$AA@
  0015a	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00161	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00168	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z
  0016e	85 c0		 test	 eax, eax
  00170	7d 0a		 jge	 SHORT $LN7@SetupShade

; 155  : 		return E_FAIL;

  00172	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00177	e9 02 01 00 00	 jmp	 $LN1@SetupShade
$LN7@SetupShade:

; 156  : 
; 157  : 	const LIGHT_DESC* LightDesc = pInstance->GetLightDesc(0);

  0017c	33 d2		 xor	 edx, edx
  0017e	48 8b 4d 08	 mov	 rcx, QWORD PTR pInstance$[rbp]
  00182	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetLightDesc@CGameInstance@Engine@@QEAAPEBUtagLight_Desc@2@I@Z
  00188	48 89 45 28	 mov	 QWORD PTR LightDesc$[rbp], rax

; 158  : 	if (nullptr == LightDesc)

  0018c	48 83 7d 28 00	 cmp	 QWORD PTR LightDesc$[rbp], 0
  00191	75 0a		 jne	 SHORT $LN8@SetupShade

; 159  : 		return E_FAIL;

  00193	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00198	e9 e1 00 00 00	 jmp	 $LN1@SetupShade
$LN8@SetupShade:

; 160  : 
; 161  : 	if (FAILED(shader->SetRawValue("g_vLightDir", &LightDesc->vDirection, sizeof(_float4))))

  0019d	48 8b 45 28	 mov	 rax, QWORD PTR LightDesc$[rbp]
  001a1	48 83 c0 04	 add	 rax, 4
  001a5	41 b9 10 00 00
	00		 mov	 r9d, 16
  001ab	4c 8b c0	 mov	 r8, rax
  001ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@NHGOLGEL@g_vLightDir?$AA@
  001b5	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001bc	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  001c3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z
  001c9	85 c0		 test	 eax, eax
  001cb	7d 0a		 jge	 SHORT $LN9@SetupShade

; 162  : 		return E_FAIL;

  001cd	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  001d2	e9 a7 00 00 00	 jmp	 $LN1@SetupShade
$LN9@SetupShade:

; 163  : 	if (FAILED(shader->SetRawValue("g_vLightDiffuse", &LightDesc->vDiffuse, sizeof(_float4))))

  001d7	48 8b 45 28	 mov	 rax, QWORD PTR LightDesc$[rbp]
  001db	48 83 c0 28	 add	 rax, 40			; 00000028H
  001df	41 b9 10 00 00
	00		 mov	 r9d, 16
  001e5	4c 8b c0	 mov	 r8, rax
  001e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@PCOGIHOF@g_vLightDiffuse?$AA@
  001ef	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001f6	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  001fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z
  00203	85 c0		 test	 eax, eax
  00205	7d 07		 jge	 SHORT $LN10@SetupShade

; 164  : 		return E_FAIL;

  00207	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0020c	eb 70		 jmp	 SHORT $LN1@SetupShade
$LN10@SetupShade:

; 165  : 	if (FAILED(shader->SetRawValue("g_vLightSpecular", &LightDesc->vSpecular, sizeof(_float4))))

  0020e	48 8b 45 28	 mov	 rax, QWORD PTR LightDesc$[rbp]
  00212	48 83 c0 48	 add	 rax, 72			; 00000048H
  00216	41 b9 10 00 00
	00		 mov	 r9d, 16
  0021c	4c 8b c0	 mov	 r8, rax
  0021f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@IJIIKIH@g_vLightSpecular?$AA@
  00226	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0022d	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00234	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z
  0023a	85 c0		 test	 eax, eax
  0023c	7d 07		 jge	 SHORT $LN11@SetupShade

; 166  : 		return E_FAIL;

  0023e	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00243	eb 39		 jmp	 SHORT $LN1@SetupShade
$LN11@SetupShade:

; 167  : 	if (FAILED(shader->SetRawValue("g_vLightAmbient", &LightDesc->vAmbient, sizeof(_float4))))

  00245	48 8b 45 28	 mov	 rax, QWORD PTR LightDesc$[rbp]
  00249	48 83 c0 38	 add	 rax, 56			; 00000038H
  0024d	41 b9 10 00 00
	00		 mov	 r9d, 16
  00253	4c 8b c0	 mov	 r8, rax
  00256	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@EALGDMPJ@g_vLightAmbient?$AA@
  0025d	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00264	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0026b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?SetRawValue@CShader@Engine@@QEAAJPEBDPEBXI@Z
  00271	85 c0		 test	 eax, eax
  00273	7d 07		 jge	 SHORT $LN12@SetupShade

; 168  : 		return E_FAIL;

  00275	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0027a	eb 02		 jmp	 SHORT $LN1@SetupShade
$LN12@SetupShade:

; 169  : 
; 170  : 	return S_OK;

  0027c	33 c0		 xor	 eax, eax
$LN1@SetupShade:

; 171  : }

  0027e	48 8d a5 f8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+504]
  00285	5f		 pop	 rdi
  00286	5d		 pop	 rbp
  00287	c3		 ret	 0
?SetupShaderResources@CEnemy@Client@@AEAAJXZ ENDP	; Client::CEnemy::SetupShaderResources
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?AddComponents@CEnemy@Client@@AEAAJXZ
_TEXT	SEGMENT
TransformDesc$ = 8
collDesc$ = 40
pGameInstance$ = 120
$T5 = 352
$T6 = 388
$T7 = 420
$T8 = 452
$T9 = 496
__$ArrayPad$ = 520
this$ = 560
?AddComponents@CEnemy@Client@@AEAAJXZ PROC		; Client::CEnemy::AddComponents, COMDAT

; 103  : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 48 02
	00 00		 sub	 rsp, 584		; 00000248H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 92 00 00 00	 mov	 ecx, 146		; 00000092H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR [rsp+616]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 08 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 104  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, TEXT("proto_com_renderer"), TEXT("com_renderer"), (CComponent**)&renderer)))

  0003b	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 83 c0 78	 add	 rax, 120		; 00000078H
  00046	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  0004f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00054	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BK@GIOMOCNE@?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
  0005b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1CG@COFFFCLL@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAr?$AAe?$AAn?$AAd?$AAe?$AAr?$AAe?$AAr?$AA?$AA@
  00062	33 d2		 xor	 edx, edx
  00064	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  00071	85 c0		 test	 eax, eax
  00073	7d 0a		 jge	 SHORT $LN2@AddCompone

; 105  : 		return E_FAIL;

  00075	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0007a	e9 23 02 00 00	 jmp	 $LN1@AddCompone
$LN2@AddCompone:

; 106  : 
; 107  : 	CTransform::TRANSFORM_DESC TransformDesc;
; 108  : 	ZeroMemory(&TransformDesc, sizeof(CTransform::TRANSFORM_DESC));

  0007f	41 b8 08 00 00
	00		 mov	 r8d, 8
  00085	33 d2		 xor	 edx, edx
  00087	48 8d 4d 08	 lea	 rcx, QWORD PTR TransformDesc$[rbp]
  0008b	e8 00 00 00 00	 call	 memset

; 109  : 
; 110  : 	if (FAILED(CGameObject::Add_Component(LEVEL_STATIC, TEXT("proto_com_transform"), TEXT("com_transform"), (CComponent**)&transform, &TransformDesc)))

  00090	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  0009d	48 8d 4d 08	 lea	 rcx, QWORD PTR TransformDesc$[rbp]
  000a1	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000a6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ab	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BM@CJMPMHDD@?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
  000b2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1CI@MLEFGO@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAt?$AAr?$AAa?$AAn?$AAs?$AAf?$AAo?$AAr?$AAm?$AA?$AA@
  000b9	33 d2		 xor	 edx, edx
  000bb	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  000c8	85 c0		 test	 eax, eax
  000ca	7d 0a		 jge	 SHORT $LN3@AddCompone

; 111  : 		return E_FAIL;

  000cc	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  000d1	e9 cc 01 00 00	 jmp	 $LN1@AddCompone
$LN3@AddCompone:

; 112  : 
; 113  : 	if (FAILED(CGameObject::Add_Component(LEVEL_GAMEPLAY, TEXT("proto_com_shader_vtxanimmodel"), TEXT("com_shader"), (CComponent**)&shader)))

  000d6	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000dd	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  000e3	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  000ec	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000f1	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BG@GGOMMBBL@?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?$AA@
  000f8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1DM@OGMOEMJ@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAh?$AAa?$AAd?$AAe?$AAr?$AA_?$AAv?$AAt?$AAx?$AAa?$AAn?$AAi?$AAm?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@
  000ff	ba 03 00 00 00	 mov	 edx, 3
  00104	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0010b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  00111	85 c0		 test	 eax, eax
  00113	7d 0a		 jge	 SHORT $LN4@AddCompone

; 114  : 		return E_FAIL;

  00115	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0011a	e9 83 01 00 00	 jmp	 $LN1@AddCompone
$LN4@AddCompone:

; 115  : 
; 116  : 	if (FAILED(CGameObject::Add_Component(LEVEL_GAMEPLAY, TEXT("proto_com_model_enemy01"), TEXT("com_model"), (CComponent**)&model)))

  0011f	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00126	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  0012c	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR [rsp+40], 0
  00135	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0013a	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BE@MLNOEPCA@?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA?$AA@
  00141	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1DA@JHHOCPPA@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAm?$AAo?$AAd?$AAe?$AAl?$AA_?$AAe?$AAn?$AAe?$AAm?$AAy?$AA0?$AA1?$AA?$AA@
  00148	ba 03 00 00 00	 mov	 edx, 3
  0014d	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00154	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z
  0015a	85 c0		 test	 eax, eax
  0015c	7d 0a		 jge	 SHORT $LN5@AddCompone

; 117  : 		return E_FAIL;

  0015e	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00163	e9 3a 01 00 00	 jmp	 $LN1@AddCompone
$LN5@AddCompone:

; 118  : 
; 119  : 	transform->Set_State(CTransform::STATE_POSITION, XMVectorSet(25.f, 0.f, 40.f, 1.f));

  00168	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f800000
  00170	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@42200000
  00178	0f 57 c9	 xorps	 xmm1, xmm1
  0017b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c80000
  00183	e8 00 00 00 00	 call	 ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
  00188	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  0018f	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  00196	0f 29 85 f0 01
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  0019d	4c 8d 85 f0 01
	00 00		 lea	 r8, QWORD PTR $T9[rbp]
  001a4	ba 03 00 00 00	 mov	 edx, 3
  001a9	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001b0	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  001b7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Set_State@CTransform@Engine@@QEAAXW4STATE@12@T__m128@@@Z

; 120  : 
; 121  : 	CCollider::COLLIDER_DESC collDesc;

  001bd	48 8d 4d 28	 lea	 rcx, QWORD PTR collDesc$[rbp]
  001c1	e8 00 00 00 00	 call	 ??0tagColliderDesc@CCollider@Engine@@QEAA@XZ

; 122  : 	collDesc.owner = this;

  001c6	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  001cd	48 89 45 28	 mov	 QWORD PTR collDesc$[rbp], rax

; 123  : 	collDesc.vCenter = _float3(0.f, 0.f, 0.f);

  001d1	0f 57 db	 xorps	 xmm3, xmm3
  001d4	0f 57 d2	 xorps	 xmm2, xmm2
  001d7	0f 57 c9	 xorps	 xmm1, xmm1
  001da	48 8d 8d 84 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  001e1	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  001e6	48 8b d0	 mov	 rdx, rax
  001e9	48 8d 4d 30	 lea	 rcx, QWORD PTR collDesc$[rbp+8]
  001ed	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z ; DirectX::XMFLOAT3::operator=

; 124  : 	collDesc.vExtants = _float3(0.5f, 0.5f, 0.5f);

  001f2	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@3f000000
  001fa	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@3f000000
  00202	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  0020a	48 8d 8d a4 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00211	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00216	48 8b d0	 mov	 rdx, rax
  00219	48 8d 4d 3c	 lea	 rcx, QWORD PTR collDesc$[rbp+20]
  0021d	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z ; DirectX::XMFLOAT3::operator=

; 125  : 	collDesc.vRotaion = _float3(0.f, 0.f, 0.f);

  00222	0f 57 db	 xorps	 xmm3, xmm3
  00225	0f 57 d2	 xorps	 xmm2, xmm2
  00228	0f 57 c9	 xorps	 xmm1, xmm1
  0022b	48 8d 8d c4 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  00232	e8 00 00 00 00	 call	 ??0XMFLOAT3@DirectX@@QEAA@MMM@Z ; DirectX::XMFLOAT3::XMFLOAT3
  00237	48 8b d0	 mov	 rdx, rax
  0023a	48 8d 4d 48	 lea	 rcx, QWORD PTR collDesc$[rbp+32]
  0023e	e8 00 00 00 00	 call	 ??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z ; DirectX::XMFLOAT3::operator=

; 126  : 
; 127  : 	(CGameObject::Add_Component(LEVEL_GAMEPLAY, TEXT("proto_com_sphere_collider"), TEXT("com_collider"), (CComponent**)&collider, &collDesc));

  00243	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0024a	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00250	48 8d 4d 28	 lea	 rcx, QWORD PTR collDesc$[rbp]
  00254	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00259	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0025e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_1BK@BKCENIHA@?$AAc?$AAo?$AAm?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@
  00265	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1DE@OCAJEKIC@?$AAp?$AAr?$AAo?$AAt?$AAo?$AA_?$AAc?$AAo?$AAm?$AA_?$AAs?$AAp?$AAh?$AAe?$AAr?$AAe?$AA_?$AAc?$AAo?$AAl?$AAl?$AAi?$AAd?$AAe?$AAr?$AA?$AA@
  0026c	ba 03 00 00 00	 mov	 edx, 3
  00271	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00278	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_Component@CGameObject@Engine@@IEAAJIPEB_W0PEAPEAVCComponent@2@PEAX@Z

; 128  : 
; 129  : 	CGameInstance* pGameInstance = CGameInstance::GetInstance();

  0027e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetInstance@CGameInstance@Engine@@SAPEAV12@XZ
  00284	48 89 45 78	 mov	 QWORD PTR pGameInstance$[rbp], rax

; 130  : 	pGameInstance->AddCollider(collider);

  00288	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0028f	48 8b 90 98 00
	00 00		 mov	 rdx, QWORD PTR [rax+152]
  00296	48 8b 4d 78	 mov	 rcx, QWORD PTR pGameInstance$[rbp]
  0029a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?AddCollider@CGameInstance@Engine@@QEAAJPEAVCCollider@2@@Z

; 131  : 
; 132  : 	return S_OK;

  002a0	33 c0		 xor	 eax, eax
$LN1@AddCompone:

; 133  : }

  002a2	48 8b f8	 mov	 rdi, rax
  002a5	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  002a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddComponents@CEnemy@Client@@AEAAJXZ$rtcFrameData
  002b0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  002b5	48 8b c7	 mov	 rax, rdi
  002b8	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  002bf	48 33 cd	 xor	 rcx, rbp
  002c2	e8 00 00 00 00	 call	 __security_check_cookie
  002c7	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  002ce	5f		 pop	 rdi
  002cf	5d		 pop	 rbp
  002d0	c3		 ret	 0
?AddComponents@CEnemy@Client@@AEAAJXZ ENDP		; Client::CEnemy::AddComponents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ
_TEXT	SEGMENT
vPos$ = 8
$T4 = 256
__$ArrayPad$ = 280
this$ = 320
__$ReturnUdt$ = 328
?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ PROC ; Client::CEnemy::GetPosition, COMDAT

; 92   : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec 40 01
	00 00		 sub	 rsp, 320		; 00000140H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00030	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00037	48 33 c5	 xor	 rax, rbp
  0003a	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 93   : 	if (transform == nullptr)

  00041	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00050	75 15		 jne	 SHORT $LN2@GetPositio

; 94   : 		return _float4();

  00052	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00059	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QEAA@XZ ; DirectX::XMFLOAT4::XMFLOAT4
  0005e	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00065	eb 52		 jmp	 SHORT $LN1@GetPositio
$LN2@GetPositio:

; 95   : 
; 96   : 	_float4 vPos;

  00067	48 8d 4d 08	 lea	 rcx, QWORD PTR vPos$[rbp]
  0006b	e8 00 00 00 00	 call	 ??0XMFLOAT4@DirectX@@QEAA@XZ ; DirectX::XMFLOAT4::XMFLOAT4

; 97   : 	XMStoreFloat4(&vPos, transform->Get_State(CTransform::STATE_POSITION));

  00070	41 b8 03 00 00
	00		 mov	 r8d, 3
  00076	48 8d 95 00 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0007d	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_State@CTransform@Engine@@QEAA?AT__m128@@W4STATE@12@@Z
  00091	0f 10 08	 movups	 xmm1, XMMWORD PTR [rax]
  00094	48 8d 4d 08	 lea	 rcx, QWORD PTR vPos$[rbp]
  00098	e8 00 00 00 00	 call	 ?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z ; DirectX::XMStoreFloat4

; 98   : 
; 99   : 	return vPos;

  0009d	48 8d 45 08	 lea	 rax, QWORD PTR vPos$[rbp]
  000a1	48 8b bd 48 01
	00 00		 mov	 rdi, QWORD PTR __$ReturnUdt$[rbp]
  000a8	48 8b f0	 mov	 rsi, rax
  000ab	b9 10 00 00 00	 mov	 ecx, 16
  000b0	f3 a4		 rep movsb
  000b2	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@GetPositio:

; 100  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ$rtcFrameData
  000c7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cc	48 8b c7	 mov	 rax, rdi
  000cf	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000d6	48 33 cd	 xor	 rcx, rbp
  000d9	e8 00 00 00 00	 call	 __security_check_cookie
  000de	48 8d a5 20 01
	00 00		 lea	 rsp, QWORD PTR [rbp+288]
  000e5	5f		 pop	 rdi
  000e6	5e		 pop	 rsi
  000e7	5d		 pop	 rbp
  000e8	c3		 ret	 0
?GetPosition@CEnemy@Client@@QEAA?AUXMFLOAT4@DirectX@@XZ ENDP ; Client::CEnemy::GetPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?RenderGUI@CEnemy@Client@@UEAAXXZ
_TEXT	SEGMENT
this$ = 224
?RenderGUI@CEnemy@Client@@UEAAXXZ PROC			; Client::CEnemy::RenderGUI, COMDAT

; 88   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]

; 89   : }

  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?RenderGUI@CEnemy@Client@@UEAAXXZ ENDP			; Client::CEnemy::RenderGUI
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Render@CEnemy@Client@@UEAAJXZ
_TEXT	SEGMENT
MeshCount$ = 4
i$1 = 36
this$ = 288
?Render@CEnemy@Client@@UEAAJXZ PROC			; Client::CEnemy::Render, COMDAT

; 64   : {

$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]

; 65   : 	if (FAILED(__super::Render()))

  0002a	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Render@CGameObject@Engine@@UEAAJXZ
  00037	85 c0		 test	 eax, eax
  00039	7d 0a		 jge	 SHORT $LN5@Render

; 66   : 		return E_FAIL;

  0003b	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00040	e9 3a 01 00 00	 jmp	 $LN1@Render
$LN5@Render:

; 67   : 
; 68   : 	if (FAILED(SetupShaderResources()))

  00045	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?SetupShaderResources@CEnemy@Client@@AEAAJXZ ; Client::CEnemy::SetupShaderResources
  00051	85 c0		 test	 eax, eax
  00053	7d 0a		 jge	 SHORT $LN6@Render

; 69   : 		return E_FAIL;

  00055	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0005a	e9 20 01 00 00	 jmp	 $LN1@Render
$LN6@Render:

; 70   : 
; 71   : 	_uint MeshCount = model->Get_MeshCount();

  0005f	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00066	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_MeshCount@CModel@Engine@@QEAAIXZ
  00073	89 45 04	 mov	 DWORD PTR MeshCount$[rbp], eax

; 72   : 	for (_uint i = 0; i < MeshCount; ++i)

  00076	c7 45 24 00 00
	00 00		 mov	 DWORD PTR i$1[rbp], 0
  0007d	eb 08		 jmp	 SHORT $LN4@Render
$LN2@Render:
  0007f	8b 45 24	 mov	 eax, DWORD PTR i$1[rbp]
  00082	ff c0		 inc	 eax
  00084	89 45 24	 mov	 DWORD PTR i$1[rbp], eax
$LN4@Render:
  00087	8b 45 04	 mov	 eax, DWORD PTR MeshCount$[rbp]
  0008a	39 45 24	 cmp	 DWORD PTR i$1[rbp], eax
  0008d	0f 83 ea 00 00
	00		 jae	 $LN3@Render

; 73   : 	{
; 74   : 		if (!strcmp("Cheek", model->GetMeshName(i)) || !strcmp("Cheek01", model->GetMeshName(i)))

  00093	8b 55 24	 mov	 edx, DWORD PTR i$1[rbp]
  00096	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009d	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetMeshName@CModel@Engine@@QEAAPEBDI@Z
  000aa	48 8b d0	 mov	 rdx, rax
  000ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05KKFOKGIE@Cheek?$AA@
  000b4	e8 00 00 00 00	 call	 strcmp
  000b9	85 c0		 test	 eax, eax
  000bb	74 2a		 je	 SHORT $LN8@Render
  000bd	8b 55 24	 mov	 edx, DWORD PTR i$1[rbp]
  000c0	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c7	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  000ce	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetMeshName@CModel@Engine@@QEAAPEBDI@Z
  000d4	48 8b d0	 mov	 rdx, rax
  000d7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07ICGMBDOO@Cheek01?$AA@
  000de	e8 00 00 00 00	 call	 strcmp
  000e3	85 c0		 test	 eax, eax
  000e5	75 02		 jne	 SHORT $LN7@Render
$LN8@Render:

; 75   : 			continue;

  000e7	eb 96		 jmp	 SHORT $LN2@Render
$LN7@Render:

; 76   : 
; 77   : 		model->Setup_ShaderMaterialResource(shader, "g_DiffuseTexture", i, aiTextureType::aiTextureType_DIFFUSE);

  000e9	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  000f1	44 8b 4d 24	 mov	 r9d, DWORD PTR i$1[rbp]
  000f5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BB@FMIBAICL@g_DiffuseTexture?$AA@
  000fc	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00103	48 8b 90 90 00
	00 00		 mov	 rdx, QWORD PTR [rax+144]
  0010a	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00111	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00118	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Setup_ShaderMaterialResource@CModel@Engine@@QEAAJPEAVCShader@2@PEBDIW4aiTextureType@@@Z

; 78   : 
; 79   : 		model->Setup_BoneMatrices(shader, "g_BoneMatrix", i);

  0011e	44 8b 4d 24	 mov	 r9d, DWORD PTR i$1[rbp]
  00122	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0N@OEHGEODD@g_BoneMatrix?$AA@
  00129	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00130	48 8b 90 90 00
	00 00		 mov	 rdx, QWORD PTR [rax+144]
  00137	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0013e	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00145	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Setup_BoneMatrices@CModel@Engine@@QEAAJPEAVCShader@2@PEBDI@Z

; 80   : 		shader->Begin(0);

  0014b	33 d2		 xor	 edx, edx
  0014d	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00154	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0015b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Begin@CShader@Engine@@QEAAJI@Z

; 81   : 		model->Render(i);

  00161	8b 55 24	 mov	 edx, DWORD PTR i$1[rbp]
  00164	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0016b	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00172	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Render@CModel@Engine@@QEAAJI@Z

; 82   : 	}

  00178	e9 02 ff ff ff	 jmp	 $LN2@Render
$LN3@Render:

; 83   : 
; 84   : 	return S_OK;

  0017d	33 c0		 xor	 eax, eax
$LN1@Render:

; 85   : }

  0017f	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00186	5f		 pop	 rdi
  00187	5d		 pop	 rbp
  00188	c3		 ret	 0
?Render@CEnemy@Client@@UEAAJXZ ENDP			; Client::CEnemy::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?LateTick@CEnemy@Client@@UEAAXN@Z
_TEXT	SEGMENT
animDesc$ = 8
tranMatrix$ = 48
$T5 = 528
$T6 = 624
$T7 = 708
$T8 = 816
$T9 = 900
$T10 = 1008
$T11 = 1104
$T12 = 1200
$T13 = 1296
__$ArrayPad$ = 1368
this$ = 1408
TimeDelta$ = 1416
?LateTick@CEnemy@Client@@UEAAXN@Z PROC			; Client::CEnemy::LateTick, COMDAT

; 43   : {

$LN4:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	55		 push	 rbp
  0000c	56		 push	 rsi
  0000d	57		 push	 rdi
  0000e	48 81 ec 90 05
	00 00		 sub	 rsp, 1424		; 00000590H
  00015	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 64 01 00 00	 mov	 ecx, 356		; 00000164H
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 b8
	05 00 00	 mov	 rcx, QWORD PTR [rsp+1464]
  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00038	48 33 c5	 xor	 rax, rbp
  0003b	48 89 85 58 05
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 44   : 	__super::LateTick(TimeDelta);

  00042	f2 0f 10 8d 88
	05 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  0004a	48 8b 8d 80 05
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?LateTick@CGameObject@Engine@@UEAAXN@Z

; 45   : 
; 46   : 	CAnimation::ANIMATION_DESC animDesc;
; 47   : 	ZeroMemory(&animDesc, sizeof(CAnimation::ANIMATION_DESC));

  00057	41 b8 08 00 00
	00		 mov	 r8d, 8
  0005d	33 d2		 xor	 edx, edx
  0005f	48 8d 4d 08	 lea	 rcx, QWORD PTR animDesc$[rbp]
  00063	e8 00 00 00 00	 call	 memset

; 48   : 	animDesc.Clip = animation;

  00068	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006f	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [rax+168]
  00075	89 45 08	 mov	 DWORD PTR animDesc$[rbp], eax

; 49   : 	animDesc.Type = CAnimation::LOOP;

  00078	c7 45 0c 01 00
	00 00		 mov	 DWORD PTR animDesc$[rbp+4], 1

; 50   : 
; 51   : 	model->Setup_Animation(animDesc.Clip, true);

  0007f	41 b0 01	 mov	 r8b, 1
  00082	8b 55 08	 mov	 edx, DWORD PTR animDesc$[rbp]
  00085	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008c	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  00093	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Setup_Animation@CModel@Engine@@QEAAJI_N@Z

; 52   : 	model->Play_Animation(TimeDelta, transform, animDesc.Type);

  00099	c6 44 24 28 00	 mov	 BYTE PTR [rsp+40], 0
  0009e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc999999999999a
  000a6	f2 0f 11 44 24
	20		 movsd	 QWORD PTR [rsp+32], xmm0
  000ac	44 8b 4d 0c	 mov	 r9d, DWORD PTR animDesc$[rbp+4]
  000b0	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b7	4c 8b 80 80 00
	00 00		 mov	 r8, QWORD PTR [rax+128]
  000be	f2 0f 10 8d 88
	05 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  000c6	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cd	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Play_Animation@CModel@Engine@@QEAAJNPEAVCTransform@2@W4TYPE@CAnimation@2@N_N@Z

; 53   : 
; 54   : 
; 55   : 	_matrix tranMatrix = XMLoadFloat4x4(&bone->GetCombinedMatrix()) * XMLoadFloat4x4(&transform->Get_WorldMatrix());

  000da	48 8d 95 84 03
	00 00		 lea	 rdx, QWORD PTR $T9[rbp]
  000e1	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e8	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Get_WorldMatrix@CTransform@Engine@@QEAA?AUXMFLOAT4X4@DirectX@@XZ
  000f5	48 8b c8	 mov	 rcx, rax
  000f8	e8 00 00 00 00	 call	 ?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z ; DirectX::XMLoadFloat4x4
  000fd	0f 29 9d 40 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp+48], xmm3
  00104	0f 29 95 30 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp+32], xmm2
  0010b	0f 29 8d 20 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp+16], xmm1
  00112	0f 29 85 10 05
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  00119	48 8d 85 30 03
	00 00		 lea	 rax, QWORD PTR $T8[rbp]
  00120	48 8d 8d 10 05
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00127	48 8b f8	 mov	 rdi, rax
  0012a	48 8b f1	 mov	 rsi, rcx
  0012d	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00132	f3 a4		 rep movsb
  00134	48 8d 95 c4 02
	00 00		 lea	 rdx, QWORD PTR $T7[rbp]
  0013b	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00142	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  00149	e8 00 00 00 00	 call	 ?GetCombinedMatrix@CBone@Engine@@QEBA?AUXMFLOAT4X4@DirectX@@XZ ; Engine::CBone::GetCombinedMatrix
  0014e	48 8b c8	 mov	 rcx, rax
  00151	e8 00 00 00 00	 call	 ?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z ; DirectX::XMLoadFloat4x4
  00156	0f 29 9d 80 04
	00 00		 movaps	 XMMWORD PTR $T11[rbp+48], xmm3
  0015d	0f 29 95 70 04
	00 00		 movaps	 XMMWORD PTR $T11[rbp+32], xmm2
  00164	0f 29 8d 60 04
	00 00		 movaps	 XMMWORD PTR $T11[rbp+16], xmm1
  0016b	0f 29 85 50 04
	00 00		 movaps	 XMMWORD PTR $T11[rbp], xmm0
  00172	48 8d 85 70 02
	00 00		 lea	 rax, QWORD PTR $T6[rbp]
  00179	48 8d 8d 50 04
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00180	48 8b f8	 mov	 rdi, rax
  00183	48 8b f1	 mov	 rsi, rcx
  00186	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0018b	f3 a4		 rep movsb
  0018d	0f 28 85 30 03
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  00194	0f 28 8d 40 03
	00 00		 movaps	 xmm1, XMMWORD PTR $T8[rbp+16]
  0019b	0f 28 95 50 03
	00 00		 movaps	 xmm2, XMMWORD PTR $T8[rbp+32]
  001a2	0f 28 9d 60 03
	00 00		 movaps	 xmm3, XMMWORD PTR $T8[rbp+48]
  001a9	48 8d 8d 70 02
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  001b0	e8 00 00 00 00	 call	 ??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z ; DirectX::XMMATRIX::operator*
  001b5	0f 29 9d e0 04
	00 00		 movaps	 XMMWORD PTR $T12[rbp+48], xmm3
  001bc	0f 29 95 d0 04
	00 00		 movaps	 XMMWORD PTR $T12[rbp+32], xmm2
  001c3	0f 29 8d c0 04
	00 00		 movaps	 XMMWORD PTR $T12[rbp+16], xmm1
  001ca	0f 29 85 b0 04
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  001d1	48 8d 85 10 02
	00 00		 lea	 rax, QWORD PTR $T5[rbp]
  001d8	48 8d 8d b0 04
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  001df	48 8b f8	 mov	 rdi, rax
  001e2	48 8b f1	 mov	 rsi, rcx
  001e5	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  001ea	f3 a4		 rep movsb
  001ec	48 8d 45 30	 lea	 rax, QWORD PTR tranMatrix$[rbp]
  001f0	48 8d 8d 10 02
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  001f7	48 8b f8	 mov	 rdi, rax
  001fa	48 8b f1	 mov	 rsi, rcx
  001fd	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00202	f3 a4		 rep movsb

; 56   : 	collider->Update(tranMatrix);

  00204	48 8d 85 f0 03
	00 00		 lea	 rax, QWORD PTR $T10[rbp]
  0020b	48 8d 4d 30	 lea	 rcx, QWORD PTR tranMatrix$[rbp]
  0020f	48 8b f8	 mov	 rdi, rax
  00212	48 8b f1	 mov	 rsi, rcx
  00215	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0021a	f3 a4		 rep movsb
  0021c	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00223	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0022a	48 8b 8d 80 05
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00231	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00238	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0023b	48 8d 95 f0 03
	00 00		 lea	 rdx, QWORD PTR $T10[rbp]
  00242	ff 50 30	 call	 QWORD PTR [rax+48]

; 57   : 
; 58   : 	if (nullptr != renderer)

  00245	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0024c	48 83 78 78 00	 cmp	 QWORD PTR [rax+120], 0
  00251	74 1d		 je	 SHORT $LN2@LateTick

; 59   : 		renderer->Add_RenderGroup(CRenderer::RENDER_NONALPHA, this);

  00253	4c 8b 85 80 05
	00 00		 mov	 r8, QWORD PTR this$[rbp]
  0025a	ba 01 00 00 00	 mov	 edx, 1
  0025f	48 8b 85 80 05
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00266	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  0026a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Add_RenderGroup@CRenderer@Engine@@QEAAJW4RENDER_GROUP@12@PEAVCGameObject@2@@Z
$LN2@LateTick:

; 60   : 	
; 61   : }

  00270	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00274	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?LateTick@CEnemy@Client@@UEAAXN@Z$rtcFrameData
  0027b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00280	48 8b 8d 58 05
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00287	48 33 cd	 xor	 rcx, rbp
  0028a	e8 00 00 00 00	 call	 __security_check_cookie
  0028f	48 8d a5 60 05
	00 00		 lea	 rsp, QWORD PTR [rbp+1376]
  00296	5f		 pop	 rdi
  00297	5e		 pop	 rsi
  00298	5d		 pop	 rbp
  00299	c3		 ret	 0
?LateTick@CEnemy@Client@@UEAAXN@Z ENDP			; Client::CEnemy::LateTick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Tick@CEnemy@Client@@UEAAXN@Z
_TEXT	SEGMENT
this$ = 224
TimeDelta$ = 232
?Tick@CEnemy@Client@@UEAAXN@Z PROC			; Client::CEnemy::Tick, COMDAT

; 38   : {

$LN3:
  00000	f2 0f 11 4c 24
	10		 movsd	 QWORD PTR [rsp+16], xmm1
  00006	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000b	55		 push	 rbp
  0000c	57		 push	 rdi
  0000d	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 39   : 	__super::Tick(TimeDelta);

  00030	f2 0f 10 8d e8
	00 00 00	 movsd	 xmm1, QWORD PTR TimeDelta$[rbp]
  00038	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Tick@CGameObject@Engine@@UEAAXN@Z

; 40   : }

  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?Tick@CEnemy@Client@@UEAAXN@Z ENDP			; Client::CEnemy::Tick
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Initialize@CEnemy@Client@@UEAAJPEAX@Z
_TEXT	SEGMENT
this$ = 224
pArg$ = 232
?Initialize@CEnemy@Client@@UEAAJPEAX@Z PROC		; Client::CEnemy::Initialize, COMDAT

; 26   : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 27   : 	if (FAILED(__super::Initialize(pArg)))

  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR pArg$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Initialize@CGameObject@Engine@@UEAAJPEAX@Z
  00043	85 c0		 test	 eax, eax
  00045	7d 07		 jge	 SHORT $LN2@Initialize

; 28   : 		return E_FAIL;

  00047	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  0004c	eb 37		 jmp	 SHORT $LN1@Initialize
$LN2@Initialize:

; 29   : 
; 30   : 	AddComponents();

  0004e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ?AddComponents@CEnemy@Client@@AEAAJXZ ; Client::CEnemy::AddComponents

; 31   : 
; 32   : 	bone = model->GetBonePtr("Bip001");

  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06HFDDOAAP@Bip001?$AA@
  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	48 8b 88 88 00
	00 00		 mov	 rcx, QWORD PTR [rax+136]
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?GetBonePtr@CModel@Engine@@QEAAPEAVCBone@2@PEBD@Z
  00075	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007c	48 89 81 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rax

; 33   : 
; 34   : 	return S_OK;

  00083	33 c0		 xor	 eax, eax
$LN1@Initialize:

; 35   : }

  00085	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
?Initialize@CEnemy@Client@@UEAAJPEAX@Z ENDP		; Client::CEnemy::Initialize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?Initialize_Prototype@CEnemy@Client@@UEAAJXZ
_TEXT	SEGMENT
this$ = 224
?Initialize_Prototype@CEnemy@Client@@UEAAJXZ PROC	; Client::CEnemy::Initialize_Prototype, COMDAT

; 18   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 19   : 	if (FAILED(__super::Initialize_Prototype()))

  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?Initialize_Prototype@CGameObject@Engine@@UEAAJXZ
  00037	85 c0		 test	 eax, eax
  00039	7d 07		 jge	 SHORT $LN2@Initialize

; 20   : 		return E_FAIL;

  0003b	b8 05 40 00 80	 mov	 eax, -2147467259	; ffffffff80004005H
  00040	eb 02		 jmp	 SHORT $LN1@Initialize
$LN2@Initialize:

; 21   : 
; 22   : 	return S_OK;

  00042	33 c0		 xor	 eax, eax
$LN1@Initialize:

; 23   : }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?Initialize_Prototype@CEnemy@Client@@UEAAJXZ ENDP	; Client::CEnemy::Initialize_Prototype
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ??1CEnemy@Client@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1CEnemy@Client@@UEAA@XZ PROC				; Client::CEnemy::~CEnemy, COMDAT

; 10   : }

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1CGameObject@Engine@@MEAA@XZ
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1CEnemy@Client@@UEAA@XZ ENDP				; Client::CEnemy::~CEnemy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
; File c:\github\framework\client\public\enemy.h
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ??0CEnemy@Client@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
rhs$ = 232
??0CEnemy@Client@@QEAA@AEBV01@@Z PROC			; Client::CEnemy::CEnemy, COMDAT

; 14   : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 13   : 	: CGameObject(rhs)

  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR rhs$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0CGameObject@Engine@@IEAA@AEBV01@@Z

; 14   : {

  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CEnemy@Client@@6B@
  00051	48 89 08	 mov	 QWORD PTR [rax], rcx
; File c:\github\framework\client\public\enemy.h

; 46   : 	CRenderer* renderer = nullptr;

  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0

; 47   : 	CTransform* transform = nullptr;

  00063	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0

; 48   : 	CModel* model = nullptr;

  00075	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 49   : 	CShader* shader = nullptr;

  00087	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008e	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 50   : 	CCollider* collider = nullptr;

  00099	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a0	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0

; 51   : 
; 52   : private:
; 53   : 	class CBone* bone = nullptr;

  000ab	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b2	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0

; 54   : 
; 55   : 	_uint animation = 0;

  000bd	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c4	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+168], 0
; File c:\github\framework\client\private\enemy.cpp

; 15   : }

  000ce	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d5	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000dc	5f		 pop	 rdi
  000dd	5d		 pop	 rbp
  000de	c3		 ret	 0
??0CEnemy@Client@@QEAA@AEBV01@@Z ENDP			; Client::CEnemy::CEnemy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
; File c:\github\framework\client\public\enemy.h
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z
_TEXT	SEGMENT
this$ = 224
pDevice$ = 232
pContext$ = 240
??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z PROC ; Client::CEnemy::CEnemy, COMDAT

; 9    : {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]

; 8    : 	: CGameObject(pDevice, pContext)

  00034	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR pContext$[rbp]
  0003b	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR pDevice$[rbp]
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0CGameObject@Engine@@IEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z

; 9    : {

  0004f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CEnemy@Client@@6B@
  0005d	48 89 08	 mov	 QWORD PTR [rax], rcx
; File c:\github\framework\client\public\enemy.h

; 46   : 	CRenderer* renderer = nullptr;

  00060	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0

; 47   : 	CTransform* transform = nullptr;

  0006f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00076	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0

; 48   : 	CModel* model = nullptr;

  00081	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00088	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 49   : 	CShader* shader = nullptr;

  00093	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009a	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 50   : 	CCollider* collider = nullptr;

  000a5	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0

; 51   : 
; 52   : private:
; 53   : 	class CBone* bone = nullptr;

  000b7	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000be	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0

; 54   : 
; 55   : 	_uint animation = 0;

  000c9	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+168], 0
; File c:\github\framework\client\private\enemy.cpp

; 10   : }

  000da	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e1	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000e8	5f		 pop	 rdi
  000e9	5d		 pop	 rbp
  000ea	c3		 ret	 0
??0CEnemy@Client@@QEAA@PEAUID3D11Device@@PEAUID3D11DeviceContext@@@Z ENDP ; Client::CEnemy::CEnemy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
;	COMDAT ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z
_TEXT	SEGMENT
M1$ = 16
mResult$ = 112
vW$ = 208
vX$ = 256
vY$ = 304
vZ$ = 352
$T5 = 1360
$T6 = 1408
$T7 = 1456
$T8 = 1504
$T9 = 1552
$T10 = 1600
$T11 = 1648
$T12 = 1696
$T13 = 1744
$T14 = 1792
$T15 = 1840
$T16 = 1888
$T17 = 1936
$T18 = 1984
$T19 = 2032
$T20 = 2080
$T21 = 2128
$T22 = 2176
$T23 = 2224
$T24 = 2272
$T25 = 2320
$T26 = 2368
$T27 = 2416
$T28 = 2464
$T29 = 2512
$T30 = 2560
$T31 = 2608
$T32 = 2656
$T33 = 2704
$T34 = 2752
$T35 = 2800
$T36 = 2848
$T37 = 2896
$T38 = 2944
$T39 = 2992
$T40 = 3040
$T41 = 3088
$T42 = 3136
$T43 = 3184
$T44 = 3232
$T45 = 3280
$T46 = 3328
$T47 = 3376
$T48 = 3424
__$ArrayPad$ = 3448
M2$ = 3496
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z PROC ; DirectX::XMMatrixMultiply, COMDAT

; 226  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec b8 0d
	00 00		 sub	 rsp, 3512		; 00000db8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 6e 03 00 00	 mov	 ecx, 878		; 0000036eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00029	48 33 c5	 xor	 rax, rbp
  0002c	48 89 85 78 0d
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00033	48 8d 45 10	 lea	 rax, QWORD PTR M1$[rbp]
  00037	48 89 84 24 d0
	0d 00 00	 mov	 QWORD PTR [rsp+3536], rax
  0003f	0f 29 5d 40	 movaps	 XMMWORD PTR M1$[rbp+48], xmm3
  00043	0f 29 55 30	 movaps	 XMMWORD PTR M1$[rbp+32], xmm2
  00047	0f 29 4d 20	 movaps	 XMMWORD PTR M1$[rbp+16], xmm1
  0004b	0f 29 45 10	 movaps	 XMMWORD PTR M1$[rbp], xmm0

; 227  : #if defined(_XM_NO_INTRINSICS_)
; 228  :     XMMATRIX mResult;
; 229  :     // Cache the invariants in registers
; 230  :     float x = M1.m[0][0];
; 231  :     float y = M1.m[0][1];
; 232  :     float z = M1.m[0][2];
; 233  :     float w = M1.m[0][3];
; 234  :     // Perform the operation on the first row
; 235  :     mResult.m[0][0] = (M2.m[0][0]*x)+(M2.m[1][0]*y)+(M2.m[2][0]*z)+(M2.m[3][0]*w);
; 236  :     mResult.m[0][1] = (M2.m[0][1]*x)+(M2.m[1][1]*y)+(M2.m[2][1]*z)+(M2.m[3][1]*w);
; 237  :     mResult.m[0][2] = (M2.m[0][2]*x)+(M2.m[1][2]*y)+(M2.m[2][2]*z)+(M2.m[3][2]*w);
; 238  :     mResult.m[0][3] = (M2.m[0][3]*x)+(M2.m[1][3]*y)+(M2.m[2][3]*z)+(M2.m[3][3]*w);
; 239  :     // Repeat for all the other rows
; 240  :     x = M1.m[1][0];
; 241  :     y = M1.m[1][1];
; 242  :     z = M1.m[1][2];
; 243  :     w = M1.m[1][3];
; 244  :     mResult.m[1][0] = (M2.m[0][0]*x)+(M2.m[1][0]*y)+(M2.m[2][0]*z)+(M2.m[3][0]*w);
; 245  :     mResult.m[1][1] = (M2.m[0][1]*x)+(M2.m[1][1]*y)+(M2.m[2][1]*z)+(M2.m[3][1]*w);
; 246  :     mResult.m[1][2] = (M2.m[0][2]*x)+(M2.m[1][2]*y)+(M2.m[2][2]*z)+(M2.m[3][2]*w);
; 247  :     mResult.m[1][3] = (M2.m[0][3]*x)+(M2.m[1][3]*y)+(M2.m[2][3]*z)+(M2.m[3][3]*w);
; 248  :     x = M1.m[2][0];
; 249  :     y = M1.m[2][1];
; 250  :     z = M1.m[2][2];
; 251  :     w = M1.m[2][3];
; 252  :     mResult.m[2][0] = (M2.m[0][0]*x)+(M2.m[1][0]*y)+(M2.m[2][0]*z)+(M2.m[3][0]*w);
; 253  :     mResult.m[2][1] = (M2.m[0][1]*x)+(M2.m[1][1]*y)+(M2.m[2][1]*z)+(M2.m[3][1]*w);
; 254  :     mResult.m[2][2] = (M2.m[0][2]*x)+(M2.m[1][2]*y)+(M2.m[2][2]*z)+(M2.m[3][2]*w);
; 255  :     mResult.m[2][3] = (M2.m[0][3]*x)+(M2.m[1][3]*y)+(M2.m[2][3]*z)+(M2.m[3][3]*w);
; 256  :     x = M1.m[3][0];
; 257  :     y = M1.m[3][1];
; 258  :     z = M1.m[3][2];
; 259  :     w = M1.m[3][3];
; 260  :     mResult.m[3][0] = (M2.m[0][0]*x)+(M2.m[1][0]*y)+(M2.m[2][0]*z)+(M2.m[3][0]*w);
; 261  :     mResult.m[3][1] = (M2.m[0][1]*x)+(M2.m[1][1]*y)+(M2.m[2][1]*z)+(M2.m[3][1]*w);
; 262  :     mResult.m[3][2] = (M2.m[0][2]*x)+(M2.m[1][2]*y)+(M2.m[2][2]*z)+(M2.m[3][2]*w);
; 263  :     mResult.m[3][3] = (M2.m[0][3]*x)+(M2.m[1][3]*y)+(M2.m[2][3]*z)+(M2.m[3][3]*w);
; 264  :     return mResult;
; 265  : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 266  :     XMMATRIX mResult;
; 267  :     float32x2_t VL = vget_low_f32( M1.r[0] );
; 268  :     float32x2_t VH = vget_high_f32( M1.r[0] );
; 269  :     // Perform the operation on the first row
; 270  :     XMVECTOR vX = XM_VMULQ_LANE_F32(M2.r[0], VL, 0);
; 271  :     XMVECTOR vY = XM_VMULQ_LANE_F32(M2.r[1], VL, 1);
; 272  :     XMVECTOR vZ = XM_VMLAQ_LANE_F32(vX, M2.r[2], VH, 0);
; 273  :     XMVECTOR vW = XM_VMLAQ_LANE_F32(vY, M2.r[3], VH, 1);
; 274  :     mResult.r[0] = vaddq_f32( vZ, vW );
; 275  :     // Repeat for the other 3 rows
; 276  :     VL = vget_low_f32( M1.r[1] );
; 277  :     VH = vget_high_f32( M1.r[1] );
; 278  :     vX = XM_VMULQ_LANE_F32(M2.r[0], VL, 0);
; 279  :     vY = XM_VMULQ_LANE_F32(M2.r[1], VL, 1);
; 280  :     vZ = XM_VMLAQ_LANE_F32(vX, M2.r[2], VH, 0);
; 281  :     vW = XM_VMLAQ_LANE_F32(vY, M2.r[3], VH, 1);
; 282  :     mResult.r[1] = vaddq_f32( vZ, vW );
; 283  :     VL = vget_low_f32( M1.r[2] );
; 284  :     VH = vget_high_f32( M1.r[2] );
; 285  :     vX = XM_VMULQ_LANE_F32(M2.r[0], VL, 0);
; 286  :     vY = XM_VMULQ_LANE_F32(M2.r[1], VL, 1);
; 287  :     vZ = XM_VMLAQ_LANE_F32(vX, M2.r[2], VH, 0);
; 288  :     vW = XM_VMLAQ_LANE_F32(vY, M2.r[3], VH, 1);
; 289  :     mResult.r[2] = vaddq_f32( vZ, vW );
; 290  :     VL = vget_low_f32( M1.r[3] );
; 291  :     VH = vget_high_f32( M1.r[3] );
; 292  :     vX = XM_VMULQ_LANE_F32(M2.r[0], VL, 0);
; 293  :     vY = XM_VMULQ_LANE_F32(M2.r[1], VL, 1);
; 294  :     vZ = XM_VMLAQ_LANE_F32(vX, M2.r[2], VH, 0);
; 295  :     vW = XM_VMLAQ_LANE_F32(vY, M2.r[3], VH, 1);
; 296  :     mResult.r[3] = vaddq_f32( vZ, vW );
; 297  :     return mResult;
; 298  : #elif defined(_XM_SSE_INTRINSICS_)
; 299  :     XMMATRIX mResult;

  0004f	48 8d 4d 70	 lea	 rcx, QWORD PTR mResult$[rbp]
  00053	e8 00 00 00 00	 call	 ??0XMMATRIX@DirectX@@QEAA@XZ ; DirectX::XMMATRIX::XMMATRIX

; 300  :     // Use vW to hold the original row
; 301  :     XMVECTOR vW = M1.r[0];

  00058	b8 10 00 00 00	 mov	 eax, 16
  0005d	48 6b c0 00	 imul	 rax, rax, 0
  00061	0f 10 44 05 10	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  00066	0f 11 85 d0 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 302  :     // Splat the component X,Y,Z then W
; 303  :     XMVECTOR vX = XM_PERMUTE_PS(vW,_MM_SHUFFLE(0,0,0,0));

  0006d	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00074	0f c6 85 d0 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  0007c	0f 29 85 50 05
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  00083	0f 28 85 50 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  0008a	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 304  :     XMVECTOR vY = XM_PERMUTE_PS(vW,_MM_SHUFFLE(1,1,1,1));

  00091	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00098	0f c6 85 d0 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  000a0	0f 29 85 80 05
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000a7	0f 28 85 80 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000ae	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 305  :     XMVECTOR vZ = XM_PERMUTE_PS(vW,_MM_SHUFFLE(2,2,2,2));

  000b5	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  000bc	0f c6 85 d0 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  000c4	0f 29 85 b0 05
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  000cb	0f 28 85 b0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  000d2	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 306  :     vW = XM_PERMUTE_PS(vW,_MM_SHUFFLE(3,3,3,3));

  000d9	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  000e0	0f c6 85 d0 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  000e8	0f 29 85 e0 05
	00 00		 movaps	 XMMWORD PTR $T8[rbp], xmm0
  000ef	0f 28 85 e0 05
	00 00		 movaps	 xmm0, XMMWORD PTR $T8[rbp]
  000f6	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 307  :     // Perform the operation on the first row
; 308  :     vX = _mm_mul_ps(vX,M2.r[0]);

  000fd	b8 10 00 00 00	 mov	 eax, 16
  00102	48 6b c0 00	 imul	 rax, rax, 0
  00106	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0010d	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  00114	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00118	0f 29 85 10 06
	00 00		 movaps	 XMMWORD PTR $T9[rbp], xmm0
  0011f	0f 28 85 10 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T9[rbp]
  00126	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 309  :     vY = _mm_mul_ps(vY,M2.r[1]);

  0012d	b8 10 00 00 00	 mov	 eax, 16
  00132	48 6b c0 01	 imul	 rax, rax, 1
  00136	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0013d	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  00144	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00148	0f 29 85 40 06
	00 00		 movaps	 XMMWORD PTR $T10[rbp], xmm0
  0014f	0f 28 85 40 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T10[rbp]
  00156	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 310  :     vZ = _mm_mul_ps(vZ,M2.r[2]);

  0015d	b8 10 00 00 00	 mov	 eax, 16
  00162	48 6b c0 02	 imul	 rax, rax, 2
  00166	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0016d	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  00174	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00178	0f 29 85 70 06
	00 00		 movaps	 XMMWORD PTR $T11[rbp], xmm0
  0017f	0f 28 85 70 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T11[rbp]
  00186	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 311  :     vW = _mm_mul_ps(vW,M2.r[3]);

  0018d	b8 10 00 00 00	 mov	 eax, 16
  00192	48 6b c0 03	 imul	 rax, rax, 3
  00196	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  0019d	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  001a4	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  001a8	0f 29 85 a0 06
	00 00		 movaps	 XMMWORD PTR $T12[rbp], xmm0
  001af	0f 28 85 a0 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T12[rbp]
  001b6	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 312  :     // Perform a binary add to reduce cumulative errors
; 313  :     vX = _mm_add_ps(vX,vZ);

  001bd	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  001c4	0f 58 85 60 01
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  001cb	0f 29 85 d0 06
	00 00		 movaps	 XMMWORD PTR $T13[rbp], xmm0
  001d2	0f 28 85 d0 06
	00 00		 movaps	 xmm0, XMMWORD PTR $T13[rbp]
  001d9	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 314  :     vY = _mm_add_ps(vY,vW);

  001e0	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  001e7	0f 58 85 d0 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  001ee	0f 29 85 00 07
	00 00		 movaps	 XMMWORD PTR $T14[rbp], xmm0
  001f5	0f 28 85 00 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T14[rbp]
  001fc	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 315  :     vX = _mm_add_ps(vX,vY);

  00203	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  0020a	0f 58 85 30 01
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  00211	0f 29 85 30 07
	00 00		 movaps	 XMMWORD PTR $T15[rbp], xmm0
  00218	0f 28 85 30 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T15[rbp]
  0021f	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 316  :     mResult.r[0] = vX;

  00226	b8 10 00 00 00	 mov	 eax, 16
  0022b	48 6b c0 00	 imul	 rax, rax, 0
  0022f	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  00236	0f 11 44 05 70	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 317  :     // Repeat for the other 3 rows
; 318  :     vW = M1.r[1];

  0023b	b8 10 00 00 00	 mov	 eax, 16
  00240	48 6b c0 01	 imul	 rax, rax, 1
  00244	0f 10 44 05 10	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  00249	0f 11 85 d0 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 319  :     vX = XM_PERMUTE_PS(vW,_MM_SHUFFLE(0,0,0,0));

  00250	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00257	0f c6 85 d0 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  0025f	0f 29 85 60 07
	00 00		 movaps	 XMMWORD PTR $T16[rbp], xmm0
  00266	0f 28 85 60 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T16[rbp]
  0026d	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 320  :     vY = XM_PERMUTE_PS(vW,_MM_SHUFFLE(1,1,1,1));

  00274	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0027b	0f c6 85 d0 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  00283	0f 29 85 90 07
	00 00		 movaps	 XMMWORD PTR $T17[rbp], xmm0
  0028a	0f 28 85 90 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T17[rbp]
  00291	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 321  :     vZ = XM_PERMUTE_PS(vW,_MM_SHUFFLE(2,2,2,2));

  00298	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0029f	0f c6 85 d0 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  002a7	0f 29 85 c0 07
	00 00		 movaps	 XMMWORD PTR $T18[rbp], xmm0
  002ae	0f 28 85 c0 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T18[rbp]
  002b5	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 322  :     vW = XM_PERMUTE_PS(vW,_MM_SHUFFLE(3,3,3,3));

  002bc	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  002c3	0f c6 85 d0 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  002cb	0f 29 85 f0 07
	00 00		 movaps	 XMMWORD PTR $T19[rbp], xmm0
  002d2	0f 28 85 f0 07
	00 00		 movaps	 xmm0, XMMWORD PTR $T19[rbp]
  002d9	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 323  :     vX = _mm_mul_ps(vX,M2.r[0]);

  002e0	b8 10 00 00 00	 mov	 eax, 16
  002e5	48 6b c0 00	 imul	 rax, rax, 0
  002e9	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  002f0	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  002f7	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  002fb	0f 29 85 20 08
	00 00		 movaps	 XMMWORD PTR $T20[rbp], xmm0
  00302	0f 28 85 20 08
	00 00		 movaps	 xmm0, XMMWORD PTR $T20[rbp]
  00309	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 324  :     vY = _mm_mul_ps(vY,M2.r[1]);

  00310	b8 10 00 00 00	 mov	 eax, 16
  00315	48 6b c0 01	 imul	 rax, rax, 1
  00319	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00320	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  00327	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0032b	0f 29 85 50 08
	00 00		 movaps	 XMMWORD PTR $T21[rbp], xmm0
  00332	0f 28 85 50 08
	00 00		 movaps	 xmm0, XMMWORD PTR $T21[rbp]
  00339	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 325  :     vZ = _mm_mul_ps(vZ,M2.r[2]);

  00340	b8 10 00 00 00	 mov	 eax, 16
  00345	48 6b c0 02	 imul	 rax, rax, 2
  00349	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00350	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  00357	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0035b	0f 29 85 80 08
	00 00		 movaps	 XMMWORD PTR $T22[rbp], xmm0
  00362	0f 28 85 80 08
	00 00		 movaps	 xmm0, XMMWORD PTR $T22[rbp]
  00369	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 326  :     vW = _mm_mul_ps(vW,M2.r[3]);

  00370	b8 10 00 00 00	 mov	 eax, 16
  00375	48 6b c0 03	 imul	 rax, rax, 3
  00379	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00380	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00387	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0038b	0f 29 85 b0 08
	00 00		 movaps	 XMMWORD PTR $T23[rbp], xmm0
  00392	0f 28 85 b0 08
	00 00		 movaps	 xmm0, XMMWORD PTR $T23[rbp]
  00399	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 327  :     vX = _mm_add_ps(vX,vZ);

  003a0	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  003a7	0f 58 85 60 01
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  003ae	0f 29 85 e0 08
	00 00		 movaps	 XMMWORD PTR $T24[rbp], xmm0
  003b5	0f 28 85 e0 08
	00 00		 movaps	 xmm0, XMMWORD PTR $T24[rbp]
  003bc	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 328  :     vY = _mm_add_ps(vY,vW);

  003c3	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  003ca	0f 58 85 d0 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  003d1	0f 29 85 10 09
	00 00		 movaps	 XMMWORD PTR $T25[rbp], xmm0
  003d8	0f 28 85 10 09
	00 00		 movaps	 xmm0, XMMWORD PTR $T25[rbp]
  003df	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 329  :     vX = _mm_add_ps(vX,vY);

  003e6	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  003ed	0f 58 85 30 01
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  003f4	0f 29 85 40 09
	00 00		 movaps	 XMMWORD PTR $T26[rbp], xmm0
  003fb	0f 28 85 40 09
	00 00		 movaps	 xmm0, XMMWORD PTR $T26[rbp]
  00402	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 330  :     mResult.r[1] = vX;

  00409	b8 10 00 00 00	 mov	 eax, 16
  0040e	48 6b c0 01	 imul	 rax, rax, 1
  00412	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  00419	0f 11 44 05 70	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 331  :     vW = M1.r[2];

  0041e	b8 10 00 00 00	 mov	 eax, 16
  00423	48 6b c0 02	 imul	 rax, rax, 2
  00427	0f 10 44 05 10	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  0042c	0f 11 85 d0 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 332  :     vX = XM_PERMUTE_PS(vW,_MM_SHUFFLE(0,0,0,0));

  00433	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0043a	0f c6 85 d0 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  00442	0f 29 85 70 09
	00 00		 movaps	 XMMWORD PTR $T27[rbp], xmm0
  00449	0f 28 85 70 09
	00 00		 movaps	 xmm0, XMMWORD PTR $T27[rbp]
  00450	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 333  :     vY = XM_PERMUTE_PS(vW,_MM_SHUFFLE(1,1,1,1));

  00457	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0045e	0f c6 85 d0 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  00466	0f 29 85 a0 09
	00 00		 movaps	 XMMWORD PTR $T28[rbp], xmm0
  0046d	0f 28 85 a0 09
	00 00		 movaps	 xmm0, XMMWORD PTR $T28[rbp]
  00474	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 334  :     vZ = XM_PERMUTE_PS(vW,_MM_SHUFFLE(2,2,2,2));

  0047b	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00482	0f c6 85 d0 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  0048a	0f 29 85 d0 09
	00 00		 movaps	 XMMWORD PTR $T29[rbp], xmm0
  00491	0f 28 85 d0 09
	00 00		 movaps	 xmm0, XMMWORD PTR $T29[rbp]
  00498	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 335  :     vW = XM_PERMUTE_PS(vW,_MM_SHUFFLE(3,3,3,3));

  0049f	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  004a6	0f c6 85 d0 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  004ae	0f 29 85 00 0a
	00 00		 movaps	 XMMWORD PTR $T30[rbp], xmm0
  004b5	0f 28 85 00 0a
	00 00		 movaps	 xmm0, XMMWORD PTR $T30[rbp]
  004bc	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 336  :     vX = _mm_mul_ps(vX,M2.r[0]);

  004c3	b8 10 00 00 00	 mov	 eax, 16
  004c8	48 6b c0 00	 imul	 rax, rax, 0
  004cc	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  004d3	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  004da	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  004de	0f 29 85 30 0a
	00 00		 movaps	 XMMWORD PTR $T31[rbp], xmm0
  004e5	0f 28 85 30 0a
	00 00		 movaps	 xmm0, XMMWORD PTR $T31[rbp]
  004ec	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 337  :     vY = _mm_mul_ps(vY,M2.r[1]);

  004f3	b8 10 00 00 00	 mov	 eax, 16
  004f8	48 6b c0 01	 imul	 rax, rax, 1
  004fc	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00503	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  0050a	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0050e	0f 29 85 60 0a
	00 00		 movaps	 XMMWORD PTR $T32[rbp], xmm0
  00515	0f 28 85 60 0a
	00 00		 movaps	 xmm0, XMMWORD PTR $T32[rbp]
  0051c	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 338  :     vZ = _mm_mul_ps(vZ,M2.r[2]);

  00523	b8 10 00 00 00	 mov	 eax, 16
  00528	48 6b c0 02	 imul	 rax, rax, 2
  0052c	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00533	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  0053a	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0053e	0f 29 85 90 0a
	00 00		 movaps	 XMMWORD PTR $T33[rbp], xmm0
  00545	0f 28 85 90 0a
	00 00		 movaps	 xmm0, XMMWORD PTR $T33[rbp]
  0054c	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 339  :     vW = _mm_mul_ps(vW,M2.r[3]);

  00553	b8 10 00 00 00	 mov	 eax, 16
  00558	48 6b c0 03	 imul	 rax, rax, 3
  0055c	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00563	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0056a	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  0056e	0f 29 85 c0 0a
	00 00		 movaps	 XMMWORD PTR $T34[rbp], xmm0
  00575	0f 28 85 c0 0a
	00 00		 movaps	 xmm0, XMMWORD PTR $T34[rbp]
  0057c	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 340  :     vX = _mm_add_ps(vX,vZ);

  00583	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  0058a	0f 58 85 60 01
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  00591	0f 29 85 f0 0a
	00 00		 movaps	 XMMWORD PTR $T35[rbp], xmm0
  00598	0f 28 85 f0 0a
	00 00		 movaps	 xmm0, XMMWORD PTR $T35[rbp]
  0059f	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 341  :     vY = _mm_add_ps(vY,vW);

  005a6	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  005ad	0f 58 85 d0 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  005b4	0f 29 85 20 0b
	00 00		 movaps	 XMMWORD PTR $T36[rbp], xmm0
  005bb	0f 28 85 20 0b
	00 00		 movaps	 xmm0, XMMWORD PTR $T36[rbp]
  005c2	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 342  :     vX = _mm_add_ps(vX,vY);

  005c9	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  005d0	0f 58 85 30 01
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  005d7	0f 29 85 50 0b
	00 00		 movaps	 XMMWORD PTR $T37[rbp], xmm0
  005de	0f 28 85 50 0b
	00 00		 movaps	 xmm0, XMMWORD PTR $T37[rbp]
  005e5	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 343  :     mResult.r[2] = vX;

  005ec	b8 10 00 00 00	 mov	 eax, 16
  005f1	48 6b c0 02	 imul	 rax, rax, 2
  005f5	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  005fc	0f 11 44 05 70	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 344  :     vW = M1.r[3];

  00601	b8 10 00 00 00	 mov	 eax, 16
  00606	48 6b c0 03	 imul	 rax, rax, 3
  0060a	0f 10 44 05 10	 movups	 xmm0, XMMWORD PTR M1$[rbp+rax]
  0060f	0f 11 85 d0 00
	00 00		 movups	 XMMWORD PTR vW$[rbp], xmm0

; 345  :     vX = XM_PERMUTE_PS(vW,_MM_SHUFFLE(0,0,0,0));

  00616	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0061d	0f c6 85 d0 00
	00 00 00	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 0
  00625	0f 29 85 80 0b
	00 00		 movaps	 XMMWORD PTR $T38[rbp], xmm0
  0062c	0f 28 85 80 0b
	00 00		 movaps	 xmm0, XMMWORD PTR $T38[rbp]
  00633	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 346  :     vY = XM_PERMUTE_PS(vW,_MM_SHUFFLE(1,1,1,1));

  0063a	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00641	0f c6 85 d0 00
	00 00 55	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 85 ; 00000055H
  00649	0f 29 85 b0 0b
	00 00		 movaps	 XMMWORD PTR $T39[rbp], xmm0
  00650	0f 28 85 b0 0b
	00 00		 movaps	 xmm0, XMMWORD PTR $T39[rbp]
  00657	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 347  :     vZ = XM_PERMUTE_PS(vW,_MM_SHUFFLE(2,2,2,2));

  0065e	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00665	0f c6 85 d0 00
	00 00 aa	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 170 ; 000000aaH
  0066d	0f 29 85 e0 0b
	00 00		 movaps	 XMMWORD PTR $T40[rbp], xmm0
  00674	0f 28 85 e0 0b
	00 00		 movaps	 xmm0, XMMWORD PTR $T40[rbp]
  0067b	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 348  :     vW = XM_PERMUTE_PS(vW,_MM_SHUFFLE(3,3,3,3));

  00682	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  00689	0f c6 85 d0 00
	00 00 ff	 shufps	 xmm0, XMMWORD PTR vW$[rbp], 255 ; 000000ffH
  00691	0f 29 85 10 0c
	00 00		 movaps	 XMMWORD PTR $T41[rbp], xmm0
  00698	0f 28 85 10 0c
	00 00		 movaps	 xmm0, XMMWORD PTR $T41[rbp]
  0069f	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 349  :     vX = _mm_mul_ps(vX,M2.r[0]);

  006a6	b8 10 00 00 00	 mov	 eax, 16
  006ab	48 6b c0 00	 imul	 rax, rax, 0
  006af	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  006b6	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  006bd	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  006c1	0f 29 85 40 0c
	00 00		 movaps	 XMMWORD PTR $T42[rbp], xmm0
  006c8	0f 28 85 40 0c
	00 00		 movaps	 xmm0, XMMWORD PTR $T42[rbp]
  006cf	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 350  :     vY = _mm_mul_ps(vY,M2.r[1]);

  006d6	b8 10 00 00 00	 mov	 eax, 16
  006db	48 6b c0 01	 imul	 rax, rax, 1
  006df	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  006e6	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  006ed	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  006f1	0f 29 85 70 0c
	00 00		 movaps	 XMMWORD PTR $T43[rbp], xmm0
  006f8	0f 28 85 70 0c
	00 00		 movaps	 xmm0, XMMWORD PTR $T43[rbp]
  006ff	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 351  :     vZ = _mm_mul_ps(vZ,M2.r[2]);

  00706	b8 10 00 00 00	 mov	 eax, 16
  0070b	48 6b c0 02	 imul	 rax, rax, 2
  0070f	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00716	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR vZ$[rbp]
  0071d	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00721	0f 29 85 a0 0c
	00 00		 movaps	 XMMWORD PTR $T44[rbp], xmm0
  00728	0f 28 85 a0 0c
	00 00		 movaps	 xmm0, XMMWORD PTR $T44[rbp]
  0072f	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR vZ$[rbp], xmm0

; 352  :     vW = _mm_mul_ps(vW,M2.r[3]);

  00736	b8 10 00 00 00	 mov	 eax, 16
  0073b	48 6b c0 03	 imul	 rax, rax, 3
  0073f	48 8b 8d a8 0d
	00 00		 mov	 rcx, QWORD PTR M2$[rbp]
  00746	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR vW$[rbp]
  0074d	0f 59 04 01	 mulps	 xmm0, XMMWORD PTR [rcx+rax]
  00751	0f 29 85 d0 0c
	00 00		 movaps	 XMMWORD PTR $T45[rbp], xmm0
  00758	0f 28 85 d0 0c
	00 00		 movaps	 xmm0, XMMWORD PTR $T45[rbp]
  0075f	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR vW$[rbp], xmm0

; 353  :     vX = _mm_add_ps(vX,vZ);

  00766	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  0076d	0f 58 85 60 01
	00 00		 addps	 xmm0, XMMWORD PTR vZ$[rbp]
  00774	0f 29 85 00 0d
	00 00		 movaps	 XMMWORD PTR $T46[rbp], xmm0
  0077b	0f 28 85 00 0d
	00 00		 movaps	 xmm0, XMMWORD PTR $T46[rbp]
  00782	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 354  :     vY = _mm_add_ps(vY,vW);

  00789	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR vY$[rbp]
  00790	0f 58 85 d0 00
	00 00		 addps	 xmm0, XMMWORD PTR vW$[rbp]
  00797	0f 29 85 30 0d
	00 00		 movaps	 XMMWORD PTR $T47[rbp], xmm0
  0079e	0f 28 85 30 0d
	00 00		 movaps	 xmm0, XMMWORD PTR $T47[rbp]
  007a5	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR vY$[rbp], xmm0

; 355  :     vX = _mm_add_ps(vX,vY);

  007ac	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  007b3	0f 58 85 30 01
	00 00		 addps	 xmm0, XMMWORD PTR vY$[rbp]
  007ba	0f 29 85 60 0d
	00 00		 movaps	 XMMWORD PTR $T48[rbp], xmm0
  007c1	0f 28 85 60 0d
	00 00		 movaps	 xmm0, XMMWORD PTR $T48[rbp]
  007c8	0f 29 85 00 01
	00 00		 movaps	 XMMWORD PTR vX$[rbp], xmm0

; 356  :     mResult.r[3] = vX;

  007cf	b8 10 00 00 00	 mov	 eax, 16
  007d4	48 6b c0 03	 imul	 rax, rax, 3
  007d8	0f 28 85 00 01
	00 00		 movaps	 xmm0, XMMWORD PTR vX$[rbp]
  007df	0f 11 44 05 70	 movups	 XMMWORD PTR mResult$[rbp+rax], xmm0

; 357  :     return mResult;

  007e4	0f 28 9d a0 00
	00 00		 movaps	 xmm3, XMMWORD PTR mResult$[rbp+48]
  007eb	0f 28 95 90 00
	00 00		 movaps	 xmm2, XMMWORD PTR mResult$[rbp+32]
  007f2	0f 28 8d 80 00
	00 00		 movaps	 xmm1, XMMWORD PTR mResult$[rbp+16]
  007f9	0f 28 45 70	 movaps	 xmm0, XMMWORD PTR mResult$[rbp]

; 358  : #endif
; 359  : }

  007fd	f3 0f 7f 44 24
	20		 movdqu	 XMMWORD PTR [rsp+32], xmm0
  00803	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00807	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z$rtcFrameData
  0080e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00813	f3 0f 6f 44 24
	20		 movdqu	 xmm0, XMMWORD PTR [rsp+32]
  00819	48 8b 8d 78 0d
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00820	48 33 cd	 xor	 rcx, rbp
  00823	e8 00 00 00 00	 call	 __security_check_cookie
  00828	48 8d a5 88 0d
	00 00		 lea	 rsp, QWORD PTR [rbp+3464]
  0082f	5f		 pop	 rdi
  00830	5d		 pop	 rbp
  00831	c3		 ret	 0
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z ENDP ; DirectX::XMMatrixMultiply
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathvector.inl
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = 208
x$ = 272
y$ = 280
z$ = 288
w$ = 296
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT

; 71   : {

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	f3 0f 11 44 24
	08		 movss	 DWORD PTR [rsp+8], xmm0
  00018	55		 push	 rbp
  00019	57		 push	 rdi
  0001a	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00021	48 8d 6c 24 10	 lea	 rbp, QWORD PTR [rsp+16]
  00026	48 8b fc	 mov	 rdi, rsp
  00029	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00033	f3 ab		 rep stosd

; 72   : #if defined(_XM_NO_INTRINSICS_)
; 73   :     XMVECTORF32 vResult = {x,y,z,w};
; 74   :     return vResult.v;
; 75   : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 76   :     float32x2_t V0 = vcreate_f32(((uint64_t)*(const uint32_t *)&x) | ((uint64_t)(*(const uint32_t *)&y) << 32));
; 77   :     float32x2_t V1 = vcreate_f32(((uint64_t)*(const uint32_t *)&z) | ((uint64_t)(*(const uint32_t *)&w) << 32));
; 78   :     return vcombine_f32(V0, V1);
; 79   : #elif defined(_XM_SSE_INTRINSICS_)
; 80   :     return _mm_set_ps( w, z, y, x );

  00035	f3 0f 10 85 28
	01 00 00	 movss	 xmm0, DWORD PTR w$[rbp]
  0003d	f3 0f 10 8d 20
	01 00 00	 movss	 xmm1, DWORD PTR z$[rbp]
  00045	f3 0f 10 95 18
	01 00 00	 movss	 xmm2, DWORD PTR y$[rbp]
  0004d	f3 0f 10 9d 10
	01 00 00	 movss	 xmm3, DWORD PTR x$[rbp]
  00055	0f 14 d9	 unpcklps xmm3, xmm1
  00058	0f 14 d0	 unpcklps xmm2, xmm0
  0005b	0f 28 c3	 movaps	 xmm0, xmm3
  0005e	0f 14 c2	 unpcklps xmm0, xmm2
  00061	0f 29 85 d0 00
	00 00		 movaps	 XMMWORD PTR $T1[rbp], xmm0
  00068	0f 28 85 d0 00
	00 00		 movaps	 xmm0, XMMWORD PTR $T1[rbp]

; 81   : #endif
; 82   : }

  0006f	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00076	5f		 pop	 rdi
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
;	COMDAT ?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z
_TEXT	SEGMENT
V$ = 16
pDestination$ = 272
?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z PROC ; DirectX::XMStoreFloat4, COMDAT

; 1538 : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 45 10	 lea	 rax, QWORD PTR V$[rbp]
  0002e	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR [rsp+312], rax
  00036	0f 29 4d 10	 movaps	 XMMWORD PTR V$[rbp], xmm1

; 1539 :     assert(pDestination);

  0003a	48 83 bd 10 01
	00 00 00	 cmp	 QWORD PTR pDestination$[rbp], 0
  00042	75 21		 jne	 SHORT $LN3@XMStoreFlo
  00044	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@2@T__m128@@@Z@4JA
  0004a	ff c0		 inc	 eax
  0004c	44 8b c0	 mov	 r8d, eax
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BK@FHLBGAOP@?$AAp?$AAD?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@
  0005d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00063	33 c0		 xor	 eax, eax
$LN3@XMStoreFlo:

; 1540 : #if defined(_XM_NO_INTRINSICS_)
; 1541 :     pDestination->x = V.vector4_f32[0];
; 1542 :     pDestination->y = V.vector4_f32[1];
; 1543 :     pDestination->z = V.vector4_f32[2];
; 1544 :     pDestination->w = V.vector4_f32[3];
; 1545 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 1546 :     vst1q_f32( reinterpret_cast<float*>(pDestination), V );
; 1547 : #elif defined(_XM_SSE_INTRINSICS_)
; 1548 :     _mm_storeu_ps( &pDestination->x, V );

  00065	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR pDestination$[rbp]
  0006c	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR V$[rbp]
  00070	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0

; 1549 : #endif
; 1550 : }

  00073	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
?XMStoreFloat4@DirectX@@YQXPEAUXMFLOAT4@1@T__m128@@@Z ENDP ; DirectX::XMStoreFloat4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathconvert.inl
;	COMDAT ?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z
_TEXT	SEGMENT
M$ = 16
$T4 = 304
$T5 = 352
$T6 = 400
$T7 = 448
__$ArrayPad$ = 472
pSource$ = 512
?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z PROC ; DirectX::XMLoadFloat4x4, COMDAT

; 1013 : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax

; 1014 :     assert(pSource);

  0003b	48 83 bd 00 02
	00 00 00	 cmp	 QWORD PTR pSource$[rbp], 0
  00043	75 21		 jne	 SHORT $LN3@XMLoadFloa
  00045	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@2@PEBUXMFLOAT4X4@2@@Z@4JA
  0004b	ff c0		 inc	 eax
  0004d	44 8b c0	 mov	 r8d, eax
  00050	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JE@DMOBBMDE@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAw?$AAi?$AAn?$AAd?$AAo?$AAw?$AAs?$AA?5?$AAk@
  00057	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1BA@LBADLIHI@?$AAp?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00064	33 c0		 xor	 eax, eax
$LN3@XMLoadFloa:

; 1015 : #if defined(_XM_NO_INTRINSICS_)
; 1016 : 
; 1017 :     XMMATRIX M;
; 1018 :     M.r[0].vector4_f32[0] = pSource->m[0][0];
; 1019 :     M.r[0].vector4_f32[1] = pSource->m[0][1];
; 1020 :     M.r[0].vector4_f32[2] = pSource->m[0][2];
; 1021 :     M.r[0].vector4_f32[3] = pSource->m[0][3];
; 1022 : 
; 1023 :     M.r[1].vector4_f32[0] = pSource->m[1][0];
; 1024 :     M.r[1].vector4_f32[1] = pSource->m[1][1];
; 1025 :     M.r[1].vector4_f32[2] = pSource->m[1][2];
; 1026 :     M.r[1].vector4_f32[3] = pSource->m[1][3];
; 1027 : 
; 1028 :     M.r[2].vector4_f32[0] = pSource->m[2][0];
; 1029 :     M.r[2].vector4_f32[1] = pSource->m[2][1];
; 1030 :     M.r[2].vector4_f32[2] = pSource->m[2][2];
; 1031 :     M.r[2].vector4_f32[3] = pSource->m[2][3];
; 1032 : 
; 1033 :     M.r[3].vector4_f32[0] = pSource->m[3][0];
; 1034 :     M.r[3].vector4_f32[1] = pSource->m[3][1];
; 1035 :     M.r[3].vector4_f32[2] = pSource->m[3][2];
; 1036 :     M.r[3].vector4_f32[3] = pSource->m[3][3];
; 1037 :     return M;
; 1038 : 
; 1039 : #elif defined(_XM_ARM_NEON_INTRINSICS_)
; 1040 :     XMMATRIX M;
; 1041 :     M.r[0] = vld1q_f32( reinterpret_cast<const float*>(&pSource->_11) );
; 1042 :     M.r[1] = vld1q_f32( reinterpret_cast<const float*>(&pSource->_21) );
; 1043 :     M.r[2] = vld1q_f32( reinterpret_cast<const float*>(&pSource->_31) );
; 1044 :     M.r[3] = vld1q_f32( reinterpret_cast<const float*>(&pSource->_41) );
; 1045 :     return M;
; 1046 : #elif defined(_XM_SSE_INTRINSICS_)
; 1047 :     XMMATRIX M;

  00066	48 8d 4d 10	 lea	 rcx, QWORD PTR M$[rbp]
  0006a	e8 00 00 00 00	 call	 ??0XMMATRIX@DirectX@@QEAA@XZ ; DirectX::XMMATRIX::XMMATRIX

; 1048 :     M.r[0] = _mm_loadu_ps( &pSource->_11 );

  0006f	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  00076	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00079	0f 29 85 30 01
	00 00		 movaps	 XMMWORD PTR $T4[rbp], xmm0
  00080	b8 10 00 00 00	 mov	 eax, 16
  00085	48 6b c0 00	 imul	 rax, rax, 0
  00089	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]
  00090	0f 11 44 05 10	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 1049 :     M.r[1] = _mm_loadu_ps( &pSource->_21 );

  00095	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  0009c	48 83 c0 10	 add	 rax, 16
  000a0	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000a3	0f 29 85 60 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  000aa	b8 10 00 00 00	 mov	 eax, 16
  000af	48 6b c0 01	 imul	 rax, rax, 1
  000b3	0f 28 85 60 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T5[rbp]
  000ba	0f 11 44 05 10	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 1050 :     M.r[2] = _mm_loadu_ps( &pSource->_31 );

  000bf	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  000c6	48 83 c0 20	 add	 rax, 32			; 00000020H
  000ca	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000cd	0f 29 85 90 01
	00 00		 movaps	 XMMWORD PTR $T6[rbp], xmm0
  000d4	b8 10 00 00 00	 mov	 eax, 16
  000d9	48 6b c0 02	 imul	 rax, rax, 2
  000dd	0f 28 85 90 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T6[rbp]
  000e4	0f 11 44 05 10	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 1051 :     M.r[3] = _mm_loadu_ps( &pSource->_41 );

  000e9	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR pSource$[rbp]
  000f0	48 83 c0 30	 add	 rax, 48			; 00000030H
  000f4	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000f7	0f 29 85 c0 01
	00 00		 movaps	 XMMWORD PTR $T7[rbp], xmm0
  000fe	b8 10 00 00 00	 mov	 eax, 16
  00103	48 6b c0 03	 imul	 rax, rax, 3
  00107	0f 28 85 c0 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T7[rbp]
  0010e	0f 11 44 05 10	 movups	 XMMWORD PTR M$[rbp+rax], xmm0

; 1052 :     return M;

  00113	0f 28 5d 40	 movaps	 xmm3, XMMWORD PTR M$[rbp+48]
  00117	0f 28 55 30	 movaps	 xmm2, XMMWORD PTR M$[rbp+32]
  0011b	0f 28 4d 20	 movaps	 xmm1, XMMWORD PTR M$[rbp+16]
  0011f	0f 28 45 10	 movaps	 xmm0, XMMWORD PTR M$[rbp]

; 1053 : #endif
; 1054 : }

  00123	f3 0f 7f 44 24
	20		 movdqu	 XMMWORD PTR [rsp+32], xmm0
  00129	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0012d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z$rtcFrameData
  00134	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00139	f3 0f 6f 44 24
	20		 movdqu	 xmm0, XMMWORD PTR [rsp+32]
  0013f	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00146	48 33 cd	 xor	 rcx, rbp
  00149	e8 00 00 00 00	 call	 __security_check_cookie
  0014e	48 8d a5 e8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+488]
  00155	5f		 pop	 rdi
  00156	5d		 pop	 rbp
  00157	c3		 ret	 0
?XMLoadFloat4x4@DirectX@@YQ?AUXMMATRIX@1@PEBUXMFLOAT4X4@1@@Z ENDP ; DirectX::XMLoadFloat4x4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMFLOAT4@DirectX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0XMFLOAT4@DirectX@@QEAA@XZ PROC			; DirectX::XMFLOAT4::XMFLOAT4, COMDAT

; 560  :     XMFLOAT4() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0XMFLOAT4@DirectX@@QEAA@XZ ENDP			; DirectX::XMFLOAT4::XMFLOAT4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 224
Float3$ = 232
??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z PROC		; DirectX::XMFLOAT3::operator=, COMDAT

; 509  :     XMFLOAT3& operator= (const XMFLOAT3& Float3) { x = Float3.x; y = Float3.y; z = Float3.z; return *this; }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00034	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float3$[rbp]
  0003b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [rcx]
  0003f	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004a	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float3$[rbp]
  00051	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [rcx+4]
  00056	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  0005b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR Float3$[rbp]
  00069	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [rcx+8]
  0006e	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00073	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
??4XMFLOAT3@DirectX@@QEAAAEAU01@AEBU01@@Z ENDP		; DirectX::XMFLOAT3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMFLOAT3@DirectX@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 224
_x$ = 232
_y$ = 240
_z$ = 248
??0XMFLOAT3@DirectX@@QEAA@MMM@Z PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT

; 506  :     XMFLOAT3(float _x, float _y, float _z) : x(_x), y(_y), z(_z) {}

$LN3:
  00000	f3 0f 11 5c 24
	20		 movss	 DWORD PTR [rsp+32], xmm3
  00006	f3 0f 11 54 24
	18		 movss	 DWORD PTR [rsp+24], xmm2
  0000c	f3 0f 11 4c 24
	10		 movss	 DWORD PTR [rsp+16], xmm1
  00012	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00017	55		 push	 rbp
  00018	57		 push	 rdi
  00019	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00020	48 8b ec	 mov	 rbp, rsp
  00023	48 8b fc	 mov	 rdi, rsp
  00026	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0003a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	f3 0f 10 85 e8
	00 00 00	 movss	 xmm0, DWORD PTR _x$[rbp]
  00049	f3 0f 11 00	 movss	 DWORD PTR [rax], xmm0
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	f3 0f 10 85 f0
	00 00 00	 movss	 xmm0, DWORD PTR _y$[rbp]
  0005c	f3 0f 11 40 04	 movss	 DWORD PTR [rax+4], xmm0
  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	f3 0f 10 85 f8
	00 00 00	 movss	 xmm0, DWORD PTR _z$[rbp]
  00070	f3 0f 11 40 08	 movss	 DWORD PTR [rax+8], xmm0
  00075	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
??0XMFLOAT3@DirectX@@QEAA@MMM@Z ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMFLOAT3@DirectX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0XMFLOAT3@DirectX@@QEAA@XZ PROC			; DirectX::XMFLOAT3::XMFLOAT3, COMDAT

; 505  :     XMFLOAT3() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0XMFLOAT3@DirectX@@QEAA@XZ ENDP			; DirectX::XMFLOAT3::XMFLOAT3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmathmatrix.inl
;	COMDAT ??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z
_TEXT	SEGMENT
M$ = 16
$T4 = 304
$T5 = 400
this$ = 512
??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z PROC		; DirectX::XMMATRIX::operator*, COMDAT

; 3044 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	48 81 ec 10 02
	00 00		 sub	 rsp, 528		; 00000210H
  0000f	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 84 00 00 00	 mov	 ecx, 132		; 00000084H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]
  0002b	48 8d 45 10	 lea	 rax, QWORD PTR M$[rbp]
  0002f	48 89 84 24 38
	02 00 00	 mov	 QWORD PTR [rsp+568], rax
  00037	0f 29 5d 40	 movaps	 XMMWORD PTR M$[rbp+48], xmm3
  0003b	0f 29 55 30	 movaps	 XMMWORD PTR M$[rbp+32], xmm2
  0003f	0f 29 4d 20	 movaps	 XMMWORD PTR M$[rbp+16], xmm1
  00043	0f 29 45 10	 movaps	 XMMWORD PTR M$[rbp], xmm0

; 3045 :     return XMMatrixMultiply(*this, M);

  00047	48 8d 55 10	 lea	 rdx, QWORD PTR M$[rbp]
  0004b	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00055	0f 10 48 10	 movups	 xmm1, XMMWORD PTR [rax+16]
  00059	0f 10 50 20	 movups	 xmm2, XMMWORD PTR [rax+32]
  0005d	0f 10 58 30	 movups	 xmm3, XMMWORD PTR [rax+48]
  00061	e8 00 00 00 00	 call	 ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@AEBU21@@Z ; DirectX::XMMatrixMultiply
  00066	0f 29 9d c0 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp+48], xmm3
  0006d	0f 29 95 b0 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp+32], xmm2
  00074	0f 29 8d a0 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp+16], xmm1
  0007b	0f 29 85 90 01
	00 00		 movaps	 XMMWORD PTR $T5[rbp], xmm0
  00082	48 8d 85 30 01
	00 00		 lea	 rax, QWORD PTR $T4[rbp]
  00089	48 8d 8d 90 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00090	48 8b f8	 mov	 rdi, rax
  00093	48 8b f1	 mov	 rsi, rcx
  00096	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0009b	f3 a4		 rep movsb
  0009d	0f 28 9d 60 01
	00 00		 movaps	 xmm3, XMMWORD PTR $T4[rbp+48]
  000a4	0f 28 95 50 01
	00 00		 movaps	 xmm2, XMMWORD PTR $T4[rbp+32]
  000ab	0f 28 8d 40 01
	00 00		 movaps	 xmm1, XMMWORD PTR $T4[rbp+16]
  000b2	0f 28 85 30 01
	00 00		 movaps	 xmm0, XMMWORD PTR $T4[rbp]

; 3046 : }

  000b9	f3 0f 7f 44 24
	20		 movdqu	 XMMWORD PTR [rsp+32], xmm0
  000bf	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  000c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z$rtcFrameData
  000ca	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cf	f3 0f 6f 44 24
	20		 movdqu	 xmm0, XMMWORD PTR [rsp+32]
  000d5	48 8d a5 e0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+480]
  000dc	5f		 pop	 rdi
  000dd	5e		 pop	 rsi
  000de	5d		 pop	 rbp
  000df	c3		 ret	 0
??DXMMATRIX@DirectX@@QEBQ?AU01@U01@@Z ENDP		; DirectX::XMMATRIX::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\8.1\include\um\directxmath.h
;	COMDAT ??0XMMATRIX@DirectX@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0XMMATRIX@DirectX@@QEAA@XZ PROC			; DirectX::XMMATRIX::XMMATRIX, COMDAT

; 413  :     XMMATRIX() {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
??0XMMATRIX@DirectX@@QEAA@XZ ENDP			; DirectX::XMMATRIX::XMMATRIX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\github\framework\client\private\enemy.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 192
tv67 = 200
__t$ = 240
__s$ = 248
__n$ = 256
__f$ = 264
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
$LN2@vector:
  00039	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __n$[rbp]
  00040	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv66[rbp], rax
  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __n$[rbp]
  0004e	48 ff c8	 dec	 rax
  00051	48 89 85 00 01
	00 00		 mov	 QWORD PTR __n$[rbp], rax
  00058	48 83 bd c0 00
	00 00 00	 cmp	 QWORD PTR tv66[rbp], 0
  00060	76 0c		 jbe	 SHORT $LN5@vector
  00062	c7 85 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0006c	eb 0a		 jmp	 SHORT $LN6@vector
$LN5@vector:
  0006e	c7 85 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN6@vector:
  00078	83 bd c8 00 00
	00 00		 cmp	 DWORD PTR tv67[rbp], 0
  0007f	74 2a		 je	 SHORT $LN3@vector
  00081	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __t$[rbp]
  00088	ff 95 08 01 00
	00		 call	 QWORD PTR __f$[rbp]
  0008e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __s$[rbp]
  00095	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __t$[rbp]
  0009c	48 03 c8	 add	 rcx, rax
  0009f	48 8b c1	 mov	 rax, rcx
  000a2	48 89 85 f0 00
	00 00		 mov	 QWORD PTR __t$[rbp], rax
  000a9	eb 8e		 jmp	 SHORT $LN2@vector
$LN3@vector:
  000ab	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
